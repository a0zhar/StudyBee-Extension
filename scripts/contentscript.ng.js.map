{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/shared/pipes/pipes.module.ts","webpack:///./src/app/shared/models/assessment.model.ts","webpack:///./src/app/shared/modules/setup/setup-steps/setup-steps.service.ts","webpack:///./src/main.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss?19c7","webpack:///./src/app/app.component.scss","webpack:///./src/app/shared/components/assessment-status-icon/assessment-status-icon.module.ts","webpack:///./src/app/shared/components/assessment-status-icon/assessment-status-icon.component.ts","webpack:///./src/app/shared/components/assessment-status-icon/assessment-status-icon.component.html","webpack:///./src/app/shared/components/assessment-status-icon/assessment-status-icon.component.scss?9a5c","webpack:///./src/app/shared/components/assessment-status-icon/assessment-status-icon.component.scss","webpack:///./src/app/shared/components/assessment-status-icon/assessment-status-icon.service.ts","webpack:///./src/app/shared/components/assignment-type-icon/assignment-type-icon.module.ts","webpack:///./src/app/shared/components/assignment-type-icon/assignment-type-icon.component.ts","webpack:///./src/app/shared/components/assignment-type-icon/assignment-type-icon.component.html","webpack:///./src/app/shared/components/assignment-type-icon/assignment-type-icon.component.scss?b128","webpack:///./src/app/shared/components/assignment-type-icon/assignment-type-icon.component.scss","webpack:///./src/app/shared/components/assignment-type-icon/assignment-type-icon.service.ts","webpack:///./src/app/shared/models/assignment.model.ts","webpack:///./src/app/shared/components/base-main-menu/base-main-menu.module.ts","webpack:///./src/app/shared/directives/click-stop-propagation.directive.ts","webpack:///./src/app/shared/directives/tooltip-ellipsis.directive.ts","webpack:///./src/app/shared/directives/ui-sref.directive.ts","webpack:///./src/app/shared/directives/highlight-text.directive.ts","webpack:///./src/app/shared/pipes/translate.pipe.ts","webpack:///./src/app/shared/pipes/sanitize.pipe.ts","webpack:///./src/app/shared/components/base-main-menu/base-main-menu.component.html","webpack:///./src/app/shared/components/base-main-menu/base-main-menu.component.scss?ec63","webpack:///./src/app/shared/components/base-main-menu/base-main-menu.component.scss","webpack:///./src/app/shared/upgrades/upgrades.module.ts","webpack:///./src/app/shared/upgrades/autocomplete.directive.ts","webpack:///./src/app/shared/modules/modules.module.ts","webpack:///./src/app/shared/modules/setup/setup.component.ts","webpack:///./src/app/shared/modules/setup/setup.component.html","webpack:///./src/app/shared/modules/setup/setup.component.scss?1d58","webpack:///./src/app/shared/modules/setup/setup.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/setup-steps.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/setup-steps.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/setup-steps.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/setup-steps.component.scss?64e4","webpack:///./src/app/shared/modules/setup/setup-steps/setup-steps.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/country-select-step/country-select-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/country-select-step/country-select-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/country-select-step/country-select-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/country-select-step/country-select-step.component.scss?1715","webpack:///./src/app/shared/modules/setup/setup-steps/country-select-step/country-select-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/setup-step/setup-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/setup-step/setup-step.component.scss?bbb6","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/setup-step/setup-step.component.scss","webpack:///./src/app/teacher/shared/states/countries/countries.service.ts","webpack:///./src/app/teacher/shared/states/countries/country.model.ts","webpack:///./src/app/shared/modules/setup/setup-steps/domain-check-step/domain-check-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/domain-check-step/domain-check-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/domain-check-step/domain-check-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/domain-check-step/domain-check-step.component.scss?7ea3","webpack:///./src/app/shared/modules/setup/setup-steps/domain-check-step/domain-check-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/agreement-missing-what-now/agreement-missing-what-now.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/agreement-missing-what-now/agreement-missing-what-now.component.scss?01fd","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/agreement-missing-what-now/agreement-missing-what-now.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/finish-step/finish-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/finish-step/finish-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/finish-step/finish-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/finish-step/finish-step.component.scss?58c9","webpack:///./src/app/shared/modules/setup/setup-steps/finish-step/finish-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/school-request-step/school-request-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/school-request-step/school-request-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/school-request-step/school-request-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/school-request-step/school-request-step.component.scss?0e3a","webpack:///./src/app/shared/modules/setup/setup-steps/school-request-step/school-request-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/school-select-step/school-select-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/school-select-step/school-select-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/school-select-step/school-select-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/school-select-step/school-select-step.component.scss?1d9a","webpack:///./src/app/shared/modules/setup/setup-steps/school-select-step/school-select-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-step/agreement-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-step/agreement-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-step/agreement-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-step/agreement-step.component.scss?a629","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-step/agreement-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-step/agreement-step.service.ts","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-missing-step/agreement-missing-step.module.ts","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-missing-step/agreement-missing-step.component.ts","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-missing-step/agreement-missing-step.component.html","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-missing-step/agreement-missing-step.component.scss?e9d6","webpack:///./src/app/shared/modules/setup/setup-steps/agreement-missing-step/agreement-missing-step.component.scss","webpack:///./src/app/shared/modules/setup/setup-steps/shared/setup-steps-shared.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/http/http.module.ts","webpack:///./src/app/core/environment/environment.module.ts","webpack:///./src/app/core/extension/extension.module.ts","webpack:///./src/app/core/extension/storage/storage.module.ts","webpack:///./src/app/core/init/init.module.ts","webpack:///./src/app/student/student.module.ts","webpack:///./src/app/student/main-menu/main-menu.module.ts","webpack:///./src/app/student/main-menu/main-menu.component.ts","webpack:///./src/app/student/main-menu/main-menu.component.html","webpack:///./src/app/student/main-menu/main-menu.component.scss?5e43","webpack:///./src/app/student/main-menu/main-menu.component.scss","webpack:///./src/app/student/assignments/assignments.module.ts","webpack:///./src/app/student/assignments/assignments.component.ts","webpack:///./src/app/student/assignments/assignments.component.html","webpack:///./src/app/student/assignments/assignments.component.scss?0639","webpack:///./src/app/student/assignments/assignments.component.scss","webpack:///./src/app/student/assignments/assignment/assignment.module.ts","webpack:///./src/app/student/assignments/assignment/assignment.component.ts","webpack:///./src/app/student/assignments/assignment/assignment.component.html","webpack:///./src/app/student/assignments/assignment/assignment.component.scss?f4d9","webpack:///./src/app/student/assignments/assignment/assignment.component.scss","webpack:///./src/app/teacher/teacher.module.ts","webpack:///./src/app/teacher/main-menu/main-menu.module.ts","webpack:///./src/app/teacher/main-menu/main-menu.component.ts","webpack:///./src/app/teacher/main-menu/main-menu.component.html","webpack:///./src/app/teacher/main-menu/main-menu.component.scss?be6b","webpack:///./src/app/teacher/main-menu/main-menu.component.scss","webpack:///./src/app/teacher/shared/shared.module.ts","webpack:///./src/app/teacher/shared/components/components.module.ts","webpack:///./src/app/shared/states/user/index.ts","webpack:///./src/app/teacher/shared/components/assessment-state-select/assessment-state-select.component.ts","webpack:///./src/app/teacher/shared/components/assessment-state-select/assessment-state-select.component.html","webpack:///./src/app/teacher/shared/components/assessment-state-select/assessment-state-select.component.scss?6b07","webpack:///./src/app/teacher/shared/components/assessment-state-select/assessment-state-select.component.scss","webpack:///./src/app/teacher/shared/states/students/student.service.ts","webpack:///./src/app/teacher/shared/states/students/student.model.ts","webpack:///./src/app/teacher/assignments/assignments.module.ts","webpack:///./src/app/teacher/assignments/assignments.component.ts","webpack:///./src/app/teacher/assignments/assignments.component.html","webpack:///./src/app/teacher/assignments/assignments.component.scss?dfbd","webpack:///./src/app/teacher/assignments/assignments.component.scss","webpack:///./src/app/teacher/assignments/assignment/assignment.module.ts","webpack:///./src/app/teacher/assignments/assignment/assignment.component.ts","webpack:///./src/app/teacher/assignments/assignment/assignment.component.html","webpack:///./src/app/teacher/assignments/assignment/assignment.component.scss?8d49","webpack:///./src/app/teacher/assignments/assignment/assignment.component.scss","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/state/assessments-visibility-dialog.query.ts","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/state/assessments-visibility-dialog.service.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/assessments.module.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/assessments.component.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/assessments.component.html","webpack:///./src/app/teacher/assignments/assignment/assessments/assessments.component.scss?fdb3","webpack:///./src/app/teacher/assignments/assignment/assessments/assessments.component.scss","webpack:///./src/app/teacher/assignments/assignment/assessments/assessment/assessment.module.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/assessment/assessment.component.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/assessment/assessment.component.html","webpack:///./src/app/teacher/assignments/assignment/assessments/assessment/assessment.component.scss?0f34","webpack:///./src/app/teacher/assignments/assignment/assessments/assessment/assessment.component.scss","webpack:///./src/app/teacher/assignments/shared/assignments-shared.module.ts","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/assessment-visibility-dialog.component.ts","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/assessment-visibility-dialog.component.html","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/assessment-visibility-dialog.component.scss?8fd5","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/assessment-visibility-dialog.component.scss","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/assessments-visibility-dialog.component.ts","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/assessments-visibility-dialog.component.html","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/assessments-visibility-dialog.component.scss?9927","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/assessments-visibility-dialog.component.scss","webpack:///./src/app/teacher/assignments/state/index.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/state/index.ts","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/setup-step/setup-step.component.ts","webpack:///./src/app/core/http/state/http-cache.store.ts","webpack:///./src/app/teacher/assignments/state/assignments.store.ts","webpack:///./src/app/teacher/assignments/state/assignment.model.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/state/assessments.store.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/state/assessment.model.ts","webpack:///./src/app/student/assignments/state/assignment.model.ts","webpack:///./src/app/student/assignments/state/assignments.store.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/app/shared/states/user/user.store.ts","webpack:///./src/app/shared/models/location-detection.model.ts","webpack:///./react_src/_locales sync ^\\.\\/.*\\/messages\\.json$","webpack:///./app/scripts/app/shared/enums/iconsPath.enum.ts","webpack:///./src/app/teacher/assignments/state/assignments.query.ts","webpack:///./src/app/student/assignments/state/index.ts","webpack:///./src/app/student/assignments/state/assignments.query.ts","webpack:///./src/app/shared/modules/setup/setup-steps/state/setup-step.model.ts","webpack:///./src/app/core/init/init.service.ts","webpack:///./src/app/shared/states/user/user.service.ts","webpack:///./src/app/shared/states/user/user.query.ts","webpack:///./src/app/shared/states/user/user.model.ts","webpack:///./src/app/shared/states/schools/school.interface.ts","webpack:///./src/app/shared/states/main-menu/main-menu.service.ts","webpack:///./src/app/shared/states/ui/ui.service.ts","webpack:///./src/app/shared/states/main-menu/main-menu.interface.ts","webpack:///./src lazy namespace object","webpack:///./src/app/core/http/http.model.ts","webpack:///./src/app/core/http/state/index.ts","webpack:///./src/app/core/http/state/http-cache.query.ts","webpack:///./src/app/core/http/state/http-cache.service.ts","webpack:///./src/app/teacher/assignments/state/assignments.service.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/state/assessments.query.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/state/assessments.service.ts","webpack:///./src/app/teacher/assignments/assignment/assessments/state/assessments.normalizer.ts","webpack:///./src/app/teacher/assignments/state/assignments.normalizer.ts","webpack:///./src/app/student/assignments/state/assignments.service.ts","webpack:///./src/app/student/assignments/state/assignments.normalizer.ts","webpack:///./app/scripts/app/app.html","webpack:///./src/app/shared/directives/directives.module.ts","webpack:///./src/app/shared/components/base-main-menu/base-main-menu.component.ts","webpack:///./src/app/shared/states/main-menu/main-menu.query.ts","webpack:///./src/app/shared/states/ui/ui.query.ts","webpack:///./src/app/core/environment/environment.model.ts","webpack:///./src/app/teacher/shared/states/countries/index.ts","webpack:///./src/app/teacher/shared/states/countries/countries.store.ts","webpack:///./src/app/core/environment/environment.service.ts","webpack:///./src/app/shared/modules/setup/setup-steps/shared/components/agreement-missing-what-now/agreement-missing-what-now.component.ts","webpack:///./src/app/shared/states/schools/schools.service.ts","webpack:///./src/app/teacher/shared/states/students/student.store.ts","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/state/index.ts","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/state/assessments-visibility-dialog.store.ts","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/state/assessment-visibility-dialog.service.ts","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/state/assessment-visibility-dialog.store.ts","webpack:///./react_src/i18n.js","webpack:///./src/app/downgrade.ts","webpack:///./src/app/shared/components/components.module.ts","webpack:///./src/app/shared/states/main-menu/main-menu.store.ts","webpack:///./src/app/shared/states/ui/ui.store.ts","webpack:///./src/app/shared/modules/setup/setup.module.ts","webpack:///./src/app/shared/models/user-info.model.ts","webpack:///./src/app/teacher/shared/states/countries/countries.query.ts","webpack:///./src/app/core/extension/storage/sync-storage.service.ts","webpack:///./src/app/shared/states/schools/schools.query.ts","webpack:///./src/app/shared/states/schools/schools.store.ts","webpack:///./src/app/teacher/shared/states/students/index.ts","webpack:///./src/app/teacher/shared/states/students/student.query.ts","webpack:///./src/app/teacher/assignments/shared/components/assessments-visibility-dialog/state/assessments-visibility-dialog.model.ts","webpack:///./src/app/teacher/assignments/shared/components/assessment-visibility-dialog/state/assessment-visibility-dialog.query.ts","webpack:///./src/app/core/http/http.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/ajs-upgraded-providers.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","PipesModule","NgModule","declarations","SanitizePipe","TranslatePipe","imports","CommonModule","AssessmentStatusOld","AssessmentStatus","AssessmentSort","initService","this","selectPath","BehaviorSubject","selectStep","setStep","step","path","has","next","Observable","subscriber","stepSetup","complete","previous","updatePath","locationDetection","getLocationDetection","is_teacher","teacherPath","studentPath","getStep","getPath","Map","hasUserInfo","userInfo","getUserInfo","existing_user_setup","agreement_seen","gdpr_check","set","Steps","DOMAIN_CHECK","StepConfig","AGREEMENT","COUNTRY_SELECT","SCHOOL_SELECT","FINISH","SCHOOL_REQUEST","whitelisted_domain","AGREEMENT_MISSING","SetupStepsService","Injectable","providedIn","InitService","environment","production","enableProdMode","persistState","include","userSetupValidator","getSetupFromStorage","message","action","EnvironmentStorageKey","LOCATION","messageAsObservable","clearStorage","getUserSetup","API","method","url","getUserData","urls","API_EU","pipe","map","response","environmentStorage","chrome","runtime","sendMessage","validate","switchMap","storageSetup","userDataResponse","userData","userSetupResponse","status","forkJoin","responses","of","existing_user_setup_in_eu","us_location_detected","mapResponse","getToken$","observer","retry","error","retryWhen","errors","delay","requestConfig","storage","getUserSetup$","subscribe","AppModule","__annotations__","providers","provide","LOCATION_DETECTION","useValue","ENVIRONMENT_STORAGE","USER_INFO","PRE_FETCH_USER_DATA","TeacherModule","StudentModule","platformBrowserDynamic","bootstrapModule","then","platformRef","injector","NgZone","run","urlService","UrlService","setTimeout","listen","sync","catch","console","upgrade","ngDoBootstrap","appRef","setAngularJSGlobal","pageHead","pageBody","studybeeTemplate","append","forEach","filename","style","document","createElement","rel","type","href","extension","getURL","appName","config","$urlServiceProvider","deferIntercept","root","bootstrap","strictDi","AppComponent","AppRoutingModule","BrowserAnimationsModule","BrowserModule","HttpClientModule","SharedModule","UpgradeModule","CoreModule","UpgradedProviders","UISrefStatus","entryComponents","routes","RouterModule","forRoot","UIRouterUpgradeModule","LocationStrategy","useClass","PathLocationStrategy","APP_BASE_HREF","Component","selector","template","styles","toString","downgradeComponent","AssessmentStatusIconComponent","AssessmentStatusIconModule","MatIconModule","MatTooltipModule","assessmentStatusIconService","ngOnChanges","colorClass","getColorClass","isWarningVisible","ASSESSMENT_DONE","warning","SVG","getSVGIcon","tooltip","getTooltip","Input","AssessmentStatusIcon","changeDetection","ChangeDetectionStrategy","OnPush","AssessmentStatusIconService","matIconRegistry","domSanitizer","SVGIconNamespace","colors","ASSESSING","NOT_ASSESSED","tooltips","WARNING","registerIcon","IconsPath","SVG_ASSESSMENT_ASSESSING","SVG_ASSESSMENT_DONE","SVG_ASSESSMENT_NOT_ASSESSED","SVG_WARNING","getTranslation","iconName","iconPath","iconSafeUrl","bypassSecurityTrustResourceUrl","addSvgIconInNamespace","MatIconRegistry","DomSanitizer","AssignmentTypeIconComponent","AssignmentTypeIconModule","assignmentTypeIconService","changes","setDefault","currentValue","getClass","getIcon","getIconName","getSVG","AssignmentTypeIcon","AssignmentTypeIconService","AssignmentStatus","PUBLISHED","DELETED","DRAFT","AssignmentType","STANDARD_ASSIGNMENT","WITHOUT_ASSESSMENT_CRITERIAS","WORK_UNIT","SVG_WITHOUT_ASSESSMENT_CRITERIA","SVG_WORK_UNIT","assignmentTypeIcon","state","suffix","tooltipText","AssignmentWorktype","AssignmentSort","BaseMainMenuComponent","BaseMainMenuModule","MatSidenavModule","MatCardModule","MatListModule","DirectivesModule","onClick","$event","stopImmediatePropagation","stopPropagation","cancelBubble","HostListener","MouseEvent","ClickStopPropagationDirective","Directive","elementRef","onMouseEnter","setTooltipDisabled","isContentEllipsis","disabled","assign","matTooltip","nativeElement","offsetWidth","scrollWidth","ContentChild","MatTooltip","static","TooltipEllipsisDirective","ElementRef","$state","uiSrefStatus","renderer","appUiSrefOpt","appUiSrefProps","args","ngOnInit","destructed","appUiSref","match","replace","split","prop","def","transitionSubscription","_globals","start$","transition","activeClass","$to","startsWith","addClass","removeClass","ngOnDestroy","unsubscribe","event","preventDefault","debounce","go","Params","Event","UiSrefDirective","StateService","Renderer2","innerHTML","appHighlightText","onRender","content","change","regex","previousValue","createRegex","applyRegex","tokens","resolveTokens","reduce","html","token","isMatch","text","lastIndex","index","appendToken","from","to","targetText","term","flags","startFlag","includes","endFlag","regexTerm","sanitizeRegex","RegExp","HighlightTextDirective","transform","translationsKey","translation","Pipe","bypassSecurityTrustHtml","bypassSecurityTrustScript","bypassSecurityTrustStyle","bypassSecurityTrustUrl","UpgradesModule","AutocompleteDirective","schools","EventEmitter","School","Output","Injector","UpgradeComponent","ModulesModule","SetupModule","SetupComponent","SetupStepsComponent","downgradeInjectable","SetupStepsModule","AgreementMissingStepModule","AgreementStepModule","CountrySelectStepModule","DomainCheckStepModule","FinishStepModule","MatTabsModule","SchoolRequestStepModule","SchoolSelectStepModule","SetupStepsSharedModule","setupStepsService","setupStep$","untilDestroyed","tap","setupSteps","keys","step$","CountrySelectStepComponent","MatButtonModule","MatFormFieldModule","MatProgressSpinnerModule","MatSelectModule","ReactiveFormsModule","formBuilder","formsManager","countriesService","environmentService","formStructure","country","Validators","required","isLoading","selectionChange","countries$","form","valueChanges","countrySelect","formControl","states","FormControl","setControl","lastState","getForm","refreshUserInfo","update","values","filter","isNaN","remove","trackByCountryCode","country_code","compare","selectedCountry","FormBuilder","AkitaNgFormsManager","CountriesService","EnvironmentService","SetupStepComponent","countriesStore","countriesQuery","http","getHasCache","selectAll","getAPI","entities","entity","is_gdpr","CountriesStore","CountriesQuery","HttpService","params","DomainCheckStepComponent","matDialog","userQuery","domainChecked","requiredTrue","emailDomain","getValue","email","pop","showBackButton","check","setValue","showDialog","matDialogRef","open","AgreementMissingWhatNowComponent","height","maxHeight","maxWidth","panelClass","width","MatDialog","UserQuery","FinishStepComponent","wasSchoolRequest","SchoolRequestStepComponent","MatInputModule","schoolsService","userService","schoolCategories","SchoolCategory","K_12","HIGHER_EDUCATION","HOME_SCHOOL","CORPORATION","OTHER","countries","category","school_name","street_address","city","postal_code","website","comment","getAll","preSetForm","formValues","schoolRequest","getRawValue","registerSchool","schoolResponse","updateUser","SchoolsService","UserService","SchoolSelectStepComponent","MatAutocompleteModule","ScrollingModule","school","schoolValidator","emptySchool","id","is_intercom_enabled","title","minQueryLength","milliseconds","query","itemHeight","maxNumberOfItems","listHeight","countrySelectStep","combineLatest","startWith","fetchSchoolsFromCountry","debounceTime","queryFilter","userSetup","updateUserSetup","request","disableOption","normalizeQuery","toLowerCase","display","getSchoolName","trim","getCityName","trackById","control","MAT_TOOLTIP_DEFAULT_OPTIONS","showDelay","AgreementStepComponent","MatCheckboxModule","agreementStepService","$rootScope","accept","agreement$","take","syncStorage","post","fetchUser","setOldPath","setOldCourseId","$broadcast","countryControl","getControl","api_url","setAPI","AgreementStepService","RootScope","Path","languageCode","getLanguageCode","i18n","getUILanguage","toLocaleLowerCase","AgreementMissingStepComponent","ComponentsModule","MatDialogModule","closeDialog","close","HttpModule","EnvironmentModule","ExtensionModule","InitModule","StorageModule","SyncStorageService","AssignmentsModule","MainMenuModule","MainMenuComponent","uiService","uiQuery","maineMenuQuery","mainMenuService","ViewChild","MatSidenav","UiService","UiQuery","MainMenuQuery","MainMenuService","AssignmentsComponent","AssignmentsService","AssignmentsQuery","AssignmentsStore","AssignmentModule","assignmentsQuery","assignmentsAssessed","selectFilteredAndSorted","assignments","assignment","assignment_not_assessable","assignmentsNotAssessed","AssignmentComponent","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","collapsedHeight","expandedHeight","MAT_MENU_DEFAULT_OPTIONS","overlapTrigger","getType","AssignmentState","assignment_type","getStatus","fail_warning","status_new","Assignment","TeacherSharedModule","schoolsQuery","mainMenuQuery","updates","user$","user","setActive","school$","selectActive","refresh","updateAssignmentsAndStudents","getClassroomId","SchoolsQuery","Updates","StudentQuery","StudentService","StudentStore","AssessmentStateSelectComponent","statusChange","statusMenuItems","label","subscription","refreshAssessmentStatusIcon","trackByState","statusMenuItem","assessmentStatusIcon","studentStore","studentQuery","fetchData","getByAssessmentInCourse","assessmentID","courseID","students","getAllByAssessmentInCourse","getAssignmentsStudents","student_name","student_id","assessments","courses","upsertMany","FetchData","AssignmentsSharedModule","AssessmentsModule","assignmentsService","assessmentsService","assessmentsQuery","teacherAssignmentsService","assessmentsVisibilityDialogService","assignmentUI","ui","selectEntity","expand","updateUI","isExpanded","collapse","changeAssessmentsStatusForManyStudents","selectMany","assignmentVisibility","updateStatusForMany","noop","changeVisibility","assessment_last_changed","Date","getTime","AssessmentsService","AssessmentsQuery","TeacherAssignmentsService","AssessmentsVisibilityDialogService","store","AssessmentsVisibilityDialogQuery","AssessmentsVisibilityDialogStore","QueryEntity","assessmentsVisibilityDialogStore","studentService","assessmentsVisibilityDialogComponent","DEFAULT_CONFIG","afterClosed","Boolean","mapOptionsToValue","options","option","getSettings","getStudentSelectOptions","studentOptions","createFormGroup","visibilityOptions","getVisibilitySelectOptions","assessmentStatusOptions","getAvaialableAssessmentsStatus","controls","visibilities","VISIBILITY_OPTIONS","studentsID","save","assessmentsVisibilityDialog","upsert","assessmentsVisibilityDialogForm","build","group","mapFormToResponse","student_ids","grades_visible","AssessmentVisibility","GRADE","objectives_feedback_visible","OBJECTIVES_FEEDBACK","overall_feedback_visible","OVERALL_FEEDBACK","result_visible","RESULT","student","hasBackdrop","minHeight","Inject","ComponentType","AssessmentsComponent","AssessmentsStore","AssessmentModule","selectManySorted","ids","assessment","AssessmentComponent","assessmentVisibilityDialogService","menuItems","changeStatus","assessmentVisibilityDialog","statusUpdateBody","updateStatus","updateAssignmentTimestamp","Assessment","AssessmentVisibilityDialogService","AssessmentVisibilityDialogComponent","AssessmentsVisibilityDialogComponent","AssessmentVisibilityDialogQuery","AssessmentVisibilityDialogStore","changeDetectorRef","visibilityForm","detectChanges","MAT_DIALOG_DATA","ChangeDetectorRef","ID","allVisibilitiesChecked","allStudentsChecked","settings","assessmentsStatus","showVisibilitySection","updateVisibilitySelectAllState","updateStudentSelectAllState","toggleAllVisibility","emitEvent","filteredSelectedVisibilities","selectedCount","optionsCount","toggleAllStudent","filteredSelectedStudents","changeSelectedStatus","trackByValue","item","hasForm","restore","formState","stepName","HttpCacheStore","StoreConfig","EntityStore","createAssignments","createAssignmentsUI","createUIStore","setInitialEntityState","createAssignmentUI","setHasCache","forceRefreshEntities","runStoreAction","storeName","StoreActions","UpdateEntities","payload","entityIds","AssignmentSortBy","filters","EMPTY","sort","by","order","Order","ASC","createAssessments","createAssessmentsUI","release","API_US","mixPanel","raven","createInitialState","first_name","first_time_setup","google_id","last_name","photo_url","UserStore","LocationDetection","Store","InjectionToken","webpackContext","req","webpackContextResolve","e","Error","code","resolve","createUIQuery","filterBy","sortBy","stateUI","sortMethod","getSortMethod","SetupPaths","SetupStepRole","httpService","hasAppSetup","source","updateUserInfo","getEnvironmentStorage","userStore","preFetchUserData","select","Promise","sources","catchError","Optional","User","Query","mainMenuStore","initialize","userType","mainMenu","MainMenuStore","uiStore","updateIsMainMenuVisible","isMainMenuVisible","updateToggleMainMenuVisible","UiStore","MainMenuID","webpackEmptyAsyncContext","HttpRequestType","HttpCacheQuery","httpCacheStore","add","body","generateID","delete","hash","JSON","stringify","HttpCacheService","assignmentsStore","assessmentsStore","getFromAPI","setFilters","setSorting","assignment_state","unifyDateTimeFormat","updateAssignmentsType","normalizeAssignmentsResponse","normalizeResponse","putAssessmentsIntoStorage","putAssignmentsIntoStorage","assessmentLastChanged","assignmentCreated","assignment_created","transaction","NormalizedSchema","sortByStatusNew","indexOf","assignmentID","updateStatusAPI","updatedAssessment","assessmentVisibility","updateStatusForManyAPI","normalizeUpdates","normalizeUpdateStatusForManyResponse","assessmentsID","synchronizeWarningStatus","checkWarningStatusAPI","checkWarningStatus","studentID","patch","updateStatusForManyResponse","schema","Entity","normalize","assignmentsForTopic","assignments_for_topic","pack","isTeacher","version$","build$","toggleMainMenuVisibility","sidenav","toggle","version","mainMenu$","ngAfterViewInit","isMainMenuVisible$","closedStart","openedStart","help","translationURLKey","menuItem","EnvironmentLocation","idKey","syncStorageService","resolveAPI","merge","onChange","newValue","locally","dialogRef","MatDialogRef","schoolsStore","updateSchools","setLoading","fetchSchools","educationalSystemId","schoolsDataSource","educational_system","countryCode","fetchSchool","schoolDataSource","Number","isSafeInteger","hasEntity","SchoolsStore","assessmentVisibilityDialogQuery","assessmentVisibilityDialogStore","assessmentVisibilityDialogComponent","assessmentVisibilityDialogState","getEntity","saved","language","english","navigator","languages","userLanguage","log","getLanguage","componentName","component","directive","injectableName","injectable","factory","MatDividerModule","icon","iconColor","ASSIGNMENT","COURSE_PROGRESS","CURRICULUM","onChange$","Subject","addListener","onChanged","storageChange","areaName","loading","selectAllByAssessmentInCourse","httpCacheService","httpCacheQuery","sendAPIRequestWithParams","shareReplay","DELETE","GET","head","HEAD","OPTIONS","PATCH","POST","put","PUT","FormsModule","MatExpansionModule","MatMenuModule","MatRadioModule","MatRippleModule","MatStepperModule","SimpleProvider","useFactory","$injector","deps","UserInfo","UserSetupDialog"],"mappings":"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","file":"scripts/contentscript.ng.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1395,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslatePipe } from './translate.pipe';\nimport {SanitizePipe} from './sanitize.pipe';\n\n@NgModule({\n  declarations: [\n    SanitizePipe,\n    TranslatePipe,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TranslatePipe,\n    SanitizePipe,\n  ]\n})\nexport class PipesModule { }\n","import { ID } from '@datorama/akita';\n\nexport enum AssessmentStatusOld {\n  ND = 'ND',\n  NL = 'NL',\n  NV = 'NV',\n  NN = 'NN',\n  AV = 'AV',\n  AN = 'AN',\n  WV = 'WV',\n  WN = 'WN',\n}\n\nexport enum AssessmentStatus {\n  ASSESSING = 'ASSESSING',\n  ASSESSMENT_DONE = 'ASSESSMENT_DONE',\n  NOT_ASSESSED = 'NOT_ASSESSED',\n  WARNING = 'WARNING',\n}\n\nexport enum AssessmentSort {\n  ASC_FIRST_NAME = 'ASC_FIRST_NAME',\n  ASSESSMENT_DONE = 'ASSESSMENT_DONE',\n  DESC_FIRST_NAME = '-DESC_FIRST_NAME',\n  NOT_ASSESSED = 'NOT_ASSESSED',\n}\n\nexport interface Assessment {\n  assessment_status: AssessmentStatusOld;\n  fail_warning: boolean;\n  feedback?: string;\n  feedback_last_edit?: string;\n  feedback_published?: boolean;\n  id: ID;\n  private_note?: string;\n  private_note_last_edit?: string;\n  result?: string;\n  result_last_edit?: string;\n  result_published?: boolean;\n  status_new: AssessmentStatus;\n  student_id: ID;\n  student_name: string;\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {SetupSteps, StepConfig, Steps} from './state/setup-step.model';\nimport {InitService} from '../../../../core/init/init.service';\n\n@Injectable({providedIn: 'root'})\nexport class SetupStepsService {\n  readonly selectPath: BehaviorSubject<SetupSteps>;\n  readonly selectStep: BehaviorSubject<Steps>;\n  data: any;\n  protected path: SetupSteps;\n  protected step: Steps;\n\n  constructor(protected initService: InitService) {\n    this.selectPath = new BehaviorSubject<SetupSteps>(null);\n    this.selectStep = new BehaviorSubject<Steps>(null);\n    this.data = null;\n  }\n\n  setStep(step: Steps) {\n    if (this.path.has(step)) {\n      this.step = step;\n      this.selectStep.next(step);\n    }\n  }\n\n  next() {\n    return new Observable(subscriber => {\n      if (this.path.has(this.step)) {\n        const stepSetup = this.path.get(this.step);\n\n        if (stepSetup.next !== null) {\n          this.step = stepSetup.next;\n          this.selectStep.next(stepSetup.next);\n          subscriber.next();\n        }\n      }\n\n      subscriber.complete();\n    });\n  }\n\n  previous() {\n    return new Observable(subscriber => {\n      if (this.path.has(this.step)) {\n        const stepSetup = this.path.get(this.step);\n\n        if (stepSetup.previous !== null) {\n          this.step = stepSetup.previous;\n          this.selectStep.next(stepSetup.previous);\n          subscriber.next();\n        }\n      }\n\n      subscriber.complete();\n    });\n  }\n\n  updatePath() {\n    const locationDetection = this.initService.getLocationDetection();\n\n    this.path = locationDetection.is_teacher ? this.teacherPath() : this.studentPath();\n    this.selectPath.next(this.path);\n  }\n\n  getStep() {\n    return this.step;\n  }\n\n  getPath() {\n    return new Map(this.path);\n  }\n\n  protected teacherPath() {\n    const path: SetupSteps = new Map();\n    const hasUserInfo = this.initService.hasUserInfo();\n\n    if (hasUserInfo) {\n      const userInfo = this.initService.getUserInfo();\n\n      if (!userInfo.existing_user_setup) {\n        if (userInfo.gdpr_check) {\n          path.set(Steps.COUNTRY_SELECT, new StepConfig(Steps.DOMAIN_CHECK));\n          path.set(Steps.DOMAIN_CHECK, new StepConfig(Steps.SCHOOL_SELECT, Steps.COUNTRY_SELECT));\n          path.set(Steps.SCHOOL_SELECT, new StepConfig(Steps.FINISH, Steps.DOMAIN_CHECK));\n        } else {\n          path.set(Steps.COUNTRY_SELECT, new StepConfig(Steps.SCHOOL_SELECT));\n          path.set(Steps.SCHOOL_SELECT, new StepConfig(Steps.FINISH, Steps.COUNTRY_SELECT));\n        }\n        path.set(Steps.SCHOOL_REQUEST, new StepConfig(Steps.FINISH, Steps.SCHOOL_SELECT));\n        path.set(Steps.FINISH, new StepConfig(Steps.AGREEMENT));\n        path.set(Steps.AGREEMENT, new StepConfig());\n      } else if (userInfo.existing_user_setup && !userInfo.agreement_seen) {\n        if (userInfo.gdpr_check) {\n          path.set(Steps.DOMAIN_CHECK, new StepConfig(Steps.AGREEMENT));\n        }\n        path.set(Steps.AGREEMENT, new StepConfig());\n      }\n    } else {\n      path.set(Steps.COUNTRY_SELECT, new StepConfig(Steps.DOMAIN_CHECK));\n    }\n\n    return path;\n  }\n\n  protected studentPath() {\n    const path: SetupSteps = new Map();\n    const hasUserInfo = this.initService.hasUserInfo();\n\n    if (hasUserInfo) {\n      const userInfo = this.initService.getUserInfo();\n\n      if (userInfo.gdpr_check && !userInfo.whitelisted_domain) {\n        path.set(Steps.AGREEMENT_MISSING, new StepConfig());\n      } else {\n        path.set(Steps.AGREEMENT, new StepConfig());\n      }\n    } else {\n      path.set(Steps.AGREEMENT, new StepConfig());\n    }\n\n    return path;\n  }\n}\n","import './polyfills';\n\nimport {enableProdMode, NgZone} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {persistState} from '@datorama/akita';\nimport {UrlService} from '@uirouter/core';\nimport {BehaviorSubject, forkJoin, Observable, of} from 'rxjs';\nimport {delay, map, retryWhen, share, switchMap, tap} from 'rxjs/operators';\nimport {AppModule} from './app/app.module';\nimport {StudentModule} from './app/student/student.module';\nimport {TeacherModule} from './app/teacher/teacher.module';\nimport {environment} from './environments/environment';\nimport {LOCATION_DETECTION, LocationDetection} from './app/shared/models/location-detection.model';\nimport {ENVIRONMENT_STORAGE, EnvironmentStorage, EnvironmentStorageKey} from './app/core/environment/environment.model';\nimport {USER_INFO, UserInfo} from './app/shared/models/user-info.model';\nimport {PRE_FETCH_USER_DATA, User} from './app/shared/states/user';\n\nif (environment.production || !DEVELOPMENT_ENV) {\n  enableProdMode();\n}\n\npersistState({\n  include: [\n    'assessmentVisibilityDialog',\n    'assessmentsVisibilityDialog',\n    'assignments.ui',\n  ]\n});\n\ninterface UserSetupValidation {\n  environmentStorage: EnvironmentStorage;\n  locationDetection: LocationDetection;\n  userData?: User;\n  userInfo?: UserInfo;\n}\n\nclass UserSetupValidator {\n  getSetupFromStorage() {\n    const message = {\n      action: 'storageGet',\n      key: EnvironmentStorageKey.LOCATION\n    };\n\n    return this.messageAsObservable(message);\n  }\n\n  clearStorage() {\n    const message = {\n      action: 'storageRemove',\n      key: EnvironmentStorageKey.LOCATION,\n    };\n\n    return this.messageAsObservable(message);\n  }\n\n  getUserSetup(API) {\n    const message = {\n      action: 'fetchData',\n      data: {},\n      method: 'GET',\n      url: `${API}/schools/user_setup/`,\n    };\n\n    return this.messageAsObservable(message);\n  }\n\n  getUserData(API) {\n    const message = {\n      action: 'fetchData',\n      data: {},\n      method: 'GET',\n      url: `${API}/users/user_data/`,\n    };\n\n    return this.messageAsObservable(message);\n  }\n\n  getLocationDetection() {\n    const message = {\n      action: 'fetchData',\n      data: {},\n      method: 'GET',\n      url: `${environment.urls.API_EU}/users/location_detection/`,\n    };\n\n    return this.messageAsObservable(message).pipe(\n      map((response): any => ({\n        data: {\n          environmentStorage: {},\n          locationDetection: response.data,\n          userInfo: null,\n        }\n      })),\n    );\n  }\n\n  getUserInfo(API = environment.urls.API_EU) {\n    const message = {\n      action: 'fetchData',\n      data: {},\n      method: 'GET',\n      url: `${API}/users/user_info/`,\n    };\n\n    return this.messageAsObservable(message).pipe(\n      map((response): any => ({\n        data: {\n          environmentStorage: {},\n          locationDetection: response.data,\n          userInfo: response.data,\n        }\n      })),\n    );\n  }\n\n  messageAsObservable(message) {\n    return new Observable<any>(subscriber => {\n      chrome.runtime.sendMessage(message, response => {\n        subscriber.next(response);\n        subscriber.complete();\n      });\n    });\n  }\n\n  validate(): Observable<UserSetupValidation> {\n    return this.getSetupFromStorage().pipe(\n      switchMap(storageSetup => {\n        if (storageSetup && storageSetup.API) {\n          return this.getUserData(storageSetup.API).pipe(\n            switchMap(userDataResponse => {\n              const userData: User = userDataResponse.data as User;\n\n              if (userData.is_teacher) {\n                return this.getUserSetup(storageSetup.API).pipe(\n                  switchMap(userSetupResponse => {\n                    if (userSetupResponse.status === 404) {\n                      return this.clearStorage().pipe(\n                        switchMap(() => this.getLocationDetection()),\n                      );\n                    } else if (userSetupResponse.status === 403) {\n                      return forkJoin({\n                        locationDetection: this.getLocationDetection(),\n                        userInfo: this.getUserInfo(storageSetup.API),\n                      }).pipe(\n                        map(responses => ({\n                          data: {\n                            locationDetection: {...responses.locationDetection.data.locationDetection},\n                            userInfo: {...responses.userInfo.data.userInfo},\n                          }\n                        })));\n                    } else {\n                      return of({\n                        data: {\n                          locationDetection: {\n                            existing_user_setup_in_eu: storageSetup.API === environment.urls.API_EU,\n                            is_teacher: userData.is_teacher,\n                            us_location_detected: storageSetup.API !== environment.urls.API_EU,\n                          },\n                          environmentStorage: {...storageSetup},\n                          userData: {...userData, ...userSetupResponse.data},\n                          userInfo: {\n                            agreement_seen: true,\n                            existing_user_setup: true,\n                            gdpr_check: userData.gdpr_check,\n                            whitelisted_domain: true,\n                          },\n                        }\n                      });\n                    }\n                  }),\n                );\n              } else {\n                const mapResponse = {\n                  data: {\n                    locationDetection: {\n                      existing_user_setup_in_eu: storageSetup.API === environment.urls.API_EU,\n                      is_teacher: false,\n                      us_location_detected: storageSetup.API !== environment.urls.API_EU,\n                    },\n                    environmentStorage: {...storageSetup},\n                    userData: {\n                      ...userData,\n                    },\n                    userInfo: {\n                      agreement_seen: true,\n                      existing_user_setup: true,\n                      gdpr_check: userData.gdpr_check,\n                      whitelisted_domain: true,\n                    },\n                  },\n                };\n\n                return of(mapResponse);\n              }\n            }));\n        } else {\n          return this.getLocationDetection();\n        }\n      }),\n      map(response => response.data),\n    );\n  }\n}\n\nconst userSetupValidator = new UserSetupValidator();\n\nconst getToken$ = new Observable<any>((observer) => {\n  chrome.runtime.sendMessage({action: 'getToken'}, response => {\n    if (response && response.retry) {\n      observer.error();\n    } else {\n      observer.next(null);\n      observer.complete();\n    }\n  });\n}).pipe(retryWhen(errors => errors.pipe(delay(1000))));\n\nconst getLocationDetection$ = new Observable<LocationDetection>(observer => {\n  const requestConfig = {\n    action: 'fetchData',\n    data: {},\n    method: 'GET',\n    url: `${environment.urls.API_EU}/users/location_detection/`,\n  };\n\n  chrome.runtime.sendMessage(requestConfig, response => {\n    observer.next({...response.data});\n    observer.complete();\n  });\n\n});\n\nconst getEnvironmentStorage$ = new Observable<EnvironmentStorage>(subscriber => {\n  const requestConfig: any = {\n    action: 'storageGet',\n    key: EnvironmentStorageKey.LOCATION,\n  };\n\n  chrome.runtime.sendMessage(requestConfig, storage => {\n    subscriber.next({...storage});\n    subscriber.complete();\n  });\n});\n\nforkJoin({\n  getToken$,\n  getUserSetup$: userSetupValidator.validate(),\n}).subscribe({\n  next: response => {\n    (AppModule as any).__annotations__[0].providers.push({\n      provide: LOCATION_DETECTION,\n      useValue: new BehaviorSubject<LocationDetection>({...response.getUserSetup$.locationDetection}),\n    });\n    (AppModule as any).__annotations__[0].providers.push({\n      provide: ENVIRONMENT_STORAGE,\n      useValue: new BehaviorSubject<EnvironmentStorage>({...response.getUserSetup$.environmentStorage}),\n    });\n    (AppModule as any).__annotations__[0].providers.push({\n      provide: USER_INFO,\n      useValue: new BehaviorSubject<UserInfo>(response.getUserSetup$.userInfo ? {...response.getUserSetup$.userInfo} : null),\n    });\n\n    if (response.getUserSetup$.userData) {\n      (AppModule as any).__annotations__[0].providers.push({\n        provide: PRE_FETCH_USER_DATA,\n        useValue: {...response.getUserSetup$.userData},\n      });\n    }\n\n    if (response.getUserSetup$.locationDetection.is_teacher) {\n      (AppModule as any).__annotations__[0].imports.push(TeacherModule);\n    } else {\n      (AppModule as any).__annotations__[0].imports.push(StudentModule);\n    }\n  },\n  complete: () => {\n    platformBrowserDynamic().bootstrapModule(AppModule)\n      .then((platformRef) => {\n        platformRef.injector.get(NgZone).run((): void => {\n          const urlService: UrlService = platformRef.injector.get(UrlService);\n\n          setTimeout(() => {\n            urlService.listen();\n            urlService.sync();\n          }, 500);\n        });\n      })\n      .catch(console.error);\n  },\n});\n\n","import '@webcomponents/custom-elements/custom-elements.min';\nimport 'core-js/proposals/reflect-metadata';\nimport 'zone.js/dist/zone';\nimport '@angular/platform-browser';\nimport '@angular/core';\nimport '@angular/common';\nimport 'rxjs';\n","import { HttpClientModule } from '@angular/common/http';\nimport { ApplicationRef, DoBootstrap, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { setAngularJSGlobal, UpgradeModule } from '@angular/upgrade/static';\nimport { UISrefStatus } from '@uirouter/angular';\nimport angular from 'angular';\nimport $ from 'jquery';\nimport template from '../../app/scripts/app/app.html';\nimport { environment } from '../environments/environment';\nimport { UpgradedProviders } from './ajs-upgraded-providers';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport {CoreModule} from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    SharedModule,\n    UpgradeModule,\n    CoreModule,\n  ],\n  providers: [\n    ...UpgradedProviders.providers,\n    UISrefStatus,\n  ],\n  entryComponents: [\n    AppComponent,\n  ],\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private upgrade: UpgradeModule) {\n  }\n\n  public ngDoBootstrap(appRef: ApplicationRef): void {\n    setAngularJSGlobal(angular);\n    const pageHead = $('head');\n    const pageBody = $('body');\n    const studybeeTemplate = template;\n\n    pageBody.append(studybeeTemplate);\n\n    ['contentscript.css', 'styles.ng.css'].forEach((filename: string): void => {\n      const style = document.createElement('link');\n      style.rel = 'stylesheet';\n      style.type = 'text/css';\n      style.href = chrome.extension.getURL(`styles/${filename}`);\n\n      pageHead.append(style);\n    });\n\n    // Deffer URL synchronization\n    angular.module(environment.appName).config(['$urlServiceProvider', ($urlServiceProvider) => {\n      $urlServiceProvider.deferIntercept();\n    }]);\n\n    const root: JQuery = $('.studybee');\n\n    // Bootstrap Angular application.\n    this.upgrade.bootstrap(root[0], [environment.appName], { strictDi: true });\n  }\n}\n","import { APP_BASE_HREF, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UIRouterUpgradeModule } from '@uirouter/angular-hybrid';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    UIRouterUpgradeModule.forRoot(),\n  ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy,\n    },\n    {\n      provide: APP_BASE_HREF,\n      useValue: '/',\n    },\n  ],\n  exports: [\n    RouterModule,\n    UIRouterUpgradeModule,\n  ],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport template from './app.component.html';\nimport style from './app.component.scss';\n\n@Component({\n  selector: 'app-root',\n  template: template,\n  styles: [style]\n})\nexport class AppComponent {\n}\n","export default \"<p>root</p>\\n\";","\n        var result = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./app.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{display:block}\", \"\"]);\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatTooltipModule } from '@angular/material';\nimport { downgradeComponent } from '../../../downgrade';\nimport { AssessmentStatusIconComponent } from './assessment-status-icon.component';\n\n@NgModule({\n  declarations: [\n    AssessmentStatusIconComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n  entryComponents: [\n    AssessmentStatusIconComponent,\n  ],\n  exports: [\n    AssessmentStatusIconComponent,\n  ]\n})\nexport class AssessmentStatusIconModule {\n  constructor() {\n    downgradeComponent('appAssessmentStatusIcon', AssessmentStatusIconComponent);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\nimport { AssessmentStatus } from '../../models/assessment.model';\nimport template from './assessment-status-icon.component.html';\nimport style from './assessment-status-icon.component.scss';\nimport { AssessmentStatusIcon } from './assessment-status-icon.model';\nimport { AssessmentStatusIconService } from './assessment-status-icon.service';\n\n@Component({\n  selector: 'app-assessment-status-icon',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssessmentStatusIconComponent implements OnChanges {\n  @Input() status: AssessmentStatusIcon;\n  colorClass: string;\n  isWarningVisible: boolean;\n  SVG: string;\n  tooltip: string;\n\n  constructor(protected assessmentStatusIconService: AssessmentStatusIconService) { }\n\n  ngOnChanges() {\n    this.colorClass = this.assessmentStatusIconService.getColorClass(this.status);\n    this.isWarningVisible = this.status.status === AssessmentStatus.ASSESSMENT_DONE && this.status.warning;\n    this.SVG = this.assessmentStatusIconService.getSVGIcon(this.status);\n    this.tooltip = this.assessmentStatusIconService.getTooltip(this.status);\n  }\n}\n","export default \"<mat-icon [matTooltip]=\\\"tooltip\\\"\\n          matTooltipPosition=\\\"left\\\"\\n          [ngClass]=\\\"colorClass\\\"\\n          [svgIcon]=\\\"SVG\\\">\\n</mat-icon>\\n<mat-icon class=\\\"warning\\\"\\n          *ngIf=\\\"isWarningVisible\\\"\\n          svgIcon=\\\"AssessmentStatusSVGIcon:WARNING\\\">\\n</mat-icon>\\n\";","\n        var result = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assessment-status-icon.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{position:relative;height:24px;width:24px}:host ::ng-deep svg{width:24px;height:24px}:host .not-assessed ::ng-deep>*{fill:#607d8b}:host .assessing ::ng-deep>*{fill:#ff9800}:host .assessed ::ng-deep>*{fill:#00c853}:host .warning ::ng-deep>*{fill:#ff1744}:host .warning{bottom:0;height:11px;position:absolute;right:0;transform:translate(4px, -7px);width:11px}:host .warning ::ng-deep svg{width:11px;height:11px}\", \"\"]);\n","import { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { IconsPath } from '../../../../../app/scripts/app/shared/enums/iconsPath.enum';\nimport { AssessmentStatus } from '../../models/assessment.model';\nimport { AssessmentStatusIcon } from './assessment-status-icon.model';\nimport {getTranslation} from '../../../../../react_src/i18n';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AssessmentStatusIconService {\n  protected readonly SVGIconNamespace: string = 'AssessmentStatusSVGIcon';\n\n  protected readonly colors: Map<AssessmentStatus, string> = new Map<AssessmentStatus, string>([\n    [AssessmentStatus.ASSESSING, 'assessing'],\n    [AssessmentStatus.NOT_ASSESSED, 'not-assessed'],\n    [AssessmentStatus.ASSESSMENT_DONE, 'assessed'],\n  ]);\n\n  protected readonly tooltips: Map<AssessmentStatus, string> = new Map<AssessmentStatus, string>([\n    [AssessmentStatus.ASSESSING, 'assessingStatusIconTooltip'],\n    [AssessmentStatus.NOT_ASSESSED, 'notAssessedStatusIconTooltip'],\n    [AssessmentStatus.ASSESSMENT_DONE, 'assessmentDoneStatusIconTooltip'],\n    [AssessmentStatus.WARNING, 'assessmentDoneWarningStatusIconTooltip'],\n  ]);\n\n  constructor(protected matIconRegistry: MatIconRegistry, protected domSanitizer: DomSanitizer) {\n    this.registerIcon(AssessmentStatus.ASSESSING, IconsPath.SVG_ASSESSMENT_ASSESSING);\n    this.registerIcon(AssessmentStatus.ASSESSMENT_DONE, IconsPath.SVG_ASSESSMENT_DONE);\n    this.registerIcon(AssessmentStatus.NOT_ASSESSED, IconsPath.SVG_ASSESSMENT_NOT_ASSESSED);\n    this.registerIcon(AssessmentStatus.WARNING, IconsPath.SVG_WARNING);\n  }\n\n  public getColorClass(status: AssessmentStatusIcon): string {\n    return this.colors.get(status.status);\n  }\n\n  public getSVGIcon(status: AssessmentStatusIcon): string {\n    return `${this.SVGIconNamespace}:${status.status}`;\n  }\n\n  public getTooltip(status: AssessmentStatusIcon): string {\n    const tooltip = getTranslation(this.tooltips.get(status.status));\n    const warning = getTranslation(this.tooltips.get(AssessmentStatus.WARNING));\n\n    return status.status === AssessmentStatus.ASSESSMENT_DONE && status.warning ? `${tooltip} ${warning}` : tooltip;\n  }\n\n  private registerIcon(iconName: string, iconPath: string): void {\n    const iconSafeUrl: SafeResourceUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(chrome.runtime.getURL(`${iconPath}`));\n    this.matIconRegistry.addSvgIconInNamespace(this.SVGIconNamespace, `${iconName}`, iconSafeUrl);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule, MatTooltipModule } from '@angular/material';\nimport { downgradeComponent } from '../../../downgrade';\nimport { AssignmentTypeIconComponent } from './assignment-type-icon.component';\n\n@NgModule({\n  declarations: [\n    AssignmentTypeIconComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n  entryComponents: [\n    AssignmentTypeIconComponent,\n  ],\n  exports: [\n    AssignmentTypeIconComponent,\n  ],\n})\nexport class AssignmentTypeIconModule {\n  constructor() {\n    downgradeComponent('appAssignmentTypeIcon', AssignmentTypeIconComponent);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport template from './assignment-type-icon.component.html';\nimport style from './assignment-type-icon.component.scss';\nimport { AssignmentTypeIcon } from './assignment-type-icon.model';\nimport { AssignmentTypeIconService } from './assignment-type-icon.service';\n\n@Component({\n  selector: 'app-assignment-type-icon',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignmentTypeIconComponent implements OnChanges {\n  @Input() type: AssignmentTypeIcon;\n\n  constructor(protected assignmentTypeIconService: AssignmentTypeIconService) {\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    this.type = this.assignmentTypeIconService.setDefault(changes.type.currentValue);\n  }\n\n  getClass(): string {\n    return this.assignmentTypeIconService.getColorClass(this.type);\n  }\n\n  getIcon(): string {\n    return this.assignmentTypeIconService.getIconName(this.type);\n  }\n\n  getSVG(): string {\n    return this.assignmentTypeIconService.getSVGIcon(this.type);\n  }\n\n  getTooltip(): string {\n    return this.assignmentTypeIconService.getTooltip(this.type);\n  }\n}\n","export default \"<mat-icon [matTooltip]=\\\"getTooltip()\\\"\\n          matTooltipPosition=\\\"left\\\"\\n          [ngClass]=\\\"getClass()\\\"\\n          [svgIcon]=\\\"getSVG()\\\">{{ getIcon() }}\\n</mat-icon>\\n\";","\n        var result = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assignment-type-icon.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host mat-icon.mat-icon{align-items:center;background-color:#546e7a;border-radius:50%;color:#fff;display:inline-flex;height:40px;justify-content:center;width:40px}:host mat-icon.mat-icon.unit{background-color:#e65100}:host mat-icon.mat-icon.standard{background-color:#4caf50}:host mat-icon.mat-icon.draft{background-color:#bcbfc4}:host mat-icon.mat-icon ::ng-deep>svg{height:24px;width:24px}:host mat-icon.mat-icon ::ng-deep>svg>*{fill:#fff}\", \"\"]);\n","import { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { IconsPath } from '../../../../../app/scripts/app/shared/enums/iconsPath.enum';\nimport { AssignmentTypeIcon } from './assignment-type-icon.model';\nimport { AssignmentStatus, AssignmentType } from '../../models/assignment.model';\nimport {getTranslation} from '../../../../../react_src/i18n';\n\n@Injectable({ providedIn: 'root' })\nexport class AssignmentTypeIconService {\n\n  protected readonly SVGIconNamespace: string = 'AssignmentTypeSVGIcon';\n  protected readonly colors: Map<string, string> = new Map([\n    [`${AssignmentStatus.PUBLISHED}`, ''],\n    [`${AssignmentStatus.DELETED}`, ''],\n    [`${AssignmentStatus.DRAFT}`, 'draft'],\n    [`${AssignmentType.STANDARD_ASSIGNMENT}`, 'standard'],\n    [`${AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS}`, ''],\n    [`${AssignmentType.WORK_UNIT}`, 'unit'],\n  ]);\n  protected readonly tooltips: Map<string, string> = new Map([\n    [`${AssignmentStatus.PUBLISHED}`, ''],\n    [`${AssignmentStatus.DELETED}`, ''],\n    [`${AssignmentStatus.DRAFT}`, 'assignmentStateIconTooltipDraft'],\n    [`${AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS}`, 'assignmentTypeIconTooltipWithoutAssessmentCriteria'],\n    [`${AssignmentType.WORK_UNIT}`, 'assignmentTypeIconTooltipWorkUnit'],\n    [`${AssignmentType.STANDARD_ASSIGNMENT}`, 'assignmentTypeIconTooltipStandardAssignment'],\n  ]);\n\n  constructor(protected matIconRegistry: MatIconRegistry, protected domSanitizer: DomSanitizer) {\n    this.registerIcon(AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS, IconsPath.SVG_WITHOUT_ASSESSMENT_CRITERIA);\n    this.registerIcon(AssignmentType.WORK_UNIT, IconsPath.SVG_WORK_UNIT);\n  }\n\n  public getColorClass(assignmentTypeIcon: AssignmentTypeIcon): string {\n    return assignmentTypeIcon.state === AssignmentStatus.DRAFT ?\n      this.colors.get(AssignmentStatus.DRAFT) : this.colors.get(assignmentTypeIcon.type);\n  }\n\n  public getIconName(assignmentTypeIcon: AssignmentTypeIcon): string {\n    return assignmentTypeIcon.type === AssignmentType.STANDARD_ASSIGNMENT ? 'assignment' : '';\n  }\n\n  public getSVGIcon(assignmentTypeIcon: AssignmentTypeIcon): string {\n    return assignmentTypeIcon.type !== AssignmentType.STANDARD_ASSIGNMENT ?\n      `${this.SVGIconNamespace}:${assignmentTypeIcon.type}` : '';\n  }\n\n  public getTooltip(assignmentTypeIcon: AssignmentTypeIcon): string {\n    const suffix: string = getTranslation(this.tooltips.get(assignmentTypeIcon.state));\n    const tooltipText: string = getTranslation(this.tooltips.get(assignmentTypeIcon.type));\n\n    return suffix ? `${tooltipText} (${suffix})` : tooltipText;\n  }\n\n  public setDefault(assignmentTypeIcon: AssignmentTypeIcon): AssignmentTypeIcon {\n    return {\n      type: assignmentTypeIcon.type || AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS,\n      state: assignmentTypeIcon.state || AssignmentStatus.DRAFT,\n    };\n  }\n\n  private registerIcon(iconName: string, iconPath: string): void {\n    const iconSafeUrl: SafeResourceUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(chrome.runtime.getURL(`${iconPath}`));\n    this.matIconRegistry.addSvgIconInNamespace(this.SVGIconNamespace, `${iconName}`, iconSafeUrl);\n  }\n}\n","import { ID } from '@datorama/akita';\nimport { Assessment } from './assessment.model';\n\nexport enum AssignmentType {\n  STANDARD_ASSIGNMENT = 'STANDARD_ASSIGNMENT',\n  WITHOUT_ASSESSMENT_CRITERIAS = 'WITHOUT_ASSESSMENT_CRITERIAS',\n  WORK_UNIT = 'WORK_UNIT',\n}\n\nexport enum AssignmentStatus {\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED',\n  DELETED = 'DELETED',\n}\n\nexport enum AssignmentWorktype {\n  ASSIGNMENT = 'ASSIGNMENT',\n  SHORT_ANSWER_QUESTION = 'SHORT_ANSWER_QUESTION',\n}\n\nexport enum AssignmentSort {\n  CREATED_ASC = 'CREATED',\n  CREATED_DESC = '-CREATED',\n  LAST_CHANGED_ASC = 'LAST_CHANGED',\n  LAST_CHANGED_DESC = '-LAST_CHANGED',\n  TITLE_ASC = 'TITLE',\n  TITLE_DESC = '-TITLE',\n  TYPE_ASC = 'TYPE',\n  TYPE_DESC = '-TYPE',\n}\n\nexport interface AssignmentUI {\n  isExpanded?: boolean;\n  isVisible?: boolean;\n}\n\nexport interface Assignment {\n  alternate_link_id: string;\n  assessments: Assessment[];\n  assignment_not_assessable: boolean;\n  assignment_type: AssignmentType;\n  classroom_name: string;\n  id: ID;\n  state: AssignmentStatus;\n  title: string;\n  worktype: AssignmentWorktype;\n  ui?: AssignmentUI;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule, MatIconModule, MatListModule, MatSidenavModule } from '@angular/material';\nimport { downgradeComponent } from '../../../downgrade';\nimport { DirectivesModule } from '../../directives/directives.module';\nimport { PipesModule } from '../../pipes/pipes.module';\nimport { BaseMainMenuComponent } from './base-main-menu.component';\n\n@NgModule({\n  declarations: [\n    BaseMainMenuComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatListModule,\n    MatIconModule,\n    DirectivesModule,\n    PipesModule,\n  ],\n  entryComponents: [\n    BaseMainMenuComponent,\n  ],\n})\nexport class BaseMainMenuModule {\n  constructor() {\n    downgradeComponent('appBaseMainMenu', BaseMainMenuComponent);\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appClickStopPropagation]',\n})\nexport class ClickStopPropagationDirective {\n  @HostListener('click', ['$event']) onClick($event: MouseEvent): void {\n    $event.stopImmediatePropagation();\n    $event.stopPropagation();\n    $event.cancelBubble = true;\n  }\n}\n","import { ContentChild, Directive, ElementRef, HostListener } from '@angular/core';\nimport { MatTooltip } from '@angular/material';\n\n@Directive({\n  selector: '[appTooltipEllipsis]',\n})\nexport class TooltipEllipsisDirective {\n  @ContentChild(MatTooltip, { static: false }) matTooltip: MatTooltip;\n\n  constructor(protected elementRef: ElementRef) {\n  }\n\n  @HostListener('mouseenter') onMouseEnter(): void {\n    this.setTooltipDisabled(!this.isContentEllipsis());\n  }\n\n  protected setTooltipDisabled(disabled: boolean): void {\n    Object.assign(this.matTooltip || {}, { disabled });\n  }\n\n  protected isContentEllipsis(): boolean {\n    return this.elementRef.nativeElement.offsetWidth < this.elementRef.nativeElement.scrollWidth;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { UISrefStatus } from '@uirouter/angular';\nimport { StateService, Transition } from '@uirouter/core';\nimport { Subscription } from 'rxjs';\n\nexport interface UiSrefDirectiveOptions {\n  activeClass?: string;\n  debounce?: number;\n  stopPropagation?: boolean;\n}\n\n@Directive({\n  selector: '[appUiSref]',\n})\nexport class UiSrefDirective implements OnInit, OnDestroy {\n  @Input() appUiSref: string;\n  @Input() appUiSrefOpt: UiSrefDirectiveOptions = {};\n  @Input() appUiSrefProps: Params = {};\n\n  private args: { [prop: string]: any } = {};\n  private name: string;\n  private transitionSubscription: Subscription;\n\n  constructor(private $state: StateService,\n              private uiSrefStatus: UISrefStatus,\n              private renderer: Renderer2,\n              private elementRef: ElementRef) {\n  }\n\n  public ngOnInit() {\n    const destructed: RegExpMatchArray = this.appUiSref.match(/(.*?)\\(\\{(.*?)\\}\\)|$/);\n    this.name = destructed[1];\n\n    if (destructed[2]) {\n      const argsStr: string[] = destructed[2].replace(/ /g, '').split(',');\n      argsStr.forEach((prop: string): void => {\n        const def: string[] = prop.split(':');\n        this.args[def[0]] = def[1];\n      });\n    }\n\n    this.transitionSubscription = (this.uiSrefStatus as any)._globals.start$.subscribe((transition: Transition): void => {\n      if (this.appUiSrefOpt && this.appUiSrefOpt.activeClass) {\n        if (transition.$to().name.startsWith(this.appUiSref)) {\n          this.renderer.addClass(this.elementRef.nativeElement, this.appUiSrefOpt.activeClass);\n        } else {\n          this.renderer.removeClass(this.elementRef.nativeElement, this.appUiSrefOpt.activeClass);\n        }\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.transitionSubscription.unsubscribe();\n  }\n\n  @HostListener('click', ['$event'])\n  public onClick(event: Event): void {\n    event.preventDefault();\n\n    if (this.appUiSrefOpt.stopPropagation) {\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n    }\n\n    const debounce: number = this.appUiSrefOpt.debounce ? this.appUiSrefOpt.debounce : 0;\n    setTimeout(() => this.$state.go(this.appUiSref, this.appUiSrefProps), debounce);\n  }\n}\n","import {Directive, ElementRef, Input, OnChanges, SimpleChange, SimpleChanges} from '@angular/core';\n\n@Directive({\n  selector: '[appHighlightText]',\n})\nexport class HighlightTextDirective implements OnChanges {\n  @Input() appHighlightText: string;\n  regex: RegExp;\n\n  constructor(protected elementRef: ElementRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    setTimeout(() => {\n      if (this.elementRef.nativeElement.innerHTML.length > 0 && changes.appHighlightText.currentValue) {\n        this.onRender(this.elementRef.nativeElement.innerHTML, changes.appHighlightText);\n      }\n    });\n  }\n\n  onRender(content: string, change: SimpleChange) {\n    if (this.regex === null || change.currentValue !== change.previousValue) {\n      this.regex = this.createRegex(change.currentValue, 'iu');\n    }\n    if (change.currentValue) {\n      this.applyRegex(content);\n    } else {\n      this.elementRef.nativeElement.innerHTML = `${content}`;\n    }\n  }\n\n  applyRegex(content: string) {\n    const tokens = this.resolveTokens(content);\n\n    this.elementRef.nativeElement.innerHTML = tokens.reduce((html, token) =>\n        token.isMatch ? `${html}<span class=\"highlight\">${token.text}</span>` : `${html}${token}`,\n      '');\n  }\n\n  resolveTokens(content: string) {\n    let tokens = [];\n    let lastIndex = 0;\n\n    `${content}`.replace(this.regex, (match: string, index: number) => {\n      tokens = this.appendToken(tokens, content, lastIndex, index);\n\n      tokens.push({\n        text: match,\n        isMatch: true\n      });\n\n      lastIndex = index + match.length;\n\n      return '';\n    });\n\n\n    return this.appendToken(tokens, content, lastIndex);\n  }\n\n  appendToken(tokens: any[], content: string, from: number, to?: number) {\n    const targetText = content.slice(from, to);\n\n    return targetText ? [...tokens, targetText] : [...tokens];\n  }\n\n  createRegex(term: string, flags: string) {\n    const startFlag = flags.includes('^') ? '^' : '';\n    const endFlag = flags.includes('$') ? '$' : '';\n    const regexTerm = this.sanitizeRegex(term);\n\n    return new RegExp(`${startFlag}${regexTerm}${endFlag}`, flags.replace(/[$^]/g, ''));\n  }\n\n  sanitizeRegex(term: string) {\n    return term && `${term}`.replace(/[\\\\^$*+?.()|{}[\\]]/g, '\\\\$&');\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {getTranslation} from '../../../../react_src/i18n';\n\n@Pipe({ name: 'translate' })\nexport class TranslatePipe implements PipeTransform {\n\n  public transform(translationsKey: string = ''): any {\n    const translation: string = getTranslation(translationsKey);\n    return translation ? translation : translationsKey;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nexport type SanitizePipeType = 'html' | 'resourceUrl' | 'script' | 'style' | 'url';\n\n@Pipe({\n  name: 'sanitize'\n})\nexport class SanitizePipe implements PipeTransform {\n  constructor(protected domSanitizer: DomSanitizer) {\n  }\n\n  public transform(value: any, type: SanitizePipeType) {\n    switch (type) {\n      case 'html':\n        return this.domSanitizer.bypassSecurityTrustHtml(value);\n      case 'resourceUrl':\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(value);\n      case 'script':\n        return this.domSanitizer.bypassSecurityTrustScript(value);\n      case 'style':\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\n      case 'url':\n        return this.domSanitizer.bypassSecurityTrustUrl(value);\n      default:\n        return value;\n    }\n  }\n}\n","export default \"<mat-sidenav-container>\\n  <mat-sidenav #sidenav\\n               [fixedInViewport]=\\\"true\\\"\\n               [autoFocus]=\\\"false\\\"\\n               [mode]=\\\"'over'\\\">\\n    <mat-card class=\\\"mat-elevation-z0\\\"\\n              *ngIf=\\\"(user$ | async) as user\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar\\n             [style.background-image]=\\\"'url(' + user?.photo_url + ')'\\\"></div>\\n        <mat-card-title>{{ user?.first_name }} {{ user?.last_name }}</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <mat-nav-list>\\n          <a mat-list-item\\n             mat-button\\n             *ngFor=\\\"let mainMenuItem of mainMenu$ | async; trackBy trackById\\\"\\n             [appUiSref]=\\\"mainMenuItem.state\\\"\\n             [appUiSrefOpt]=\\\"{ debounce: 250, activeClass: 'active' }\\\">\\n            <mat-icon matListIcon\\n                      [ngClass]=\\\"mainMenuItem.iconColor\\\">{{ mainMenuItem.icon }}\\n            </mat-icon>\\n            <h4 mat-line>{{ mainMenuItem.label | translate }}</h4>\\n          </a>\\n        </mat-nav-list>\\n        <mat-divider></mat-divider>\\n        <mat-action-list>\\n          <button mat-list-item\\n                  mat-flat-button\\n                  (click)=\\\"help('mainMenuGetHelpUrl')\\\">\\n            <mat-icon matListIcon>help</mat-icon>\\n            <h3 matLine>{{ 'getHelpMainMenu' | translate }}</h3>\\n          </button>\\n        </mat-action-list>\\n      </mat-card-content>\\n    </mat-card>\\n  </mat-sidenav>\\n</mat-sidenav-container>\\n\";","\n        var result = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./base-main-menu.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host [version]{position:absolute;bottom:6px;right:6px}:host [version] p{font-size:10px;color:rgba(0,0,0,.5)}:host .mat-drawer-container{z-index:63}:host .mat-drawer{background-color:#fff}:host ::ng-deep .mat-drawer-backdrop{position:fixed}:host ::ng-deep .mat-list-base{padding-top:0}:host ::ng-deep .mat-list-base .mat-list-item .mat-list-text>*{color:rgba(0,0,0,.74);font-size:14px;font-weight:500;line-height:20px}:host mat-icon{color:var(--brand-color-grey)}:host mat-icon.green-icon{color:var(--brand-color-green)}:host mat-icon.pink-icon{color:var(--brand-color-pink)}:host mat-icon.blue-icon{color:var(--brand-color-blue)}:host mat-card{background-color:var(--brand-color-yellow);border-radius:0;padding:0}:host mat-card-header{flex-direction:column;max-width:260px;min-height:150px;min-width:260px;padding:16px 16px 0}:host mat-card-header ::ng-deep .mat-card-header-text{margin:20px 0 0}:host mat-card-header mat-card-title,:host mat-card-header mat-card-subtitle{color:rgba(0,0,0,.87)}:host mat-card-header mat-card-title{font-size:20px;line-height:20px;font-weight:500}:host mat-card-header mat-card-subtitle{font-size:14px;line-height:15px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host mat-card-header [mat-card-avatar]{background-size:cover;height:48px;width:48px}:host mat-card-content{padding:0;background-color:#fff}:host mat-card-content .mat-list-item.active{background:rgba(0,0,0,.08)}:host mat-card-content ::ng-deep .mat-list-item-content{padding:0}:host mat-card-content ::ng-deep .mat-list-item-content ::ng-deep .mat-list-text{padding-right:16px}:host mat-card-content ::ng-deep .mat-list-item-content mat-icon{padding:0 0 0 16px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AutocompleteDirective} from './autocomplete.directive';\n\n@NgModule({\n  declarations: [\n    AutocompleteDirective,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    AutocompleteDirective,\n  ]\n})\nexport class UpgradesModule {\n}\n","import {Directive, ElementRef, EventEmitter, Injector, Input, Output} from '@angular/core';\nimport {UpgradeComponent} from '@angular/upgrade/static';\nimport {School} from '../states/schools/school.interface';\n\n@Directive({\n  selector: 'ajs-autocomplete',\n})\nexport class AutocompleteDirective extends UpgradeComponent {\n  @Input() school: School;\n  @Input() schools: School[] = [];\n  @Input() disabled = false;\n  @Output() change = new EventEmitter<School>();\n\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('ajsAutocomplete', elementRef, injector);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SetupModule} from './setup/setup.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SetupModule,\n  ],\n  exports: [\n    SetupModule,\n  ]\n})\nexport class ModulesModule { }\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './setup.component.html';\nimport style from './setup.component.scss';\n\n@Component({\n  selector: 'app-setup',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SetupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"<header>\\n    <div class=\\\"logo\\\"></div>\\n</header>\\n<section>\\n  <app-setup-steps></app-setup-steps>\\n</section>\\n\";","\n        var result = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./setup.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{height:100%;width:100%;overflow:hidden;background-color:var(--theme-color);display:grid;grid-template-areas:\\\"head\\\" \\\"content\\\";grid-template-rows:82px 1fr}:host header{align-items:center;display:flex;flex-direction:row;grid-area:head;justify-content:flex-end;margin-bottom:24px;padding:0 16px;width:100%}:host .logo{background-image:var(--logo-url);background-position:center;background-repeat:no-repeat;background-size:96px 33px;height:33px;width:96px}:host section{display:grid;grid-area:content;grid-template-areas:\\\"steps\\\";grid-template-rows:1fr;overflow-x:hidden;overflow-y:auto}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SetupStepsComponent} from './setup-steps.component';\nimport {downgradeComponent, downgradeInjectable} from '../../../../downgrade';\nimport {CountrySelectStepModule} from './country-select-step/country-select-step.module';\nimport {DomainCheckStepModule} from './domain-check-step/domain-check-step.module';\nimport {FinishStepModule} from './finish-step/finish-step.module';\nimport {SchoolRequestStepModule} from './school-request-step/school-request-step.module';\nimport {SchoolSelectStepModule} from './school-select-step/school-select-step.module';\nimport {AgreementStepModule} from './agreement-step/agreement-step.module';\nimport {AgreementMissingStepModule} from './agreement-missing-step/agreement-missing-step.module';\nimport {MatTabsModule} from '@angular/material';\nimport {SetupStepsService} from './setup-steps.service';\nimport {SetupStepsSharedModule} from './shared/setup-steps-shared.module';\n\n@NgModule({\n  declarations: [\n    SetupStepsComponent,\n  ],\n  imports: [\n    AgreementMissingStepModule,\n    AgreementStepModule,\n    CommonModule,\n    CountrySelectStepModule,\n    DomainCheckStepModule,\n    FinishStepModule,\n    MatTabsModule,\n    SchoolRequestStepModule,\n    SchoolSelectStepModule,\n    SetupStepsSharedModule,\n  ],\n  exports: [\n    AgreementMissingStepModule,\n    AgreementStepModule,\n    CountrySelectStepModule,\n    DomainCheckStepModule,\n    FinishStepModule,\n    SchoolRequestStepModule,\n    SchoolSelectStepModule,\n    SetupStepsComponent,\n    SetupStepsSharedModule,\n  ],\n  entryComponents: [\n    SetupStepsComponent,\n  ]\n})\nexport class SetupStepsModule {\n  constructor() {\n    downgradeComponent('appSetupSteps', SetupStepsComponent);\n    downgradeInjectable('SetupStepsService', SetupStepsService);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport template from './setup-steps.component.html';\nimport style from './setup-steps.component.scss';\nimport {Observable} from 'rxjs';\nimport {SetupStepsService} from './setup-steps.service';\nimport {SetupSteps, Steps} from './state/setup-step.model';\nimport {tap} from 'rxjs/operators';\nimport {untilDestroyed} from 'ngx-take-until-destroy';\n\n@Component({\n  selector: 'app-setup-steps',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SetupStepsComponent implements OnInit, OnDestroy {\n  setupStep$: Observable<SetupSteps>;\n  step$: Observable<Steps>;\n\n  constructor(protected setupStepsService: SetupStepsService) { }\n\n  ngOnInit() {\n    this.setupStepsService.updatePath();\n    this.setupStep$ = this.setupStepsService.selectPath.pipe(\n      untilDestroyed(this),\n      tap(setupSteps => this.setupStepsService.setStep(setupSteps.keys().next().value))\n    );\n    this.step$ = this.setupStepsService.selectStep.pipe(\n      untilDestroyed(this),\n    );\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","export default \"<ng-container *ngIf=\\\"(setupStep$ | async)\\\">\\n  <mat-tab-group [selectedIndex]=\\\"step$ | async\\\">\\n    <mat-tab label=\\\"Country\\\">\\n      <ng-template matTabContent>\\n        <app-country-select-step></app-country-select-step>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"Domain\\\">\\n      <ng-template matTabContent>\\n        <app-domain-check-step></app-domain-check-step>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"School\\\">\\n      <ng-template matTabContent>\\n        <app-school-select-step></app-school-select-step>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"Request\\\">\\n      <ng-template matTabContent>\\n        <app-school-request-step></app-school-request-step>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"Finish\\\">\\n      <ng-template matTabContent>\\n        <app-finish-step></app-finish-step>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"Agreement\\\">\\n      <ng-template matTabContent>\\n        <app-agreement-step></app-agreement-step>\\n      </ng-template>\\n    </mat-tab>\\n    <mat-tab label=\\\"AgreementMissing\\\">\\n      <ng-template matTabContent>\\n        <app-agreement-missing-step></app-agreement-missing-step>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n</ng-container>\\n\";","\n        var result = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./setup-steps.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{grid-area:steps}:host mat-tab-group{height:100%}:host mat-tab-group ::ng-deep mat-tab-header{display:none}:host mat-tab-group ::ng-deep .mat-tab-body-wrapper{height:100%}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CountrySelectStepComponent} from './country-select-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule, MatFormFieldModule, MatProgressSpinnerModule, MatSelectModule} from '@angular/material';\nimport {PipesModule} from '../../../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    CountrySelectStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    PipesModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    CountrySelectStepComponent,\n  ],\n  entryComponents: [\n    CountrySelectStepComponent,\n  ]\n})\nexport class CountrySelectStepModule {\n  constructor() {\n    downgradeComponent('appCountrySelectStep', CountrySelectStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './country-select-step.component.html';\nimport style from './country-select-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {CountriesService, Country} from '../../../../../teacher/shared/states/countries';\nimport {Observable} from 'rxjs';\nimport {ID} from '@datorama/akita';\nimport isEqual from 'lodash.isequal';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {untilDestroyed} from 'ngx-take-until-destroy';\nimport {Steps} from '../state/setup-step.model';\nimport {EnvironmentService} from '../../../../../core/environment/environment.service';\nimport {SetupStepsService} from '../setup-steps.service';\nimport {InitService} from '../../../../../core/init/init.service';\n\n@Component({\n  selector: 'app-country-select-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountrySelectStepComponent extends SetupStepComponent implements OnInit {\n  formStructure = {\n    country: ['', Validators.required],\n    state: null,\n  };\n  countries$: Observable<Country[]>;\n  isLoading = false;\n  selectionChange = false;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>,\n              protected countriesService: CountriesService,\n              protected environmentService: EnvironmentService,\n              protected initService: InitService) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n  ngOnInit() {\n    this.countries$ = this.countriesService.get();\n    super.ngOnInit();\n    this.form.get('country').valueChanges.pipe(untilDestroyed(this)).subscribe((country: Country) => this.countrySelect(country));\n  }\n\n  countrySelect(country: Country) {\n    const formControl = country.states.length ? new FormControl('', Validators.required) : new FormControl(null);\n\n    this.form.setControl('state', formControl);\n\n    const lastState = (this.formsManager.getForm(`step${this.step}`) || {value: null}).value;\n    this.selectionChange = !isEqual(lastState, this.form.value);\n  }\n\n  next() {\n    const country: Country = this.form.get('country').value;\n\n    // this.environmentService.setAPI(country.api_url, true);\n\n    if (this.selectionChange) {\n      this.isLoading = true;\n      this.initService.refreshUserInfo().subscribe(() => {\n        this.setupStepsService.updatePath();\n        this.isLoading = false;\n        super.next();\n      });\n    } else {\n      super.next();\n    }\n  }\n\n  update() {\n    if (this.selectionChange) {\n      Object.values(Steps)\n        .filter(step => this.step !== step && !isNaN(+step))\n        .forEach(step => this.formsManager.remove(`step${step}`));\n    }\n\n    super.update();\n  }\n\n  trackByCountryCode(index: number, country: Country): ID {\n    return country.country_code;\n  }\n\n  compare(selectedCountry: Country, country: Country) {\n    return selectedCountry && country && selectedCountry.country_code === country.country_code;\n  }\n}\n","export default \"<ng-container *ngIf=\\\"(countries$ | async) as countries\\\">\\n  <section>\\n    <h1>{{'firstTimeSetupCountrySelectHeader' | translate}}</h1>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"{{'UserSetupInputLabelCountry' | translate}}\\\" formControlName=\\\"country\\\"\\n                    [compareWith]=\\\"compare\\\">\\n          <ng-container *ngFor=\\\"let country of countries; trackBy trackByCountryCode\\\">\\n            <mat-option [value]=\\\"country\\\">\\n              {{country.name}}\\n            </mat-option>\\n          </ng-container>\\n        </mat-select>\\n        <mat-hint>{{'firstTimeSetupCountrySelectHint' | translate}}</mat-hint>\\n      </mat-form-field>\\n\\n      <ng-container *ngIf=\\\"form.value.state !== null\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"{{ 'UserSetupInputLabelState' | translate }}\\\" formControlName=\\\"state\\\">\\n            <ng-container *ngFor=\\\"let state of form.value.country.states\\\">\\n              <mat-option [value]=\\\"state\\\">\\n                {{state}}\\n              </mat-option>\\n            </ng-container>\\n          </mat-select>\\n        </mat-form-field>\\n      </ng-container>\\n    </form>\\n  </section>\\n</ng-container>\\n<footer>\\n  <ng-container *ngIf=\\\"isLoading; else nextButton\\\">\\n    <button class=\\\"next\\\" mat-button [disabled]=\\\"isLoading\\\">\\n      <mat-spinner mode=\\\"indeterminate\\\" [diameter]=\\\"24\\\"></mat-spinner>\\n    </button>\\n  </ng-container>\\n  <ng-template #nextButton>\\n    <button class=\\\"next\\\" mat-button (click)=\\\"next()\\\" [disabled]=\\\"form.invalid\\\">\\n      {{'generalButtonLabelContinue' | translate}}\\n    </button>\\n  </ng-template>\\n</footer>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./country-select-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host h1{color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:20px;font-weight:500;line-height:24px;margin-bottom:25px}:host mat-hint{color:#000;font:Italic 10px/13px var(--brand-font-family);letter-spacing:0}:host footer{justify-content:flex-end}:host footer mat-spinner.mat-spinner ::ng-deep circle,:host footer mat-spinner.mat-progress-spinner ::ng-deep circle{stroke:#fff}\", \"\"]);\n","export default \"<section>Step</section>\\n<footer></footer>\\n\";","\n        var result = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!./setup-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}\", \"\"]);\n","import {Injectable} from '@angular/core';\nimport {CountriesStore} from './countries.store';\nimport {map, tap} from 'rxjs/operators';\nimport {HttpService} from '../../../../core/http/http.service';\nimport {CountriesQuery} from './countries.query';\nimport {Country} from './country.model';\nimport {entitiesToArray} from '@datorama/akita';\n\n@Injectable({ providedIn: 'root' })\nexport class CountriesService {\n\n  constructor(protected countriesStore: CountriesStore,\n              protected countriesQuery: CountriesQuery,\n              protected http: HttpService) {\n  }\n\n  get() {\n    return this.countriesQuery.getHasCache() ? this.countriesQuery.selectAll() : this.getAPI();\n  }\n\n  protected getAPI() {\n    return this.http.get<Country[]>('/v3/schools/countries/').pipe(\n      map(entities => entities.map(entity => ({...entity, is_gdpr: entity.country_code !== 'US'}))),\n      tap(entities => this.countriesStore.set(entities)),\n      );\n  }\n}\n","import { ID } from '@datorama/akita';\n\nexport interface Country {\n  api_url: string;\n  country_code: ID;\n  name: string;\n  states: string[];\n}\n\nexport function createCountry(params: Partial<Country>) {\n  return {\n    ...params,\n  } as Country;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomainCheckStepComponent} from './domain-check-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {MatButtonModule, MatIconModule} from '@angular/material';\nimport {PipesModule} from '../../../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    DomainCheckStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PipesModule,\n  ],\n  exports: [\n    DomainCheckStepComponent,\n  ],\n  entryComponents: [\n    DomainCheckStepComponent,\n  ]\n})\nexport class DomainCheckStepModule {\n\n  constructor() {\n    downgradeComponent('appDomainCheckStep', DomainCheckStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './domain-check-step.component.html';\nimport style from './domain-check-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {UserQuery} from '../../../../states/user';\nimport {SetupStepsService} from '../setup-steps.service';\nimport {InitService} from '../../../../../core/init/init.service';\nimport {AgreementMissingWhatNowComponent} from '../shared/components/agreement-missing-what-now/agreement-missing-what-now.component';\nimport {MatDialog, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-domain-check-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DomainCheckStepComponent extends SetupStepComponent implements OnInit {\n  formStructure = {\n    domainChecked: [null, Validators.requiredTrue]\n  };\n  emailDomain: string;\n  showBackButton: boolean;\n  matDialogRef: MatDialogRef<AgreementMissingWhatNowComponent, null>;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>,\n              protected matDialog: MatDialog,\n              protected userQuery: UserQuery,\n              protected initService: InitService) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.emailDomain = this.userQuery.getValue().email.split('@').pop();\n    this.showBackButton = this.setupStepsService.getPath().get(this.step).previous !== null;\n  }\n\n  check() {\n    this.form.get('domainChecked').setValue(this.initService.getUserInfo().whitelisted_domain);\n    this.update();\n  }\n\n  showDialog() {\n    this.matDialogRef = this.matDialog.open(AgreementMissingWhatNowComponent, {\n      height: '100vh',\n      maxHeight: 550,\n      maxWidth: 550,\n      panelClass: 'agreement-missing-dialog',\n      width: '100vw',\n    });\n  }\n}\n","export default \"<section>\\n  <h1>{{'checkUserHeader' | translate}}</h1>\\n  <h6>{{'checkUserMainText' | translate}}</h6>\\n  <h5>{{'checkUserDomainLabel' | translate}}</h5>\\n\\n  <ng-container *ngIf=\\\"form.value.domainChecked !== null; else domain\\\">\\n    <ng-container *ngIf=\\\"form.valid; else invalidDomain\\\">\\n      <div class=\\\"domain summary\\\">\\n        <div class=\\\"message\\\">{{ 'checkUserDomainValidLabel' | translate }}</div>\\n        <div class=\\\"icon\\\">\\n          <mat-icon class=\\\"valid\\\">check_circle</mat-icon>\\n        </div>\\n      </div>\\n    </ng-container>\\n    <ng-template #invalidDomain>\\n      <div class=\\\"domain summary\\\">\\n        <div class=\\\"message\\\">{{ 'checkUserDomainInvalidLabel' | translate }}</div>\\n        <div class=\\\"icon\\\">\\n          <mat-icon class=\\\"invalid\\\">cancel</mat-icon>\\n        </div>\\n      </div>\\n      <div class=\\\"help\\\">\\n        <button class=\\\"what-now\\\" mat-button (click)=\\\"showDialog()\\\">\\n          {{'checkUserWhatNowButton' | translate}}\\n        </button>\\n      </div>\\n    </ng-template>\\n  </ng-container>\\n\\n  <ng-template #domain>\\n    <div class=\\\"domain\\\">\\n      {{emailDomain}}\\n    </div>\\n  </ng-template>\\n\\n</section>\\n<footer [ngClass]=\\\"{'space-between': showBackButton}\\\">\\n  <ng-container *ngIf=\\\"showBackButton\\\">\\n    <button mat-button (click)=\\\"previous()\\\">Back</button>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"form.value.domainChecked !== null; else checkButton\\\">\\n    <button class=\\\"next\\\" mat-button (click)=\\\"next()\\\"\\n            [disabled]=\\\"form.invalid\\\">{{'checkUserContinueButton' | translate}}</button>\\n  </ng-container>\\n  <ng-template #checkButton>\\n    <button class=\\\"next\\\" mat-button (click)=\\\"check()\\\">{{'checkUserNowButton' | translate}}</button>\\n  </ng-template>\\n</footer>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./domain-check-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host h5,:host h6,:host .domain,:host h1{color:var(--brand-color-grey);font-family:var(--brand-font-family);margin-bottom:10px}:host h1{font-size:20px;font-weight:500;line-height:24px}:host h5,:host h6,:host .domain{font-size:14px;font-weight:400;line-height:17px}:host h6{margin-bottom:15px}:host h5{font-weight:500}:host .domain{align-items:center;background-color:rgba(255,255,255,.54);box-sizing:border-box;color:#000;display:flex;flex-direction:row;justify-content:flex-start;min-height:46px;padding:11px;width:100%}:host .domain.summary{display:grid;grid-auto-columns:1fr 45px;grid-template-areas:\\\"message icon\\\";min-height:79px}:host .domain.summary .message{font:14px/17px var(--brand-font-family);grid-area:message;letter-spacing:0;padding-right:10px}:host .domain.summary .icon{grid-area:icon}:host .domain.summary .icon mat-icon{font-size:45px;height:45px;width:45px}:host .domain.summary .icon mat-icon.valid{color:var(--brand-color-green)}:host .domain.summary .icon mat-icon.invalid{color:var(--brand-color-pink)}:host .help{display:flex;justify-content:center}:host footer{justify-content:flex-end}:host footer.space-between{justify-content:space-between}\", \"\"]);\n","export default \"<div mat-dialog-title>\\n  <button mat-icon-button (click)=\\\"closeDialog()\\\">\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</div>\\n<div mat-dialog-content>\\n  <iframe [src]=\\\"('whatNowUrl' | translate) | sanitize:'resourceUrl'\\\"></iframe>\\n</div>\\n\";","\n        var result = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!./agreement-missing-what-now.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{max-height:100%}:host iframe{border:none;display:block;height:100%;width:100%}::ng-deep .agreement-missing-dialog .mat-dialog-title,::ng-deep .agreement-missing-dialog .mat-dialog-container,::ng-deep .agreement-missing-dialog .mat-dialog-content{padding:0;margin:0}::ng-deep .agreement-missing-dialog .mat-dialog-title{background-color:#4e85cc;display:flex;flex-direction:row;height:40px;justify-content:flex-end}::ng-deep .agreement-missing-dialog .mat-dialog-title .mat-icon-button:hover{background-color:transparent}::ng-deep .agreement-missing-dialog .mat-dialog-title .mat-icon-button .mat-icon{color:#fff}::ng-deep .agreement-missing-dialog .mat-dialog-content{height:calc(100% - 40px)}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FinishStepComponent} from './finish-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {MatButtonModule, MatIconModule} from '@angular/material';\nimport {PipesModule} from '../../../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    FinishStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    PipesModule,\n  ],\n  exports: [\n    FinishStepComponent,\n  ],\n  entryComponents: [\n    FinishStepComponent,\n  ]\n})\nexport class FinishStepModule {\n  constructor() {\n    downgradeComponent('appFinishStep', FinishStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './finish-step.component.html';\nimport style from './finish-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {FormBuilder} from '@angular/forms';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {SetupStepsService} from '../setup-steps.service';\n\n@Component({\n  selector: 'app-finish-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FinishStepComponent extends SetupStepComponent implements OnInit {\n  wasSchoolRequest: boolean;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.wasSchoolRequest = this.setupStepsService.data.wasSchoolRequest;\n  }\n\n  next() {\n    super.next();\n  }\n}\n","export default \"<section>\\n  <mat-icon>done_outline</mat-icon>\\n  <h1 *ngIf=\\\"wasSchoolRequest; else schoolSelect\\\">{{'firstSetupSchoolRequestConfirmation' | translate}}</h1>\\n  <ng-template #schoolSelect>\\n    <h1>{{'firstSetupSchoolSelectConfirmation' | translate}}</h1>\\n  </ng-template>\\n</section>\\n<footer>\\n  <button class=\\\"next\\\"  mat-button (click)=\\\"next()\\\">Finish</button>\\n</footer>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./finish-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host mat-icon{width:160px;height:160px;font-size:160px;color:var(--brand-color-grey)}:host h1{font-size:24px;line-height:29px;color:var(--brand-color-grey);text-align:center;font-weight:500}:host section{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%}:host footer{justify-content:flex-end}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SchoolRequestStepComponent} from './school-request-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {PipesModule} from '../../../../pipes/pipes.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatSelectModule} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    SchoolRequestStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    PipesModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  exports: [\n    SchoolRequestStepComponent,\n  ],\n  entryComponents: [\n    SchoolRequestStepComponent,\n  ]\n})\nexport class SchoolRequestStepModule {\n  constructor() {\n    downgradeComponent('appSchoolRequestStep', SchoolRequestStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './school-request-step.component.html';\nimport style from './school-request-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {SchoolCategory, SchoolRequest} from '../../../../states/schools/school.interface';\nimport {CountriesQuery, Country} from '../../../../../teacher/shared/states/countries';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {Steps} from '../state/setup-step.model';\nimport {untilDestroyed} from 'ngx-take-until-destroy';\nimport {SchoolsService} from '../../../../states/schools/schools.service';\nimport {UserService} from '../../../../states/user';\nimport {SetupStepsService} from '../setup-steps.service';\n\n@Component({\n  selector: 'app-school-request-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SchoolRequestStepComponent extends SetupStepComponent implements OnInit {\n  schoolCategories = [\n    {\n      type: SchoolCategory.K_12,\n      name: 'SchoolCategoryNameK12',\n    },\n    {\n      type: SchoolCategory.HIGHER_EDUCATION,\n      name: 'SchoolCategoryNameHigherEducation',\n    },\n    {\n      type: SchoolCategory.HOME_SCHOOL,\n      name: 'SchoolCategoryNameHomeSchool',\n    },\n    {\n      type: SchoolCategory.CORPORATION,\n      name: 'SchoolCategoryNameCorporation',\n    },\n    {\n      type: SchoolCategory.OTHER,\n      name: 'SchoolCategoryNameOther',\n    },\n  ];\n  countries: Country[] = [];\n\n  formStructure = {\n    category: ['', Validators.required],\n    school_name: ['', Validators.required],\n    street_address: ['', Validators.required],\n    city: ['', Validators.required],\n    postal_code: ['', Validators.required],\n    country: ['', Validators.required],\n    state: null,\n    website: ['', Validators.required],\n    comment: [''],\n  };\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected countriesQuery: CountriesQuery,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>,\n              protected schoolsService: SchoolsService,\n              protected userService: UserService) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n  ngOnInit() {\n    this.countries = this.countriesQuery.getAll();\n    this.preSetForm();\n    super.ngOnInit();\n    this.form.get('country').valueChanges.pipe(untilDestroyed(this)).subscribe((country: Country) => this.countrySelect(country));\n  }\n\n  preSetForm() {\n    const countrySelectForm = this.formsManager.getForm(`step${Steps.COUNTRY_SELECT}`);\n    const formValues = countrySelectForm.value;\n\n    this.formStructure.country = [formValues.country, Validators.required];\n    this.formStructure.state = formValues.state ? [ formValues.state, Validators.required] : null;\n  }\n\n  next() {\n    const schoolRequest: SchoolRequest = {\n      ...this.form.getRawValue(),\n      country_code: this.form.get('country').value.country_code,\n    };\n\n    this.setupStepsService.data = {wasSchoolRequest: true};\n    this.schoolsService.registerSchool(schoolRequest).subscribe(schoolResponse => {\n      this.userService.updateUser({ school_name: schoolResponse.school_name });\n      super.next();\n    });\n  }\n\n  countrySelect(country: Country) {\n    const formControl = country.states.length ? new FormControl('', Validators.required) : new FormControl(null);\n\n    this.form.setControl('state', formControl);\n  }\n\n  compare(selectedCountry: Country, country: Country) {\n    return selectedCountry && country && selectedCountry.country_code === country.country_code;\n  }\n}\n","export default \"<section>\\n  <h1>{{'UserSetupHeaderWhereDoYouTeach' | translate}}</h1>\\n  <form [formGroup]=\\\"form\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"{{'UserSetupInputLabelCategory' | translate}}\\\" formControlName=\\\"category\\\">\\n        <ng-container *ngFor=\\\"let schoolCategory of schoolCategories\\\">\\n          <mat-option [value]=\\\"schoolCategory.type\\\">\\n            {{schoolCategory.name | translate}}\\n          </mat-option>\\n        </ng-container>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" placeholder=\\\"{{'UserSetupInputLabelSchoolName' | translate}}\\\"\\n             formControlName=\\\"school_name\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" placeholder=\\\"{{'UserSetupInputLabelStreetAddress' | translate}}\\\"\\n             formControlName=\\\"street_address\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" placeholder=\\\"{{'UserSetupInputLabelCity' | translate}}\\\"\\n             formControlName=\\\"city\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" placeholder=\\\"{{'UserSetupInputLabelZipCode' | translate}}\\\"\\n             formControlName=\\\"postal_code\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"{{'UserSetupInputLabelCountry' | translate}}\\\" formControlName=\\\"country\\\"\\n                  [compareWith]=\\\"compare\\\">\\n        <ng-container *ngFor=\\\"let country of countries\\\">\\n          <mat-option [value]=\\\"country\\\">\\n            {{country.name}}\\n          </mat-option>\\n        </ng-container>\\n      </mat-select>\\n    </mat-form-field>\\n    <ng-container *ngIf=\\\"form.value.state !== null\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"{{ 'UserSetupInputLabelState' | translate }}\\\" formControlName=\\\"state\\\">\\n          <ng-container *ngFor=\\\"let state of form.value.country.states\\\">\\n            <mat-option [value]=\\\"state\\\">\\n              {{ state }}\\n            </mat-option>\\n          </ng-container>\\n        </mat-select>\\n      </mat-form-field>\\n    </ng-container>\\n    <mat-form-field>\\n      <input matInput autocomplete=\\\"off\\\" placeholder=\\\"{{'UserSetupInputLabelSchoolWebsite' | translate}}\\\"\\n             pattern=\\\"(https?:\\\\/\\\\/)?(www\\\\.)?[-a-zA-Z0-9@:%._\\\\+~#=]{2,256}\\\\.[a-z0-9]{2,6}\\\\b([-a-zA-Z0-9@:%_\\\\+.~#?&//=]*)\\\"\\n             formControlName=\\\"website\\\">\\n      <mat-error *ngIf=\\\"form.controls.website.hasError('pattern')\\\">{{'InputErrorInvalidUrl' | translate}}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n    <textarea matInput autocomplete=\\\"off\\\" placeholder=\\\"{{ 'UserSetupInputLabelComment' | translate }}\\\"\\n              formControlName=\\\"comment\\\"></textarea>\\n    </mat-form-field>\\n  </form>\\n</section>\\n<footer>\\n  <button mat-button (click)=\\\"previous()\\\">Back</button>\\n  <button class=\\\"next\\\" mat-button (click)=\\\"next()\\\"\\n          [disabled]=\\\"form.invalid\\\">{{'UserSetupButtonLabelSubmitYourRequest' | translate}}</button>\\n</footer>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./school-request-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host h1{color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:20px;font-weight:500;line-height:24px;margin-bottom:30px}:host mat-form-field{display:block;margin-bottom:5px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SchoolSelectStepComponent} from './school-select-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {PipesModule} from '../../../../pipes/pipes.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatAutocompleteModule, MatButtonModule, MatIconModule, MatInputModule, MatTooltipModule} from '@angular/material';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {DirectivesModule} from '../../../../directives/directives.module';\n\n@NgModule({\n  declarations: [\n    SchoolSelectStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    PipesModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    ScrollingModule,\n    MatIconModule,\n    DirectivesModule,\n    MatTooltipModule,\n    MatButtonModule,\n  ],\n  exports: [\n    SchoolSelectStepComponent,\n  ],\n  entryComponents: [\n    SchoolSelectStepComponent,\n  ]\n})\nexport class SchoolSelectStepModule {\n  constructor() {\n    downgradeComponent('appSchoolSelectStep', SchoolSelectStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './school-select-step.component.html';\nimport style from './school-select-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {AbstractControl, FormBuilder, ValidationErrors, Validators} from '@angular/forms';\nimport {combineLatest, Observable} from 'rxjs';\nimport {debounceTime, map, startWith} from 'rxjs/operators';\nimport {SchoolsService} from '../../../../states/schools/schools.service';\nimport {School} from '../../../../states/schools/school.interface';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {untilDestroyed} from 'ngx-take-until-destroy';\nimport {Steps} from '../state/setup-step.model';\nimport {MAT_TOOLTIP_DEFAULT_OPTIONS} from '@angular/material';\nimport {UserService, UserSetup} from '../../../../states/user';\nimport {ID} from '@datorama/akita';\nimport {SetupStepsService} from '../setup-steps.service';\nimport {getTranslation} from '../../../../../../../react_src/i18n';\n\n@Component({\n  selector: 'app-school-select-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: {showDelay: 2000},\n    },\n  ]\n})\nexport class SchoolSelectStepComponent extends SetupStepComponent implements OnInit {\n  step = Steps.SCHOOL_SELECT;\n  formStructure = {\n    school: ['', [Validators.required, this.schoolValidator]],\n  };\n  readonly emptySchool: School = {\n    id: -1,\n    is_intercom_enabled: false,\n    title: getTranslation('UserSetupInputSchoolNoMatchFound'),\n    url: '',\n  };\n  schools: Observable<School[]>;\n  minQueryLength = 2;\n  milliseconds = 250;\n  query = '';\n  itemHeight = 48;\n  maxNumberOfItems = 5;\n  listHeight = 48;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected schoolsService: SchoolsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>,\n              protected userService: UserService) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const countrySelectStep = this.formsManager.getForm(`step${Steps.COUNTRY_SELECT}`);\n\n    this.schools = combineLatest([\n      this.form.get('school').valueChanges.pipe(startWith('')),\n      this.schoolsService.fetchSchoolsFromCountry(countrySelectStep.value.country.country_code),\n    ]).pipe(\n      untilDestroyed(this),\n      debounceTime(this.milliseconds),\n      map(([query, schools]) => {\n        this.query = query;\n\n        return schools;\n      }),\n      map(schools => this.query.length >= this.minQueryLength ? this.queryFilter(this.query, schools) : []),\n      map(schools => {\n        if (schools.length) {\n          this.listHeight = schools.length > this.maxNumberOfItems ?\n            this.itemHeight * this.maxNumberOfItems : this.itemHeight * schools.length;\n\n          return schools;\n        }\n\n        this.listHeight = this.itemHeight;\n\n        return this.query.length >= this.minQueryLength ? [{...this.emptySchool}] : schools;\n      }),\n    );\n  }\n\n  next() {\n    const userSetup: UserSetup = {\n      school: this.form.get('school').value.id,\n    };\n\n    this.setupStepsService.data = {wasSchoolRequest: false};\n    this.userService.updateUserSetup(userSetup).subscribe(() => {\n      this.userService.updateUser({ school: userSetup.school });\n      super.next();\n    });\n  }\n\n  request() {\n    this.update();\n    this.setupStepsService.setStep(Steps.SCHOOL_REQUEST);\n  }\n\n  disableOption(school: School) {\n    return school.id < 0;\n  }\n\n  queryFilter(query: string, schools: School[]): School[] {\n    const normalizeQuery = query.toLowerCase();\n\n    return schools.filter(school => school.title.toLowerCase().includes(normalizeQuery));\n  }\n\n  display(school: School) {\n    return school ? school.title : '';\n  }\n\n  getSchoolName(school: School) {\n    return school.title.includes('-') ? school.title.match(/(.*) - (.*)/)[1].trim() : school.title;\n  }\n\n  getCityName(school: School) {\n    return school.title.includes('-') ? school.title.match(/(.*) - (.*)/)[2].trim() : '';\n  }\n\n  trackById(index: number, school: School): ID {\n    return school.id;\n  }\n\n  schoolValidator(control: AbstractControl): ValidationErrors | null {\n    return control.value && typeof control.value !== 'object' ? {'required': true} : null;\n  }\n}\n","export default \"<section>\\n  <h1>{{'UserSetupHeaderWhereDoYouTeach' | translate}}</h1>\\n  <form [formGroup]=\\\"form\\\">\\n    <mat-form-field>\\n      <input type=\\\"text\\\" matInput formControlName=\\\"school\\\" [matAutocomplete]=\\\"schoolsAutocomplete\\\"\\n             placeholder=\\\"{{'UserSetupInputLabelSchool' | translate}}\\\">\\n      <mat-icon matPrefix>search</mat-icon>\\n      <mat-autocomplete autoActiveFirstOption #schoolsAutocomplete=\\\"matAutocomplete\\\" [displayWith]=\\\"display\\\">\\n        <cdk-virtual-scroll-viewport [itemSize]=\\\"itemHeight\\\" [minBufferPx]=\\\"280\\\" [maxBufferPx]=\\\"400\\\"\\n                                     [style.min-height.px]=\\\"listHeight\\\">\\n          <mat-option *cdkVirtualFor=\\\"let school of schools | async; trackBy trackById; templateCacheSize: 0\\\"\\n                      [disabled]=\\\"disableOption(school)\\\" [value]=\\\"school\\\">\\n            <div class=\\\"content\\\">\\n              <div class=\\\"school\\\" appTooltipEllipsis [matTooltip]=\\\"school.title\\\" [appHighlightText]=\\\"query\\\">\\n                {{getSchoolName(school)}}\\n              </div>\\n              <div class=\\\"city\\\" [appHighlightText]=\\\"query\\\">\\n                {{getCityName(school)}}\\n              </div>\\n            </div>\\n          </mat-option>\\n        </cdk-virtual-scroll-viewport>\\n      </mat-autocomplete>\\n      <mat-hint>\\n        <div>{{'UserSetupHelpTextCannotFindSchool' | translate}}</div>\\n<!--        <button mat-button (click)=\\\"request()\\\">{{'UserSetupButtonLabelRequestAddYourSchool' | translate}}</button>-->\\n        <a href=\\\"mailto:support@studybee.se?subject=Request to add school\\\">{{'UserSetupButtonLabelRequestAddYourSchool' | translate}}</a>\\n      </mat-hint>\\n    </mat-form-field>\\n  </form>\\n</section>\\n<footer>\\n  <button mat-button (click)=\\\"previous()\\\">Back</button>\\n  <button class=\\\"next\\\" mat-button (click)=\\\"next()\\\"\\n          [disabled]=\\\"form.invalid\\\">{{'generalButtonLabelContinue' | translate}}</button>\\n</footer>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./school-select-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host a{text-decoration:none;color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:16px;font-weight:500;line-height:24px;margin-bottom:20px}:host h1{color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:20px;font-weight:500;line-height:24px;margin-bottom:20px}:host ::ng-deep .mat-form-field-infix{margin-left:8px}:host ::ng-deep .mat-form-field-underline{right:0;width:calc(100% - 32px)}:host ::ng-deep .mat-form-field-prefix{height:24px;transform:translateY(8px);width:24px}:host ::ng-deep .mat-form-field-prefix ::content.mat-icon{align-items:center;display:flex;height:24px;justify-content:center;width:24px;font-size:24px}:host ::ng-deep .mat-form-field-subscript-wrapper{margin-top:2em;overflow:visible;right:0;width:calc(100% - 32px)}:host ::ng-deep .mat-form-field-subscript-wrapper ::content.mat-button{color:var(--brand-color-grey);margin-left:-16px}::ng-deep .mat-autocomplete-panel .cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{max-width:100%}::content.mat-option .content{align-items:flex-start;display:flex;flex-direction:column;flex:1;justify-content:center}::content.mat-option .school{line-height:initial;overflow:hidden;text-overflow:ellipsis;width:100%}::content.mat-option .city{color:rgba(0,0,0,.54);font-size:12px;line-height:initial;margin-top:2px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AgreementStepComponent} from './agreement-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule, MatCheckboxModule, MatProgressSpinnerModule} from '@angular/material';\nimport {PipesModule} from '../../../../pipes/pipes.module';\n\n\n@NgModule({\n  declarations: [\n    AgreementStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    PipesModule,\n  ],\n  exports: [\n    AgreementStepComponent,\n  ],\n  entryComponents: [\n    AgreementStepComponent,\n  ]\n})\nexport class AgreementStepModule {\n  constructor() {\n    downgradeComponent('appAgreementStep', AgreementStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './agreement-step.component.html';\nimport style from './agreement-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {AgreementStepService} from './agreement-step.service';\nimport {untilDestroyed} from 'ngx-take-until-destroy';\nimport {switchMap, take} from 'rxjs/operators';\nimport {noop, Observable} from 'rxjs';\nimport {Path, RootScope} from '../../../../../ajs-upgraded-providers';\nimport {StateService} from '@uirouter/core';\nimport {HttpService} from '../../../../../core/http/http.service';\nimport {SetupStepsService} from '../setup-steps.service';\nimport {Steps} from '../state/setup-step.model';\nimport {EnvironmentService} from '../../../../../core/environment/environment.service';\nimport {InitService} from '../../../../../core/init/init.service';\nimport {UserService} from '../../../../states/user';\n\n@Component({\n  selector: 'app-agreement-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AgreementStepComponent extends SetupStepComponent implements OnInit {\n  formStructure = {\n    accept: [false, Validators.requiredTrue],\n  };\n  agreement$: Observable<string>;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>,\n              protected agreementStepService: AgreementStepService,\n              protected $rootScope: RootScope,\n              protected $state: StateService,\n              protected path: Path,\n              protected http: HttpService,\n              protected environmentService: EnvironmentService,\n              protected initService: InitService,\n              protected userService: UserService) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.agreement$ = this.agreementStepService.get().pipe(\n      untilDestroyed(this),\n      take(1),\n    );\n  }\n\n  next() {\n    this.update();\n    this.syncStorage();\n    this.http.post('/users/agreement-seen/')\n      .pipe(\n        untilDestroyed(this),\n        switchMap(() => this.userService.fetchUser()),\n      )\n      .subscribe(() => {\n        this.$state.go('loading').then(() => {\n          this.path.setOldPath(null);\n          this.path.setOldCourseId(null);\n          this.$rootScope.$broadcast('USER_SETUP_COMPLETED');\n        });\n      });\n  }\n\n  syncStorage() {\n    const locationDetection = this.initService.getLocationDetection();\n    const countryControl = this.formsManager.getControl(`step${Steps.COUNTRY_SELECT}`, 'country');\n    const API = locationDetection.is_teacher && countryControl ? countryControl.value.api_url : this.environmentService.API;\n\n    this.environmentService.setAPI(API);\n  }\n\n}\n","export default \"<section>\\n  <ng-container *ngIf=\\\"(agreement$ | async) as agreement; else loading\\\">\\n    <div [innerHtml]=\\\"agreement | sanitize: 'html'\\\"></div>\\n    <form [formGroup]=\\\"form\\\">\\n      <mat-checkbox formControlName=\\\"accept\\\">{{'acceptTermsAndConditions' | translate}}</mat-checkbox>\\n    </form>\\n  </ng-container>\\n  <ng-template #loading>\\n    <mat-progress-spinner></mat-progress-spinner>\\n  </ng-template>\\n</section>\\n<footer>\\n  <button class=\\\"next\\\" mat-button (click)=\\\"next()\\\" [disabled]=\\\"form.invalid\\\">{{'iAccept' | translate}}</button>\\n</footer>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./agreement-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host{padding:0}:host section{background-color:#fff;padding:0 16px}:host section form{padding:15px 0}:host section mat-checkbox ::ng-deep .mat-checkbox-checked.mat-accent .mat-ripple-element{background:var(--brand-color-grey)}:host section mat-checkbox ::ng-deep .mat-checkbox-background{background-color:rgba(255,255,255,0)}:host section mat-checkbox ::ng-deep .mat-checkbox-background .mat-checkbox-checkmark .mat-checkbox-checkmark-path{stroke:var(--brand-color-grey) !important}:host section mat-checkbox ::ng-deep .mat-checkbox-label{color:#005dd6;font-family:var(--brand-font-family);font-size:14px;line-height:17px}:host footer{background-color:#fff;justify-content:center}::ng-deep .studybee app-setup *::-webkit-scrollbar-track-piece{background:#fff}\", \"\"]);\n","import {Injectable} from '@angular/core';\nimport {HttpService} from '../../../../../core/http/http.service';\nimport {map} from 'rxjs/operators';\n\ninterface AgreementResponse {\n  content: string;\n  gdpr: boolean;\n  language: string;\n  title: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class AgreementStepService {\n  constructor(protected http: HttpService) {\n  }\n\n  get(languageCode: string = this.getLanguageCode()) {\n    const url = `/v3/schools/user-agreement/${languageCode}/`;\n\n    return this.http.get<AgreementResponse>(url).pipe(\n      map(response => response.content),\n    );\n  }\n\n  protected getLanguageCode() {\n    const uiLanguage = chrome.i18n.getUILanguage();\n\n    return uiLanguage.replace(/(\\w+)-(\\w+)/, '$1').toLocaleLowerCase();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AgreementMissingStepComponent } from './agreement-missing-step.component';\nimport {SharedModule} from '../../../../shared.module';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {MatButtonModule, MatDialogModule, MatIconModule} from '@angular/material';\nimport {ComponentsModule} from '../../../../components/components.module';\nimport {PipesModule} from '../../../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    AgreementMissingStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    ComponentsModule,\n    MatDialogModule,\n    MatButtonModule,\n    PipesModule,\n  ],\n  exports: [\n    AgreementMissingStepComponent,\n  ],\n  entryComponents: [\n    AgreementMissingStepComponent\n  ]\n})\nexport class AgreementMissingStepModule {\n  constructor() {\n    downgradeComponent('appAgreementMissingStep', AgreementMissingStepComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport template from './agreement-missing-step.component.html';\nimport style from './agreement-missing-step.component.scss';\nimport {SetupStepComponent} from '../shared/components/setup-step/setup-step.component';\nimport {FormBuilder} from '@angular/forms';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {MatDialog, MatDialogRef} from '@angular/material';\nimport {SetupStepsService} from '../setup-steps.service';\nimport {AgreementMissingWhatNowComponent} from '../shared/components/agreement-missing-what-now/agreement-missing-what-now.component';\n\n@Component({\n  selector: 'app-agreement-missing-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AgreementMissingStepComponent extends SetupStepComponent implements OnInit {\n  matDialogRef: MatDialogRef<AgreementMissingWhatNowComponent, null>;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>,\n              protected matDialog: MatDialog) {\n    super(setupStepsService, formBuilder, formsManager);\n  }\n\n  showDialog() {\n    this.matDialogRef = this.matDialog.open(AgreementMissingWhatNowComponent, {\n      height: '100vh',\n      maxHeight: 550,\n      maxWidth: 550,\n      panelClass: 'agreement-missing-dialog',\n      width: '100vw',\n    });\n  }\n\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n}\n","export default \"<section>\\n  <mat-icon>sentiment_very_dissatisfied</mat-icon>\\n  <h1>{{'agreementMissingHeader' | translate}}</h1>\\n  <p>{{'agreementMissingText' | translate}}</p>\\n  <button class=\\\"what-now\\\" mat-button (click)=\\\"showDialog()\\\">\\n    {{'checkUserWhatNowButton' | translate}}\\n  </button>\\n</section>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./agreement-missing-step.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{box-sizing:border-box;display:grid;grid-template-areas:\\\"content\\\" \\\"footer\\\";grid-template-rows:1fr 48px;height:100%;padding:0 16px 16px}:host section{grid-area:content}:host section button.what-now{max-height:40px}:host section button.what-now:enabled{background:rgba(0,0,0,.54)}:host section button.what-now:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host mat-form-field{display:block;margin-bottom:35px}:host mat-form-field:last-of-type{margin-bottom:0}:host mat-form-field .mat-focused.mat-primary .mat-select-arrow{color:var(--brand-color-grey)}:host footer{display:flex;flex-direction:row;grid-area:footer;justify-content:space-between}:host footer .mat-button{max-height:40px}:host footer .next:enabled{background:rgba(0,0,0,.54)}:host footer .next:enabled ::ng-deep .mat-button-wrapper{color:#fff}:host footer .next:disabled{background:rgba(0,0,0,.1)}:host section{display:flex;flex-direction:column;justify-content:center;align-items:center}:host mat-icon{color:rgba(0,0,0,.44);font-size:160px;min-width:165px;min-height:165px}:host h1{font-size:26px;font-weight:300;line-height:32px;text-align:center;margin-bottom:16px}:host p{font-size:16px;line-height:19px;text-align:center;margin-bottom:16px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SetupStepComponent} from './components/setup-step/setup-step.component';\nimport {downgradeComponent} from '../../../../../downgrade';\nimport {AgreementMissingWhatNowComponent} from './components/agreement-missing-what-now/agreement-missing-what-now.component';\nimport {MatButtonModule, MatDialogModule, MatIconModule} from '@angular/material';\nimport {PipesModule} from '../../../../pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    AgreementMissingWhatNowComponent,\n    SetupStepComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    PipesModule,\n  ],\n  exports: [\n    AgreementMissingWhatNowComponent,\n    SetupStepComponent,\n  ],\n  entryComponents: [\n    AgreementMissingWhatNowComponent,\n    SetupStepComponent,\n  ]\n})\nexport class SetupStepsSharedModule {\n  constructor() {\n    downgradeComponent('appAgreementMissingWhatNow', AgreementMissingWhatNowComponent);\n    downgradeComponent('appSetupStep', SetupStepComponent);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from '../shared/shared.module';\nimport {HttpModule} from './http/http.module';\nimport {EnvironmentModule} from './environment/environment.module';\nimport {ExtensionModule} from './extension/extension.module';\nimport {InitModule} from './init/init.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    HttpModule,\n    EnvironmentModule,\n    ExtensionModule,\n    InitModule,\n  ],\n  exports: [\n    HttpModule,\n    EnvironmentModule,\n    ExtensionModule,\n    InitModule,\n  ]\n})\nexport class CoreModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {SharedModule} from '../../shared/shared.module';\nimport {downgradeInjectable} from '../../downgrade';\nimport {HttpService} from './http.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ]\n})\nexport class HttpModule {\n  constructor() {\n    downgradeInjectable('HttpService', HttpService);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {downgradeInjectable} from '../../downgrade';\nimport {EnvironmentService} from './environment.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class EnvironmentModule {\n  constructor() {\n    downgradeInjectable('EnvironmentService', EnvironmentService);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {StorageModule} from './storage/storage.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StorageModule,\n  ],\n  exports: [\n    StorageModule\n  ]\n})\nexport class ExtensionModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {downgradeInjectable} from '../../../downgrade';\nimport {SyncStorageService} from './sync-storage.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class StorageModule {\n  constructor() {\n    downgradeInjectable('SyncStorageService', SyncStorageService);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {downgradeInjectable} from '../../downgrade';\nimport {InitService} from './init.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n})\nexport class InitModule {\n  constructor() {\n    downgradeInjectable('InitService', InitService);\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SharedModule} from '../shared/shared.module';\nimport {MainMenuModule} from './main-menu/main-menu.module';\nimport {AssignmentsModule} from './assignments/assignments.module';\n\n@NgModule({\n  imports: [\n    AssignmentsModule,\n    CommonModule,\n    MainMenuModule,\n    SharedModule,\n  ],\n  exports: [\n    AssignmentsModule,\n    MainMenuModule,\n  ],\n})\nexport class StudentModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { downgradeComponent } from '../../downgrade';\nimport { SharedModule } from '../../shared/shared.module';\nimport { MainMenuComponent } from './main-menu.component';\n\n@NgModule({\n  declarations: [\n    MainMenuComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  entryComponents: [\n    MainMenuComponent,\n  ],\n})\nexport class MainMenuModule {\n  constructor() {\n    downgradeComponent('appMainMenu', MainMenuComponent);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material';\nimport {BaseMainMenuComponent} from '../../shared/components/base-main-menu/base-main-menu.component';\nimport {MainMenuQuery} from '../../shared/states/main-menu/main-menu.query';\nimport {MainMenuService} from '../../shared/states/main-menu/main-menu.service';\nimport {UiQuery} from '../../shared/states/ui/ui.query';\nimport {UiService} from '../../shared/states/ui/ui.service';\nimport {UserQuery} from '../../shared/states/user';\nimport template from './main-menu.component.html';\nimport style from './main-menu.component.scss';\n\n@Component({\n  selector: 'app-main-menu',\n  template,\n  styles: [style],\n})\nexport class MainMenuComponent extends BaseMainMenuComponent implements OnInit {\n  @ViewChild('sidenav', { static: false }) sidenav: MatSidenav;\n\n  constructor(protected uiService: UiService,\n              protected uiQuery: UiQuery,\n              protected userQuery: UserQuery,\n              protected maineMenuQuery: MainMenuQuery,\n              protected mainMenuService: MainMenuService) {\n    super(uiService, uiQuery, userQuery, maineMenuQuery, mainMenuService);\n  }\n}\n","export default \"<mat-sidenav-container>\\n  <mat-sidenav #sidenav\\n               [fixedInViewport]=\\\"true\\\"\\n               [autoFocus]=\\\"false\\\"\\n               [mode]=\\\"'over'\\\">\\n    <mat-card class=\\\"mat-elevation-z0\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar\\n             [style.background-image]=\\\"'url(' + (user$ | async)?.photo_url + ')'\\\"></div>\\n        <mat-card-title>{{ (user$ | async)?.first_name }} {{ (user$ | async)?.last_name }}</mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content (click)=\\\"toggle()\\\">\\n        <mat-nav-list>\\n          <a mat-list-item\\n             *ngFor=\\\"let mainMenuItem of mainMenu$ | async\\\"\\n             [appUiSref]=\\\"mainMenuItem.state\\\"\\n             [appUiSrefOpt]=\\\"{ debounce: 250, activeClass: 'active' }\\\">\\n            <mat-icon matListIcon\\n                      [ngClass]=\\\"mainMenuItem.iconColor\\\">{{ mainMenuItem.icon }}\\n            </mat-icon>\\n            <h4 mat-line>{{ mainMenuItem.label | translate }}</h4>\\n          </a>\\n        </mat-nav-list>\\n        <mat-divider></mat-divider>\\n<!--        <mat-action-list>-->\\n<!--          <button mat-list-item-->\\n<!--                  (click)=\\\"help('mainMenuGetHelpUrl')\\\">-->\\n<!--            <mat-icon matListIcon>help</mat-icon>-->\\n<!--            <h3 matLine>{{ 'getHelpMainMenu' | translate }}</h3>-->\\n<!--          </button>-->\\n<!--        </mat-action-list>-->\\n      </mat-card-content>\\n    </mat-card>\\n    <div version>\\n      <p>Version: {{ version$ }}</p>\\n    </div>\\n  </mat-sidenav>\\n</mat-sidenav-container>\\n\";","\n        var result = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./main-menu.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host [version]{position:absolute;bottom:6px;right:6px}:host [version] p{font-size:10px;color:rgba(0,0,0,.5)}:host .mat-drawer-container{z-index:63}:host .mat-drawer{background-color:#fff}:host ::ng-deep .mat-drawer-backdrop{position:fixed}:host ::ng-deep .mat-list-base{padding-top:0}:host ::ng-deep .mat-list-base .mat-list-item .mat-list-text>*{color:rgba(0,0,0,.74);font-size:14px;font-weight:500;line-height:20px}:host mat-icon{color:var(--brand-color-grey)}:host mat-icon.green-icon{color:var(--brand-color-green)}:host mat-icon.pink-icon{color:var(--brand-color-pink)}:host mat-icon.blue-icon{color:var(--brand-color-blue)}:host mat-card{background-color:var(--brand-color-yellow);border-radius:0;padding:0}:host mat-card-header{flex-direction:column;max-width:260px;min-height:150px;min-width:260px;padding:16px 16px 0}:host mat-card-header ::ng-deep .mat-card-header-text{margin:20px 0 0}:host mat-card-header mat-card-title,:host mat-card-header mat-card-subtitle{color:rgba(0,0,0,.87)}:host mat-card-header mat-card-title{font-size:20px;line-height:20px;font-weight:500}:host mat-card-header mat-card-subtitle{font-size:14px;line-height:15px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host mat-card-header [mat-card-avatar]{background-size:cover;height:48px;width:48px}:host mat-card-content{padding:0;background-color:#fff}:host mat-card-content .mat-list-item.active{background:rgba(0,0,0,.08)}:host mat-card-content ::ng-deep .mat-list-item-content{padding:0}:host mat-card-content ::ng-deep .mat-list-item-content ::ng-deep .mat-list-text{padding-right:16px}:host mat-card-content ::ng-deep .mat-list-item-content mat-icon{padding:0 0 0 16px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AssignmentsComponent} from './assignments.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {downgradeComponent, downgradeInjectable} from '../../downgrade';\nimport {AssignmentsQuery, AssignmentsService, AssignmentsStore} from './state';\nimport {AssignmentModule} from './assignment/assignment.module';\n\n@NgModule({\n  declarations: [\n    AssignmentsComponent,\n  ],\n  imports: [\n    AssignmentModule,\n    CommonModule,\n    SharedModule,\n    AssignmentModule,\n  ],\n  exports: [\n    AssignmentModule,\n    AssignmentsComponent,\n  ],\n  entryComponents: [\n    AssignmentsComponent,\n  ]\n})\nexport class AssignmentsModule {\n  constructor() {\n    downgradeComponent('appAssignments', AssignmentsComponent);\n    downgradeInjectable('AssignmentsService', AssignmentsService);\n    downgradeInjectable('AssignmentsQuery', AssignmentsQuery);\n    downgradeInjectable('AssignmentsStore', AssignmentsStore);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport template from './assignments.component.html';\nimport style from './assignments.component.scss';\nimport {Assignment, AssignmentsQuery} from './state';\nimport {ID} from '@datorama/akita';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-assignments',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignmentsComponent implements OnInit {\n\n  assignmentsAssessed: Observable<Assignment[]>;\n  assignmentsNotAssessed: Observable<Assignment[]>;\n\n  constructor(protected assignmentsQuery: AssignmentsQuery) { }\n\n  ngOnInit() {\n    this.assignmentsAssessed = this.assignmentsQuery.selectFilteredAndSorted().pipe(\n      map(assignments => assignments.filter(assignment => !assignment.assignment_not_assessable))\n    );\n    this.assignmentsNotAssessed = this.assignmentsQuery.selectFilteredAndSorted().pipe(\n      map(assignments => assignments.filter(assignment => assignment.assignment_not_assessable))\n    );\n  }\n\n  trackById(index: number, assignment: Assignment): ID {\n    return assignment.id;\n  }\n\n}\n","export default \"<ng-container *ngIf=\\\"(assignmentsAssessed | async) as assignmentsAssessable\\\">\\n  <h1\\n    *ngIf=\\\"assignmentsAssessable.length\\\">{{ 'teacherAssignmentAssessableGroupLabel' | translate }}</h1>\\n  <app-assignment *ngFor=\\\"let assignment of assignmentsAssessable; trackBy trackById\\\" [assignment]=\\\"assignment\\\"\\n                  appUiSref=\\\"studentAssessed\\\"\\n                  [appUiSrefProps]=\\\"{ assignment: assignment, isModal: true }\\\"\\n                  matRipple></app-assignment>\\n</ng-container>\\n<ng-container *ngIf=\\\"(assignmentsNotAssessed | async) as assignmentsNotAssessable\\\">\\n  <h1\\n    *ngIf=\\\"assignmentsNotAssessable.length\\\">{{ 'teacherAssignmentWithoutAssessmentCriteriaGroupLabel' | translate }}</h1>\\n  <app-assignment *ngFor=\\\"let assignment of assignmentsNotAssessable; trackBy trackById\\\"\\n                  [assignment]=\\\"assignment\\\"\\n                  appUiSref=\\\"studentAssessed\\\"\\n                  [appUiSrefProps]=\\\"{ assignment: assignment, isModal: true }\\\"\\n                  matRipple></app-assignment>\\n</ng-container>\\n\";","\n        var result = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./assignments.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{display:flex;flex-direction:column}:host h1{align-items:center;color:var(--brand-color-green);display:flex;font-family:var(--brand-font-family);font-size:12px;font-weight:500;height:48px;justify-content:start;padding:0 10px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AssignmentComponent} from './assignment.component';\nimport {downgradeComponent} from '../../../downgrade';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MAT_MENU_DEFAULT_OPTIONS} from '@angular/material';\n\n\n@NgModule({\n  declarations: [\n    AssignmentComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [\n    AssignmentComponent,\n  ],\n  providers: [\n    {\n      provide: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,\n      useValue: { collapsedHeight: '64px', expandedHeight: '64px' },\n    },\n    {\n      provide: MAT_MENU_DEFAULT_OPTIONS,\n      useValue: { overlapTrigger: true }\n    }\n  ],\n  entryComponents: [\n    AssignmentComponent,\n  ]\n})\nexport class AssignmentModule {\n  constructor() {\n    downgradeComponent('appAssignment', AssignmentComponent);\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport template from './assignment.component.html';\nimport style from './assignment.component.scss';\nimport {Assignment, AssignmentState} from '../state';\nimport {AssessmentStatusIcon} from '../../../shared/components/assessment-status-icon/assessment-status-icon.model';\n\n@Component({\n  selector: 'app-assignment',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignmentComponent implements OnInit {\n  @Input() assignment: Assignment;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getType(assignment: Assignment): any {\n    return {\n      state: AssignmentState.PUBLISHED,\n      type: assignment.assignment_type,\n    };\n  }\n\n  getStatus(assignment: Assignment): AssessmentStatusIcon {\n    return {\n      warning: assignment.fail_warning,\n      status: assignment.status_new,\n    };\n  }\n}\n","export default \"<app-assignment-type-icon [type]=\\\"getType(assignment)\\\"></app-assignment-type-icon>\\n<span appTooltipEllipsis\\n      [matTooltip]=\\\"assignment.assignment_title\\\">{{assignment.assignment_title}}</span>\\n<app-assessment-status-icon [status]=\\\"getStatus(assignment)\\\"></app-assessment-status-icon>\\n\";","\n        var result = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assignment.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{border-bottom:1px solid rgba(0,0,0,.1);display:grid;grid-template-areas:\\\"type . title status\\\";grid-template-columns:40px 17px auto 24px;height:63px;padding:0 8px 0 18px}:host:last-of-type{border-bottom:0;height:64px}:host app-assessment-status-icon,:host app-assignment-type-icon{place-self:center}:host app-assignment-type-icon{grid-area:type}:host span{align-self:center;color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:14px;font-weight:400;grid-area:title;justify-self:start;max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host app-assessment-status-icon{grid-area:status}\", \"\"]);\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { MainMenuModule } from './main-menu/main-menu.module';\nimport { TeacherSharedModule } from './shared/shared.module';\nimport {AssignmentsModule} from './assignments/assignments.module';\nimport {SetupModule} from '../shared/modules/setup/setup.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    AssignmentsModule,\n    CommonModule,\n    MainMenuModule,\n    SetupModule,\n    SharedModule,\n    TeacherSharedModule,\n  ],\n  exports: [\n    AssignmentsModule,\n    MainMenuModule,\n    SetupModule,\n    TeacherSharedModule,\n  ],\n})\nexport class TeacherModule {\n}\n","  import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { downgradeComponent } from '../../downgrade';\nimport { SharedModule } from '../../shared/shared.module';\nimport { MainMenuComponent } from './main-menu.component';\n\n@NgModule({\n  declarations: [\n    MainMenuComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  entryComponents: [\n    MainMenuComponent\n  ]\n})\nexport class MainMenuModule {\n  constructor() {\n    downgradeComponent('appMainMenu', MainMenuComponent);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material';\nimport {Observable} from 'rxjs';\nimport {Path, Updates} from '../../ajs-upgraded-providers';\nimport {BaseMainMenuComponent} from '../../shared/components/base-main-menu/base-main-menu.component';\nimport {MainMenuQuery} from '../../shared/states/main-menu/main-menu.query';\nimport {MainMenuService} from '../../shared/states/main-menu/main-menu.service';\nimport {School} from '../../shared/states/schools/school.interface';\nimport {SchoolsQuery} from '../../shared/states/schools/schools.query';\nimport {SchoolsService} from '../../shared/states/schools/schools.service';\nimport {UiQuery} from '../../shared/states/ui/ui.query';\nimport {UiService} from '../../shared/states/ui/ui.service';\nimport {User, UserQuery} from '../../shared/states/user';\nimport template from './main-menu.component.html';\nimport style from './main-menu.component.scss';\n\n@Component({\n  selector: 'app-main-menu',\n  template,\n  styles: [style],\n})\nexport class MainMenuComponent extends BaseMainMenuComponent implements OnInit {\n  @ViewChild('sidenav', { static: false }) sidenav: MatSidenav;\n  public school$: Observable<School> | Observable<School[]>;\n\n  constructor(protected uiService: UiService,\n              protected uiQuery: UiQuery,\n              protected userQuery: UserQuery,\n              protected schoolsService: SchoolsService,\n              protected schoolsQuery: SchoolsQuery,\n              protected mainMenuQuery: MainMenuQuery,\n              protected mainMenuService: MainMenuService,\n              protected updates: Updates,\n              protected path: Path) {\n    super(uiService, uiQuery, userQuery, mainMenuQuery, mainMenuService);\n  }\n\n  public ngOnInit(): void {\n    super.ngOnInit();\n\n    this.user$.subscribe((user: User) => {\n      this.schoolsService.setActive(user.school);\n      this.school$ = this.schoolsQuery.selectActive();\n    });\n  }\n\n  public refresh(): void {\n    this.updates.updateAssignmentsAndStudents(this.path.getClassroomId(), true, true);\n  }\n}\n","export default \"<mat-sidenav-container>\\n  <mat-sidenav\\n    #sidenav\\n    [fixedInViewport]=\\\"true\\\"\\n    [autoFocus]=\\\"false\\\"\\n    [mode]=\\\"'over'\\\"\\n  >\\n    <mat-card class=\\\"mat-elevation-z0\\\">\\n      <mat-card-header>\\n        <div\\n          mat-card-avatar\\n          [style.background-image]=\\\"'url(' + (user$ | async)?.photo_url + ')'\\\"\\n        ></div>\\n        <mat-card-title\\n          >{{ (user$ | async)?.first_name }}\\n          {{ (user$ | async)?.last_name }}</mat-card-title\\n        >\\n        <mat-card-subtitle>{{\\n          (school$ | async)?.title || (user$ | async)?.school_name\\n        }}</mat-card-subtitle>\\n      </mat-card-header>\\n      <mat-card-content (click)=\\\"toggle()\\\">\\n        <mat-nav-list>\\n          <a\\n            mat-list-item\\n            *ngFor=\\\"let mainMenuItem of mainMenu$ | async\\\"\\n            [appUiSref]=\\\"mainMenuItem.state\\\"\\n            [appUiSrefProps]=\\\"mainMenuItem.params\\\"\\n            [appUiSrefOpt]=\\\"{ debounce: 250, activeClass: 'active' }\\\"\\n          >\\n            <mat-icon matListIcon [ngClass]=\\\"mainMenuItem.iconColor\\\"\\n              >{{ mainMenuItem.icon }}\\n            </mat-icon>\\n            <h4 mat-line>{{ mainMenuItem.label | translate }}</h4>\\n          </a>\\n        </mat-nav-list>\\n        <mat-divider></mat-divider>\\n        <mat-action-list>\\n          <button mat-list-item (click)=\\\"refresh()\\\">\\n            <mat-icon matListIcon>refresh</mat-icon>\\n            <h3 matLine>{{ \\\"synchronizeMainMenu\\\" | translate }}</h3>\\n          </button>\\n          <mat-divider></mat-divider>\\n<!--          <button mat-list-item (click)=\\\"help('mainMenuGetHelpUrl')\\\">-->\\n<!--            <mat-icon matListIcon>help</mat-icon>-->\\n<!--            <h3 matLine>{{ \\\"getHelpMainMenu\\\" | translate }}</h3>-->\\n<!--          </button>-->\\n        </mat-action-list>\\n      </mat-card-content>\\n    </mat-card>\\n    <div version>\\n      <p>Version: {{ version$ }}</p>\\n    </div>\\n  </mat-sidenav>\\n</mat-sidenav-container>\\n\";","\n        var result = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./main-menu.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host [version]{position:absolute;bottom:6px;right:6px}:host [version] p{font-size:10px;color:rgba(0,0,0,.5)}:host .mat-drawer-container{z-index:63}:host .mat-drawer{background-color:#fff}:host ::ng-deep .mat-drawer-backdrop{position:fixed}:host ::ng-deep .mat-list-base{padding-top:0}:host ::ng-deep .mat-list-base .mat-list-item .mat-list-text>*{color:rgba(0,0,0,.74);font-size:14px;font-weight:500;line-height:20px}:host mat-icon{color:var(--brand-color-grey)}:host mat-icon.green-icon{color:var(--brand-color-green)}:host mat-icon.pink-icon{color:var(--brand-color-pink)}:host mat-icon.blue-icon{color:var(--brand-color-blue)}:host mat-card{background-color:var(--brand-color-yellow);border-radius:0;padding:0}:host mat-card-header{flex-direction:column;max-width:260px;min-height:150px;min-width:260px;padding:16px 16px 0}:host mat-card-header ::ng-deep .mat-card-header-text{margin:20px 0 0}:host mat-card-header mat-card-title,:host mat-card-header mat-card-subtitle{color:rgba(0,0,0,.87)}:host mat-card-header mat-card-title{font-size:20px;line-height:20px;font-weight:500}:host mat-card-header mat-card-subtitle{font-size:14px;line-height:15px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host mat-card-header [mat-card-avatar]{background-size:cover;height:48px;width:48px}:host mat-card-content{padding:0;background-color:#fff}:host mat-card-content .mat-list-item.active{background:rgba(0,0,0,.08)}:host mat-card-content ::ng-deep .mat-list-item-content{padding:0}:host mat-card-content ::ng-deep .mat-list-item-content ::ng-deep .mat-list-text{padding-right:16px}:host mat-card-content ::ng-deep .mat-list-item-content mat-icon{padding:0 0 0 16px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from '../../shared/shared.module';\nimport {ComponentsModule} from './components/components.module';\nimport {downgradeInjectable} from '../../downgrade';\nimport {CountriesQuery, CountriesService, CountriesStore} from './states/countries';\nimport {StudentQuery, StudentService, StudentStore} from './states/students';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    SharedModule,\n  ],\n  exports: [\n    ComponentsModule,\n  ]\n})\nexport class TeacherSharedModule {\n  constructor() {\n    downgradeInjectable('CountriesQuery', CountriesQuery);\n    downgradeInjectable('CountriesService', CountriesService);\n    downgradeInjectable('CountriesStore', CountriesStore);\n    downgradeInjectable('StudentQuery', StudentQuery);\n    downgradeInjectable('StudentService', StudentService);\n    downgradeInjectable('StudentStore', StudentStore);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { downgradeComponent } from '../../../downgrade';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { AssessmentStateSelectComponent } from './assessment-state-select/assessment-state-select.component';\n\n@NgModule({\n  declarations: [\n    AssessmentStateSelectComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  entryComponents: [\n    AssessmentStateSelectComponent,\n  ],\n})\nexport class ComponentsModule {\n  constructor() {\n    downgradeComponent('appAssessmentStateSelect', AssessmentStateSelectComponent);\n  }\n}\n","export * from './user.model';\nexport * from './user.query';\nexport * from './user.service';\nexport * from './user.store';\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AssessmentStatusIcon } from '../../../../shared/components/assessment-status-icon/assessment-status-icon.model';\nimport { AssessmentStatus } from '../../../../shared/models/assessment.model';\nimport template from './assessment-state-select.component.html';\nimport style from './assessment-state-select.component.scss';\n\n@Component({\n  selector: 'app-assessment-state-select',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssessmentStateSelectComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() status: AssessmentStatus;\n  @Input() warning: boolean;\n  @Output() statusChange = new EventEmitter<AssessmentStatus>();\n  assessmentStatusIcon: AssessmentStatusIcon;\n  subscription: Subscription;\n  readonly statusMenuItems = [\n    {\n      status: AssessmentStatus.ASSESSMENT_DONE,\n      label: 'teacherAssignmentsAssessmentsStudentMenuAssessed',\n    },\n    {\n      status: AssessmentStatus.ASSESSING,\n      label: 'teacherAssignmentsAssessmentsStudentMenuAssessing',\n    },\n    {\n      status: AssessmentStatus.NOT_ASSESSED,\n      label: 'teacherAssignmentsAssessmentsStudentMenuNotAssessed',\n    },\n  ];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.subscription = this.statusChange.subscribe(status => this.refreshAssessmentStatusIcon(status));\n  }\n\n  ngOnChanges() {\n    this.refreshAssessmentStatusIcon();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  trackByState(index: number, statusMenuItem: { status: AssessmentStatus }) {\n    return statusMenuItem.status;\n  }\n\n  protected refreshAssessmentStatusIcon(status: AssessmentStatus = this.status) {\n    this.assessmentStatusIcon = { status, warning: !!this.warning };\n  }\n}\n","export default \"<mat-select [value]=\\\"status\\\"\\n            (selectionChange)=\\\"statusChange.emit($event.value)\\\">\\n  <mat-select-trigger>\\n    <app-assessment-status-icon [status]=\\\"assessmentStatusIcon\\\"></app-assessment-status-icon>\\n  </mat-select-trigger>\\n  <ng-container *ngFor=\\\"let statusItem of statusMenuItems; trackBy: trackByState\\\">\\n    <mat-option [value]=\\\"statusItem.status\\\">\\n      <app-assessment-status-icon [status]=\\\"statusItem\\\"></app-assessment-status-icon>\\n      {{ statusItem.label | translate }}\\n    </mat-option>\\n  </ng-container>\\n</mat-select>\\n\";","\n        var result = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./assessment-state-select.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host mat-select ::ng-deep .mat-select-trigger{background-color:#fff;border-radius:18px;min-height:36px;box-shadow:0px 2px 3px 0px rgba(0,0,0,.3)}:host mat-select ::ng-deep .mat-select-trigger ::content mat-select-trigger app-assessment-status-icon mat-icon.warning{transform:translate(4px, -12px)}:host mat-select ::ng-deep .mat-select-value{max-width:none;min-width:53px;padding:6px 0 0 12px}:host mat-select ::ng-deep .mat-select-arrow{margin-right:10px}::content.mat-option ::ng-deep .mat-option-text{font-family:var(--brand-font-family);font-size:14px;line-height:46px}::content.mat-option ::ng-deep .mat-select-arrow-wrapper .mat-select-arrow{margin-right:10px}\", \"\"]);\n","import {Injectable} from '@angular/core';\nimport {ID} from '@datorama/akita';\nimport {from, of} from 'rxjs';\nimport {map, tap} from 'rxjs/operators';\nimport {FetchData} from '../../../../ajs-upgraded-providers';\nimport {StudentQuery} from './student.query';\nimport {StudentStore} from './student.store';\n\n@Injectable({ providedIn: 'root' })\nexport class StudentService {\n\n  constructor(private studentStore: StudentStore,\n              private studentQuery: StudentQuery,\n              private fetchData: FetchData) {\n  }\n\n  getByAssessmentInCourse(assessmentID: ID, courseID: ID) {\n    const students = this.studentQuery.getAllByAssessmentInCourse(assessmentID, courseID);\n\n    return students.length ?\n      of(students) : from<PromiseLike<any>>(this.fetchData.getAssignmentsStudents(assessmentID, courseID)).pipe(\n        map(entities => entities.map(entity => ({\n            name: entity.student_name,\n            id: entity.student_id,\n            assessments: [assessmentID],\n            courses: [courseID],\n          }),\n          ),\n        ),\n        tap(entities => this.studentStore.upsertMany(entities)),\n      );\n  }\n}\n","import { ID } from '@datorama/akita';\n\nexport interface Student {\n  assessments: ID[];\n  courses: ID[];\n  id: ID;\n  name: string;\n}\n\nexport function createStudent(params: Partial<Student>) {\n  return {\n    assessments: [],\n    courses: [],\n    ...params\n  } as Student;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AssignmentsComponent} from './assignments.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {downgradeComponent, downgradeInjectable} from '../../downgrade';\nimport {AssignmentsQuery, AssignmentsService, AssignmentsStore} from './state';\nimport {AssignmentModule} from './assignment/assignment.module';\nimport {AssignmentsSharedModule} from './shared/assignments-shared.module';\n\n\n@NgModule({\n  declarations: [\n    AssignmentsComponent\n  ],\n  imports: [\n    AssignmentModule,\n    AssignmentsSharedModule,\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [\n    AssignmentModule,\n    AssignmentsComponent,\n    AssignmentsSharedModule,\n  ],\n  entryComponents: [\n    AssignmentsComponent,\n  ]\n})\nexport class AssignmentsModule {\n  constructor() {\n    downgradeComponent('appAssignments', AssignmentsComponent);\n    downgradeInjectable('AssignmentsQuery', AssignmentsQuery);\n    downgradeInjectable('AssignmentsService', AssignmentsService);\n    downgradeInjectable('AppAssignmentsService', AssignmentsService);\n    downgradeInjectable('AssignmentsStore', AssignmentsStore);\n  }\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {Assignment, AssignmentsQuery} from './state';\nimport template from './assignments.component.html';\nimport style from './assignments.component.scss';\nimport {Observable} from 'rxjs';\nimport {ID} from '@datorama/akita';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-assignments',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AssignmentsComponent implements OnInit {\n\n  assignmentsAssessed: Observable<Assignment[]>;\n  assignmentsNotAssessed: Observable<Assignment[]>;\n\n  constructor(protected assignmentsQuery: AssignmentsQuery) {\n  }\n\n  ngOnInit() {\n    this.assignmentsAssessed = this.assignmentsQuery.selectFilteredAndSorted().pipe(\n      map(assignments => assignments.filter(assignment => !assignment.assignment_not_assessable))\n    );\n    this.assignmentsNotAssessed = this.assignmentsQuery.selectFilteredAndSorted().pipe(\n      map(assignments => assignments.filter(assignment => assignment.assignment_not_assessable))\n    );\n  }\n\n  trackById(index: number, assignment: Assignment): ID {\n    return assignment.id;\n  }\n\n}\n","export default \"<ng-container *ngIf=\\\"(assignmentsAssessed | async) as assignmentsAssessable\\\">\\n  <h1\\n    *ngIf=\\\"assignmentsAssessable.length\\\">{{ 'teacherAssignmentAssessableGroupLabel' | translate }}</h1>\\n  <app-assignment *ngFor=\\\"let assignment of assignmentsAssessable; trackBy trackById\\\" [assignment]=\\\"assignment\\\"></app-assignment>\\n</ng-container>\\n<ng-container *ngIf=\\\"(assignmentsNotAssessed | async) as assignmentsNotAssessable\\\">\\n  <h1\\n    *ngIf=\\\"assignmentsNotAssessable.length\\\">{{ 'teacherAssignmentWithoutAssessmentCriteriaGroupLabel' | translate }}</h1>\\n  <app-assignment *ngFor=\\\"let assignment of assignmentsNotAssessable; trackBy trackById\\\"\\n                  [assignment]=\\\"assignment\\\"></app-assignment>\\n</ng-container>\\n\";","\n        var result = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./assignments.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{display:flex;flex-direction:column}:host h1{align-items:center;color:var(--brand-color-green);display:flex;font-family:var(--brand-font-family);font-size:12px;font-weight:500;height:48px;justify-content:start;padding:0 10px}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AssignmentComponent} from './assignment.component';\nimport {downgradeComponent} from '../../../downgrade';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {AssessmentsModule} from './assessments/assessments.module';\nimport {MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MAT_MENU_DEFAULT_OPTIONS} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AssignmentComponent,\n  ],\n  exports: [\n    AssessmentsModule,\n    AssignmentComponent,\n  ],\n  imports: [\n    AssessmentsModule,\n    CommonModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,\n      useValue: { collapsedHeight: '64px', expandedHeight: '64px' },\n    },\n    {\n      provide: MAT_MENU_DEFAULT_OPTIONS,\n      useValue: { overlapTrigger: true }\n    }\n  ],\n  entryComponents: [\n    AssignmentComponent,\n  ]\n})\nexport class AssignmentModule {\n  constructor() {\n    downgradeComponent('appAssignment', AssignmentComponent);\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {Assignment, AssignmentsQuery, AssignmentsService, AssignmentUI} from '../state';\nimport template from './assignment.component.html';\nimport style from './assignment.component.scss';\nimport {ID} from '@datorama/akita';\nimport {combineLatest, from, noop, Observable} from 'rxjs';\nimport {AssessmentsVisibilityDialogService} from '../shared/components/assessments-visibility-dialog/state';\nimport {TeacherAssignmentsService} from '../../../ajs-upgraded-providers';\nimport {AssessmentsQuery, AssessmentsService} from './assessments/state';\nimport {map, switchMap, take} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-assignment',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignmentComponent implements OnInit {\n  @Input() assignment: Assignment;\n  assignmentUI: Observable<AssignmentUI>;\n\n  constructor(protected assignmentsService: AssignmentsService,\n              protected assessmentsService: AssessmentsService,\n              protected assignmentsQuery: AssignmentsQuery,\n              protected assessmentsQuery: AssessmentsQuery,\n              protected teacherAssignmentsService: TeacherAssignmentsService,\n              protected assessmentsVisibilityDialogService: AssessmentsVisibilityDialogService) {\n  }\n\n  ngOnInit() {\n    this.assignmentUI = this.assignmentsQuery.ui.selectEntity(this.assignment.id) as Observable<AssignmentUI>;\n  }\n\n  expand(id: ID) {\n    this.assignmentsService.updateUI(id, {isExpanded: true});\n  }\n\n  collapse(id: ID) {\n    this.assignmentsService.updateUI(id, {isExpanded: false});\n  }\n\n  changeAssessmentsStatusForManyStudents() {\n    combineLatest([\n      this.assessmentsQuery.selectMany(this.assignment.assessments),\n      this.assessmentsVisibilityDialogService.open(this.assignment.id),\n    ]).pipe(\n      take(1),\n      switchMap(([assessments, assignmentVisibility]) => {\n        return this.assessmentsService.updateStatusForMany({\n          ...this.assignment,\n          assessments: assessments as any\n        }, assignmentVisibility);\n      }),\n    ).subscribe(noop);\n  }\n\n  changeVisibility() {\n    this.assessmentsQuery.selectMany(this.assignment.assessments).pipe(\n      take(1),\n      map(assessments => ({\n        ...this.assignment,\n        assessments\n      })),\n    ).subscribe(\n      assignment => {\n        from<PromiseLike<void>>(this.teacherAssignmentsService.changeVisibility(assignment))\n          .subscribe(() => {\n              this.assignmentsService.update({\n                ...this.assignment,\n                assessment_last_changed: (new Date()).getTime(),\n              });\n            }\n          );\n      },\n    );\n  }\n}\n","export default \"<ng-container *ngIf=\\\"(assignmentUI | async) as ui\\\">\\n  <mat-accordion displayMode=\\\"flat\\\">\\n    <mat-expansion-panel class=\\\"mat-elevation-z0\\\"\\n                         [disabled]=\\\"assignment.assignment_not_assessable\\\"\\n                         [hideToggle]=\\\"assignment.assignment_not_assessable\\\"\\n                         [expanded]=\\\"ui.isExpanded\\\"\\n                         (afterExpand)=\\\"expand(assignment.id)\\\"\\n                         (afterCollapse)=\\\"collapse(assignment.id)\\\">\\n      <mat-expansion-panel-header matRipple>\\n        <mat-panel-title appUiSref=\\\"teacher_assess_assignment\\\"\\n                         [appUiSrefOpt]=\\\"{ stopPropagation: true }\\\"\\n                         [appUiSrefProps]=\\\"{ assignment: assignment, isModal: true }\\\">\\n          <app-assignment-type-icon\\n            [type]=\\\"{ type: assignment.assignment_type, state: assignment.state }\\\"></app-assignment-type-icon>\\n          <span appTooltipEllipsis\\n                [matTooltip]=\\\"assignment.title\\\">{{assignment.title}}</span>\\n        </mat-panel-title>\\n        <mat-panel-description>\\n          <ng-container\\n            *ngIf=\\\"assignment.assignment_not_assessable; then assignmentNotAssessable; else assignmentAssessable\\\"></ng-container>\\n\\n          <ng-template #assignmentNotAssessable>\\n            <button mat-icon-button\\n                    [disableRipple]=\\\"true\\\"\\n                    appUiSref=\\\"teacher_set_assignment_objectives\\\"\\n                    [appUiSrefOpt]=\\\"{ stopPropagation: true }\\\"\\n                    [appUiSrefProps]=\\\"{ assignment: assignment, isModal: true }\\\">\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n          </ng-template>\\n\\n          <ng-template #assignmentAssessable>\\n            <button mat-icon-button\\n                    [disableRipple]=\\\"true\\\"\\n                    appClickStopPropagation\\n                    [matMenuTriggerFor]=\\\"matMenu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu [ngClass]=\\\"'menuTest'\\\" #matMenu>\\n              <ng-template matMenuContent>\\n                <button mat-menu-item\\n                        (click)=\\\"changeAssessmentsStatusForManyStudents()\\\">{{ 'teacherAssignmentsMenuSetAssessmentStatusOnManyStudents' | translate }}\\n                </button>\\n                <mat-divider></mat-divider>\\n                <button mat-menu-item\\n                        (click)=\\\"changeVisibility()\\\">{{ 'setVisibilityMenuItem' | translate }}...\\n                </button>\\n                <mat-divider></mat-divider>\\n                <button mat-menu-item\\n                        appUiSref=\\\"teacher_set_assignment_objectives\\\"\\n                        [appUiSrefProps]=\\\"{ assignment: assignment, isModal: true }\\\">{{ 'editAssessmentCriteriaBtn' | translate }}\\n                  ...\\n                </button>\\n              </ng-template>\\n            </mat-menu>\\n          </ng-template>\\n        </mat-panel-description>\\n      </mat-expansion-panel-header>\\n      <ng-template matExpansionPanelContent>\\n        <ng-container *ngIf=\\\"!assignment.assignment_not_assessable\\\">\\n          <app-assessments [assignment]=\\\"assignment\\\" [ids]=\\\"assignment.assessments\\\"></app-assessments>\\n        </ng-container>\\n      </ng-template>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</ng-container>\\n\";","\n        var result = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./assignment.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host mat-expansion-panel{border-bottom:1px solid rgba(0,0,0,.1)}:host mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header[aria-disabled=true].cdk-keyboard-focused,:host mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header[aria-disabled=true].cdk-program-focused,:host mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header[aria-disabled=true]:hover{background:rgba(0,0,0,.04)}:host mat-expansion-panel-header{color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:14px;font-weight:400;padding:0 10px;position:relative}:host mat-expansion-panel-header[aria-disabled=true]{cursor:pointer}:host mat-expansion-panel-header ::ng-deep .mat-content{height:100%;max-width:calc(100% - 40px)}:host mat-expansion-panel-header ::ng-deep .mat-expansion-indicator{margin-top:-5px}:host mat-expansion-panel-header ::ng-deep .mat-expansion-indicator::after{color:var(--brand-color-grey)}:host ::ng-deep .mat-expansion-panel-body{padding:0 0 16px}:host ::ng-deep .mat-list-base .mat-list-item{height:64px}:host ::ng-deep .mat-list-base .mat-list-item .mat-list-item-content{padding:0 0 0 10px}:host mat-panel-title{align-items:center;margin-right:10px;overflow:hidden}:host mat-panel-title span{margin-left:17px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host mat-panel-description{flex-grow:0;margin-right:8px;position:absolute;right:0;top:50%;transform:translateY(-50%)}:host button[mat-icon-button]{background-color:rgba(255,255,255,0);min-height:auto;min-width:auto;padding:0;width:24px}:host button[mat-icon-button] mat-icon{color:var(--brand-color-grey)}\", \"\"]);\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { AssessmentsVisibilityDialogStore, AssessmentsVisibilityDialogState } from './assessments-visibility-dialog.store';\n\n@Injectable({ providedIn: 'root' })\nexport class AssessmentsVisibilityDialogQuery extends QueryEntity<AssessmentsVisibilityDialogState> {\n\n  constructor(protected store: AssessmentsVisibilityDialogStore) {\n    super(store);\n  }\n\n}\n","import { ComponentType } from '@angular/cdk/portal';\nimport { Inject, Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { ID } from '@datorama/akita';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Path } from '../../../../../../ajs-upgraded-providers';\nimport { AssessmentStatus } from '../../../../../../shared/models/assessment.model';\nimport { StudentService } from '../../../../../shared/states/students';\nimport { AssessmentsVisibilityDialogComponent } from '../assessments-visibility-dialog.component';\nimport { AssessmentStudentOption, AssessmentsVisibility, AssessmentsVisibilityDialog, AssessmentsVisibilityDialogForm, AssessmentVisibility, AssessmentVisibilityOption } from './assessments-visibility-dialog.model';\nimport { AssessmentsVisibilityDialogStore } from './assessments-visibility-dialog.store';\n\n@Injectable({ providedIn: 'root' })\nexport class AssessmentsVisibilityDialogService {\n  static DEFAULT_CONFIG: MatDialogConfig<ID> = {\n    hasBackdrop: true,\n    minHeight: 340,\n    maxWidth: 525,\n  };\n\n  static VISIBILITY_OPTIONS: AssessmentVisibility[] = [\n    AssessmentVisibility.RESULT,\n    AssessmentVisibility.OVERALL_FEEDBACK,\n    AssessmentVisibility.GRADE,\n    AssessmentVisibility.OBJECTIVES_FEEDBACK,\n  ];\n\n  constructor(private assessmentsVisibilityDialogStore: AssessmentsVisibilityDialogStore,\n              protected formBuilder: FormBuilder,\n              protected matDialog: MatDialog,\n              protected studentService: StudentService,\n              protected path: Path,\n              @Inject('AssessmentsVisibilityDialogComponent')\n              protected assessmentsVisibilityDialogComponent: ComponentType<AssessmentsVisibilityDialogComponent>) {\n  }\n\n  open(assessmentID: ID): Observable<Partial<AssessmentsVisibility>> {\n    return this.matDialog\n      .open(this.assessmentsVisibilityDialogComponent, {\n        ...AssessmentsVisibilityDialogService.DEFAULT_CONFIG,\n        data: assessmentID,\n      })\n      .afterClosed()\n      .pipe(filter(Boolean));\n  }\n\n  mapOptionsToValue(options: { value: any }[]): any[] {\n    return options.map(option => option.value);\n  }\n\n  getSettings(assessmentID: ID) {\n    return this.getStudentSelectOptions(assessmentID, this.path.getClassroomId()).pipe(\n      map(studentOptions => {\n        const form = this.createFormGroup();\n        const visibilityOptions = this.getVisibilitySelectOptions();\n        const assessmentStatusOptions = this.getAvaialableAssessmentsStatus();\n\n        form.controls.visibilities.setValue([...AssessmentsVisibilityDialogService.VISIBILITY_OPTIONS]);\n        form.controls.studentsID.setValue(this.mapOptionsToValue(studentOptions));\n\n        return {\n          form,\n          assessmentStatusOptions,\n          studentOptions,\n          visibilityOptions,\n        };\n      }),\n    );\n  }\n\n  save(assessmentsVisibilityDialog: AssessmentsVisibilityDialog) {\n    this.assessmentsVisibilityDialogStore.upsert(0, assessmentsVisibilityDialog);\n  }\n\n  protected createFormGroup(): FormGroup {\n    const assessmentsVisibilityDialogForm: AssessmentsVisibilityDialogForm = this.build();\n\n    return this.formBuilder.group(assessmentsVisibilityDialogForm);\n  }\n\n  mapFormToResponse(form: FormGroup): AssessmentsVisibility {\n    const response = {\n      status: form.value.status,\n      student_ids: form.value.studentsID.filter(value => value !== 'all'),\n    };\n\n    return form.value.status === AssessmentStatus.ASSESSMENT_DONE ?\n      {\n        ...response,\n        grades_visible: form.value.visibilities.includes(AssessmentVisibility.GRADE),\n        objectives_feedback_visible: form.value.visibilities.includes(AssessmentVisibility.OBJECTIVES_FEEDBACK),\n        overall_feedback_visible: form.value.visibilities.includes(AssessmentVisibility.OVERALL_FEEDBACK),\n        result_visible: form.value.visibilities.includes(AssessmentVisibility.RESULT),\n      } :\n      response as AssessmentsVisibility;\n  }\n\n  protected getVisibilitySelectOptions(): AssessmentVisibilityOption[] {\n    return AssessmentsVisibilityDialogService.VISIBILITY_OPTIONS.map(option => {\n      switch (option) {\n        case AssessmentVisibility.GRADE:\n          return {\n            value: option,\n            label: 'teacherAssignmentsAssessmentManyStudentVisibilityOptionGrade',\n          };\n        case AssessmentVisibility.OBJECTIVES_FEEDBACK:\n          return {\n            value: option,\n            label: 'teacherAssignmentsAssessmentManyStudentVisibilityOptionObjectivesFeedback',\n          };\n        case AssessmentVisibility.OVERALL_FEEDBACK:\n          return {\n            value: option,\n            label: 'teacherAssignmentsAssessmentManyStudentVisibilityOptionOverallFeedback',\n          };\n        case AssessmentVisibility.RESULT:\n          return {\n            value: option,\n            label: 'teacherAssignmentsAssessmentManyStudentVisibilityOptionResult',\n          };\n      }\n    });\n  }\n\n  protected getAvaialableAssessmentsStatus(): AssessmentStatus[] {\n    return [\n      AssessmentStatus.NOT_ASSESSED,\n      AssessmentStatus.ASSESSING,\n      AssessmentStatus.ASSESSMENT_DONE,\n    ];\n  }\n\n  protected getStudentSelectOptions(assessmentID: ID, courseID: ID): Observable<AssessmentStudentOption[]> {\n    return this.studentService.getByAssessmentInCourse(assessmentID, courseID).pipe(\n      map(students => students.map(student => ({\n          value: student.id,\n          label: student.name,\n        })),\n      ),\n    );\n  }\n\n  protected build(): AssessmentsVisibilityDialogForm {\n    return {\n      visibilities: [],\n      status: null,\n      studentsID: [],\n    };\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AssessmentsComponent} from './assessments.component';\nimport {SharedModule} from '../../../../shared/shared.module';\nimport {downgradeComponent, downgradeInjectable} from '../../../../downgrade';\nimport {AssessmentsQuery, AssessmentsService, AssessmentsStore} from './state';\nimport {AssessmentModule} from './assessment/assessment.module';\n\n@NgModule({\n  declarations: [\n    AssessmentsComponent,\n  ],\n  imports: [\n    AssessmentModule,\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [\n    AssessmentModule,\n    AssessmentsComponent,\n  ],\n  entryComponents: [\n    AssessmentsComponent,\n  ]\n})\nexport class AssessmentsModule {\n  constructor() {\n    downgradeComponent('appAssessments', AssessmentsComponent);\n    downgradeInjectable('AssessmentsQuery', AssessmentsQuery);\n    downgradeInjectable('AssessmentsService', AssessmentsService);\n    downgradeInjectable('AssessmentsStore', AssessmentsStore);\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport template from './assessments.component.html';\nimport style from './assessments.component.scss';\nimport {ID} from '@datorama/akita';\nimport {Assessment, AssessmentsQuery} from './state';\nimport {Observable} from 'rxjs';\nimport {Assignment} from '../../state';\n\n@Component({\n  selector: 'app-assessments',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssessmentsComponent implements OnInit {\n  @Input() assignment: Assignment;\n  @Input() ids: ID[];\n  assessments: Observable<Assessment[]>;\n\n  constructor(protected assessmentsQuery: AssessmentsQuery) {\n  }\n\n  ngOnInit() {\n    this.assessments = this.assessmentsQuery.selectManySorted(this.ids);\n  }\n\n  trackById(index: number, assessment: Assessment): ID {\n    return assessment.id;\n  }\n}\n","export default \"<ng-container *ngFor=\\\"let assessment of assessments | async; trackBy: trackById\\\">\\n  <app-assessment [assignment]=\\\"assignment\\\" [assessment]=\\\"assessment\\\"\\n                  appUiSref=\\\"teacher_assess_assignment_student\\\"\\n                  [appUiSrefProps]=\\\"{ studentId: assessment.student_id, assignment: assignment }\\\"></app-assessment>\\n</ng-container>\\n\";","\n        var result = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./assessments.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{display:block}:host app-assessment{padding-left:10px;width:calc(100% - 10px)}:host app-assessment:hover{background:rgba(0,0,0,.04)}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AssessmentComponent} from './assessment.component';\nimport {SharedModule} from '../../../../../shared/shared.module';\nimport {downgradeComponent} from '../../../../../downgrade';\n\n@NgModule({\n  declarations: [\n    AssessmentComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  exports: [\n    AssessmentComponent,\n  ],\n  entryComponents: [\n    AssessmentComponent,\n  ]\n})\nexport class AssessmentModule {\n  constructor() {\n    downgradeComponent('appAssessmentComponent', AssessmentComponent);\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport template from './assessment.component.html';\nimport style from './assessment.component.scss';\nimport {Assessment, AssessmentsService, AssessmentStatus} from '../state';\nimport {AssessmentVisibilityDialogService} from '../../../shared/components/assessment-visibility-dialog/state/assessment-visibility-dialog.service';\nimport {switchMap} from 'rxjs/operators';\nimport {Assignment, AssignmentsService} from '../../../state';\n\n@Component({\n  selector: 'app-assessment',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssessmentComponent implements OnInit {\n  @Input() assignment: Assignment;\n  @Input() assessment: Assessment;\n\n  menuItems = [\n    {\n      status: AssessmentStatus.ASSESSMENT_DONE,\n      label: 'teacherAssignmentsAssessmentsStudentMenuAssessed',\n    },\n    {\n      status: AssessmentStatus.ASSESSING,\n      label: 'teacherAssignmentsAssessmentsStudentMenuAssessing',\n    },\n    {\n      status: AssessmentStatus.NOT_ASSESSED,\n      label: 'teacherAssignmentsAssessmentsStudentMenuNotAssessed',\n    },\n  ];\n\n  constructor(protected assessmentsService: AssessmentsService,\n              protected assessmentVisibilityDialogService: AssessmentVisibilityDialogService,\n              protected assignmentsService: AssignmentsService) {\n  }\n\n  ngOnInit() {\n  }\n\n  changeStatus(status: AssessmentStatus) {\n    if (status === AssessmentStatus.ASSESSMENT_DONE) {\n      this.assessmentVisibilityDialogService.open(this.assignment.id).pipe(\n        switchMap(assessmentVisibilityDialog => {\n          const statusUpdateBody = {\n            ...assessmentVisibilityDialog,\n            status,\n          };\n          return this.assessmentsService.updateStatus(this.assignment.id, this.assessment, statusUpdateBody);\n        })\n      ).subscribe(() => this.updateAssignmentTimestamp());\n    } else {\n      this.assessmentsService.updateStatus(this.assignment.id, this.assessment, {status})\n        .subscribe(() => this.updateAssignmentTimestamp());\n    }\n  }\n\n  updateAssignmentTimestamp() {\n    this.assignmentsService.update({...this.assignment});\n  }\n}\n","export default \"<app-assessment-status-icon class=\\\"status\\\"\\n                            [status]=\\\"{ status: assessment.status_new, warning: assessment.fail_warning }\\\"></app-assessment-status-icon>\\n<div class=\\\"title\\\"\\n     [matTooltip]=\\\"assessment.student_name\\\"\\n     appTooltipEllipsis>{{ assessment.student_name }}</div>\\n<button ngClass=\\\"menu\\\"\\n        mat-icon-button\\n        [disableRipple]=\\\"true\\\"\\n        appClickStopPropagation\\n        [matMenuTriggerFor]=\\\"matMenu\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n<mat-menu #matMenu>\\n  <ng-template matMenuContent>\\n    <ng-container *ngFor=\\\"let menuItem of menuItems\\\">\\n      <button mat-menu-item\\n              (click)=\\\"changeStatus(menuItem.status)\\\">\\n        <app-assessment-status-icon [status]=\\\"menuItem\\\"></app-assessment-status-icon>\\n        <span>{{ menuItem.label | translate }}</span>\\n      </button>\\n    </ng-container>\\n  </ng-template>\\n</mat-menu>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./assessment.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{display:grid;grid-template-areas:\\\"status title menu\\\";grid-template-columns:40px auto 40px;grid-template-rows:100% 0;height:64px;width:100%}:host .status,:host .title,:host .menu{align-self:center;justify-self:center}:host .status{grid-area:status;height:24px}:host .title{cursor:pointer;font-size:14px;grid-area:title;justify-self:start;margin-left:17px;max-width:calc(100% - 17px);overflow:hidden;text-overflow:ellipsis;white-space:nowrap;line-height:1.8}:host .menu{grid-area:menu}:host .menu[mat-button]{min-height:24px;min-width:24px;padding:0}\", \"\"]);\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {AssessmentVisibilityDialogComponent} from './components/assessment-visibility-dialog/assessment-visibility-dialog.component';\nimport {AssessmentsVisibilityDialogComponent} from './components/assessments-visibility-dialog/assessments-visibility-dialog.component';\nimport {downgradeComponent, downgradeInjectable} from '../../../downgrade';\nimport {\n  AssessmentsVisibilityDialogQuery,\n  AssessmentsVisibilityDialogService,\n  AssessmentsVisibilityDialogStore\n} from './components/assessments-visibility-dialog/state';\nimport {AssessmentVisibilityDialogService} from './components/assessment-visibility-dialog/state/assessment-visibility-dialog.service';\nimport {AssessmentVisibilityDialogStore} from './components/assessment-visibility-dialog/state/assessment-visibility-dialog.store';\nimport {AssessmentVisibilityDialogQuery} from './components/assessment-visibility-dialog/state/assessment-visibility-dialog.query';\n\n@NgModule({\n  declarations: [\n    AssessmentVisibilityDialogComponent,\n    AssessmentsVisibilityDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n  ],\n  providers: [\n    {\n      provide: 'AssessmentVisibilityDialogComponent',\n      useValue: AssessmentVisibilityDialogComponent\n    },\n    {\n      provide: 'AssessmentsVisibilityDialogComponent',\n      useValue: AssessmentsVisibilityDialogComponent\n    }\n  ],\n  exports: [\n    AssessmentVisibilityDialogComponent,\n    AssessmentsVisibilityDialogComponent,\n  ],\n  entryComponents: [\n    AssessmentVisibilityDialogComponent,\n    AssessmentsVisibilityDialogComponent,\n  ]\n})\nexport class AssignmentsSharedModule {\n  constructor() {\n    downgradeComponent('appAssessmentVisibilityDialog', AssessmentVisibilityDialogComponent);\n    downgradeComponent('appAssessmentsVisibilityDialog', AssessmentsVisibilityDialogComponent);\n    downgradeInjectable('AssessmentsVisibilityDialogQuery', AssessmentsVisibilityDialogQuery);\n    downgradeInjectable('AssessmentsVisibilityDialogService', AssessmentsVisibilityDialogService);\n    downgradeInjectable('AssessmentsVisibilityDialogStore', AssessmentsVisibilityDialogStore);\n    downgradeInjectable('AssessmentVisibilityDialogQuery', AssessmentVisibilityDialogQuery);\n    downgradeInjectable('AssessmentVisibilityDialogService', AssessmentVisibilityDialogService);\n    downgradeInjectable('AssessmentVisibilityDialogStore', AssessmentVisibilityDialogStore);\n  }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ID } from '@datorama/akita';\nimport template from './assessment-visibility-dialog.component.html';\nimport style from './assessment-visibility-dialog.component.scss';\nimport { AssessmentVisibilityDialogService } from './state/assessment-visibility-dialog.service';\n\n@Component({\n  selector: 'app-assessment-visibility-dialog',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssessmentVisibilityDialogComponent implements OnInit {\n  public visibilityForm: FormGroup;\n\n  constructor(protected assessmentVisibilityDialogService: AssessmentVisibilityDialogService,\n              protected  changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_DIALOG_DATA) protected id: ID) {\n  }\n\n  ngOnInit() {\n    this.visibilityForm = this.assessmentVisibilityDialogService.createFormGroup(this.id);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  apply() {\n    this.assessmentVisibilityDialogService.save(this.visibilityForm.getRawValue());\n  }\n}\n","export default \"<h1 mat-dialog-title>{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogHeader' | translate }}</h1>\\n<div mat-dialog-content>\\n  <form [formGroup]=\\\"visibilityForm\\\">\\n    <mat-checkbox formControlName=\\\"result_visible\\\">{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogOptionResult' | translate }}</mat-checkbox>\\n    <mat-checkbox formControlName=\\\"overall_feedback_visible\\\">{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogOptionOverallFeedback' | translate }}</mat-checkbox>\\n    <mat-checkbox formControlName=\\\"grades_visible\\\">{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogOptionAssessment' | translate }}</mat-checkbox>\\n    <mat-checkbox formControlName=\\\"objectives_feedback_visible\\\">{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogOptionFeedbackOnLearningObjectives' | translate }}</mat-checkbox>\\n    <div class=\\\"save\\\">\\n      <span>{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogSave' | translate }}</span>\\n      <mat-checkbox formControlName=\\\"saved\\\"></mat-checkbox>\\n    </div>\\n  </form>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button\\n          [mat-dialog-close]=\\\"null\\\"\\n          cdkFocusInitial>{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogActionCancel' | translate }}\\n  </button>\\n  <button mat-button\\n          (click)=\\\"apply()\\\"\\n          [mat-dialog-close]=\\\"visibilityForm.getRawValue()\\\">{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogActionGoAhead' | translate }}\\n  </button>\\n</div>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./assessment-visibility-dialog.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host{display:block}:host .mat-checkbox ::ng-deep .mat-checkbox-layout .mat-checkbox-label,:host .mat-dialog-content .save span{color:var(--brand-color-grey);font-family:var(--brand-font-family);font-size:16px;font-weight:400;line-height:19px}:host .mat-dialog-content{border:1px solid rgba(0,0,0,.12);border-left:0;border-right:0;min-height:215px}:host .mat-dialog-content .save{display:grid;grid-auto-rows:auto;grid-template-areas:\\\"text checkbox\\\";grid-template-columns:auto 40px}:host .mat-dialog-content .save span,:host .mat-dialog-content .save mat-checkbox{place-self:center}:host .mat-dialog-content .save span{grid-area:text}:host .mat-dialog-content .save mat-checkbox{grid-area:checkbox}:host .mat-checkbox{display:flex;flex-direction:row;height:64px}:host .mat-checkbox ::ng-deep .mat-checkbox-layout{align-items:center}:host ::ng-deep .mat-checkbox.mat-accent.mat-checkbox-checked .mat-ripple-element,:host ::ng-deep .mat-checkbox.mat-accent.mat-checkbox-checked .mat-checkbox-background,:host ::ng-deep .mat-checkbox.mat-accent.mat-checkbox-indeterminate .mat-ripple-element,:host ::ng-deep .mat-checkbox.mat-accent.mat-checkbox-indeterminate .mat-checkbox-background{background-color:var(--theme-color)}:host .mat-dialog-actions{align-items:center;justify-content:flex-end}:host .mat-dialog-actions button ::ng-deep .mat-button-wrapper{color:var(--theme-color);font-family:var(--brand-font-family);font-size:14px;font-weight:500}\", \"\"]);\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatRadioChange} from '@angular/material';\nimport {ID} from '@datorama/akita';\nimport {Subscription} from 'rxjs';\nimport {AssessmentStatus} from '../../../../../shared/models/assessment.model';\nimport template from './assessments-visibility-dialog.component.html';\nimport style from './assessments-visibility-dialog.component.scss';\nimport {AssessmentStudentOption, AssessmentsVisibilityDialogService, AssessmentVisibilityOption} from './state';\n\n@Component({\n  selector: 'app-assessments-visibility-dialog',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssessmentsVisibilityDialogComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  visibilityOptions: AssessmentVisibilityOption[];\n  studentOptions: AssessmentStudentOption[];\n  assessmentsStatus: AssessmentStatus[];\n  allVisibilitiesChecked = false;\n  allStudentsChecked = false;\n  subscription: Subscription;\n  showVisibilitySection: boolean;\n\n  constructor(protected assessmentsVisibilityDialogService: AssessmentsVisibilityDialogService,\n              protected  changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_DIALOG_DATA) protected assessmentID: ID) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.assessmentsVisibilityDialogService.getSettings(this.assessmentID)\n      .subscribe(settings => {\n        this.form = settings.form;\n        this.visibilityOptions = settings.visibilityOptions;\n        this.studentOptions = settings.studentOptions;\n        this.assessmentsStatus = settings.assessmentStatusOptions;\n        this.showVisibilitySection = this.form.value.status === AssessmentStatus.ASSESSMENT_DONE;\n        this.updateVisibilitySelectAllState();\n        this.updateStudentSelectAllState();\n        this.changeDetectorRef.detectChanges(); // Fix bug on matButton\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  toggleAllVisibility() {\n    const update = { ...this.form.value };\n\n    if (this.allVisibilitiesChecked) {\n      update.visibilities = [];\n    } else {\n      update.visibilities = ['all', ...this.assessmentsVisibilityDialogService.mapOptionsToValue(this.visibilityOptions)];\n    }\n\n    this.allVisibilitiesChecked = !this.allVisibilitiesChecked;\n\n    this.form.setValue({ ...update }, { emitEvent: false });\n  }\n\n  updateVisibilitySelectAllState() {\n    const selectedVisibilities: ID[] = this.form.value.visibilities;\n    const filteredSelectedVisibilities: ID[] = selectedVisibilities.filter(value => value !== 'all');\n    const selectedCount = filteredSelectedVisibilities.length;\n    const optionsCount = this.visibilityOptions.length;\n\n\n    if (selectedCount === optionsCount && !this.allVisibilitiesChecked) {\n      this.toggleAllVisibility();\n    } else if (selectedCount < optionsCount && this.allVisibilitiesChecked) {\n      const update = { ...this.form.value };\n\n      this.allVisibilitiesChecked = false;\n      update.visibilities = [...filteredSelectedVisibilities];\n      this.form.setValue({ ...update }, { emitEvent: false });\n    }\n  }\n\n  toggleAllStudent() {\n    const update = { ...this.form.value };\n\n    if (this.allStudentsChecked) {\n      update.studentsID = [];\n    } else {\n      update.studentsID = ['all', ...this.assessmentsVisibilityDialogService.mapOptionsToValue(this.studentOptions)];\n    }\n\n    this.allStudentsChecked = !this.allStudentsChecked;\n\n    this.form.setValue({ ...update }, { emitEvent: false });\n  }\n\n  updateStudentSelectAllState() {\n    const selectedStudents: ID[] = this.form.value.studentsID;\n    const filteredSelectedStudents: ID[] = selectedStudents.filter(value => value !== 'all');\n    const selectedCount = filteredSelectedStudents.length;\n    const optionsCount = this.studentOptions.length;\n\n\n    if (selectedCount === optionsCount && !this.allStudentsChecked) {\n      this.toggleAllStudent();\n    } else if (selectedCount < optionsCount && this.allStudentsChecked) {\n      const update = { ...this.form.value };\n\n      this.allStudentsChecked = false;\n      update.studentsID = [...filteredSelectedStudents];\n      this.form.setValue({ ...update }, { emitEvent: false });\n    }\n  }\n\n  changeSelectedStatus(change: MatRadioChange) {\n    this.showVisibilitySection = change.value === AssessmentStatus.ASSESSMENT_DONE;\n  }\n\n  apply() {\n    this.assessmentsVisibilityDialogService.save(this.form.getRawValue());\n  }\n\n  getRawValue() {\n    return this.form ? this.assessmentsVisibilityDialogService.mapFormToResponse(this.form) : null;\n  }\n\n  trackByValue(index, item: { value: any }): any {\n    return item.value;\n  }\n}\n","export default \"<h1 mat-dialog-title>{{ 'teacherAssignmentsAssessmentManyStudentVisibilityDialogHeader' | translate }}</h1>\\n<div mat-dialog-content>\\n  <ng-container *ngIf=\\\"form\\\">\\n    <form [formGroup]=\\\"form\\\">\\n      <span class=\\\"label\\\">{{ 'teacherAssignmentsAssessmentManyStudentStatusLabel' | translate }}</span>\\n      <mat-radio-group formControlName=\\\"status\\\"\\n                       (change)=\\\"changeSelectedStatus($event)\\\"\\n                       required>\\n        <mat-radio-button *ngFor=\\\"let assessmentStatus of assessmentsStatus\\\"\\n                          [value]=\\\"assessmentStatus\\\"\\n                          matRipple>\\n          <app-assessment-status-icon [status]=\\\"{ status: assessmentStatus }\\\"></app-assessment-status-icon>\\n          {{ ('teacherAssignmentsAssessmentManyStudentStatusLabel_' + assessmentStatus) | translate }}\\n        </mat-radio-button>\\n      </mat-radio-group>\\n      <span class=\\\"label select\\\">{{ 'teacherAssignmentsAssessmentManyStudentIdsLabel' | translate }}</span>\\n      <mat-form-field floatLabel=\\\"never\\\"\\n                      hideRequiredMarker>\\n        <mat-select (selectionChange)=\\\"updateStudentSelectAllState()\\\"\\n                    placeholder=\\\"{{'teacherAssignmentsAssessmentManyStudentTriggerNoneStudents' | translate}}\\\"\\n                    formControlName=\\\"studentsID\\\"\\n                    required\\n                    multiple>\\n          <mat-select-trigger>\\n            <ng-container *ngIf=\\\"form.value.studentsID.length === 1\\\">\\n              {{ 'teacherAssignmentsAssessmentManyStudentTriggerSingleStudent' | translate }}\\n            </ng-container>\\n            <ng-container *ngIf=\\\"form.value.studentsID.length > 1 && !allStudentsChecked\\\">\\n              {{form.value.studentsID.length}}{{ 'teacherAssignmentsAssessmentManyStudentTriggerMultiplyStudents' | translate }}\\n            </ng-container>\\n            <ng-container *ngIf=\\\"allStudentsChecked\\\">\\n              {{ 'teacherAssignmentsAssessmentManyStudentTriggerAllStudents' | translate }}\\n            </ng-container>\\n          </mat-select-trigger>\\n          <mat-option (click)=\\\"toggleAllStudent()\\\"\\n                      value=\\\"all\\\">{{ 'teacherAssignmentsAssessmentManyStudentIdOptionAll' | translate }}</mat-option>\\n          <mat-divider></mat-divider>\\n          <mat-option *ngFor=\\\"let option of studentOptions; trackBy: trackByValue\\\"\\n                      [value]=\\\"option.value\\\">{{ option.label }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <ng-container *ngIf=\\\"showVisibilitySection\\\">\\n        <span class=\\\"label select\\\">{{ 'teacherAssignmentsAssessmentManyStudentVisibilityLabel' | translate }}</span>\\n        <mat-form-field floatLabel=\\\"never\\\">\\n          <mat-select (selectionChange)=\\\"updateVisibilitySelectAllState()\\\"\\n                      placeholder=\\\"{{'teacherAssignmentsAssessmentManyStudentTriggerNoneVisibilities' | translate}}\\\"\\n                      formControlName=\\\"visibilities\\\"\\n                      multiple>\\n            <mat-select-trigger *ngIf=\\\"form.value.visibilities.length\\\">\\n              <ng-container *ngIf=\\\"form.value.visibilities.length === 1\\\">\\n                {{ 'teacherAssignmentsAssessmentManyStudentTriggerSingleVisibility' | translate }}\\n              </ng-container>\\n              <ng-container *ngIf=\\\"form.value.visibilities.length > 1 && !allVisibilitiesChecked\\\">\\n                {{form.value.visibilities.length}}{{ 'teacherAssignmentsAssessmentManyStudentTriggerMultiplyVisibilities' | translate }}\\n              </ng-container>\\n              <ng-container *ngIf=\\\"allVisibilitiesChecked\\\">\\n                {{ 'teacherAssignmentsAssessmentManyStudentTriggerAllVisibilities' | translate }}\\n              </ng-container>\\n            </mat-select-trigger>\\n            <mat-option (click)=\\\"toggleAllVisibility()\\\"\\n                        value=\\\"all\\\">{{ 'teacherAssignmentsAssessmentManyStudentVisibilityOptionAll' | translate }}</mat-option>\\n            <mat-divider></mat-divider>\\n            <mat-option *ngFor=\\\"let option of visibilityOptions; trackBy: trackByValue\\\"\\n                        [value]=\\\"option.value\\\">{{ option.label | translate }}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </ng-container>\\n    </form>\\n  </ng-container>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button\\n          [mat-dialog-close]=\\\"null\\\"\\n          cdkFocusInitial>{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogActionCancel' | translate }}\\n  </button>\\n  <button mat-button\\n          (click)=\\\"apply()\\\"\\n          [disabled]=\\\"!form || form.invalid\\\"\\n          [mat-dialog-close]=\\\"getRawValue()\\\">{{ 'teacherAssignmentsAssessmentStudentVisibilityDialogActionGoAhead' | translate }}\\n  </button>\\n</div>\\n\";","\n        var result = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../../node_modules/sass-loader/dist/cjs.js!./assessments-visibility-dialog.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    ","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":host span.label{color:rgba(0,0,0,.54);font-family:var(--brand-font-family);font-size:12px;font-weight:500}:host span.label.select{display:inline-block;transform:translateY(10px)}:host mat-form-field{display:flex}:host mat-form-field ::ng-deep .mat-form-field-wrapper{min-width:100%}:host mat-form-field ::ng-deep .mat-form-field-ripple{background-color:var(--theme-color)}:host mat-radio-group{display:flex;flex-direction:column}:host mat-radio-group mat-radio-button.mat-radio-button.mat-radio-checked{background-color:rgba(0,0,0,.08)}:host mat-radio-group mat-radio-button.mat-radio-button ::ng-deep .mat-ripple-element{background-color:rgba(0,0,0,.08)}:host mat-radio-group mat-radio-button.mat-radio-button ::ng-deep .mat-radio-container{display:none}:host mat-radio-group mat-radio-button.mat-radio-button ::ng-deep .mat-radio-label-content{align-items:center;display:flex;flex-direction:row;height:36px}:host mat-radio-group mat-radio-button.mat-radio-button ::ng-deep .mat-radio-label-content app-assessment-status-icon{height:24px;margin-right:10px}:host .mat-dialog-actions{justify-content:flex-end}:host .mat-dialog-actions .mat-button:not([disabled]){color:var(--theme-color)}:host .mat-dialog-actions .mat-button:not([disabled]) ::ng-deep .mat-button-focus-overlay{background:var(--theme-color)}::content.mat-option.mat-selected:not(.mat-option-disabled){color:var(--theme-color)}::content.mat-option.mat-selected:not(.mat-option-disabled) ::ng-deep .mat-pseudo-checkbox-checked,::content.mat-option.mat-selected:not(.mat-option-disabled) ::ng-deep .mat-pseudo-checkbox-indeterminate{background:var(--theme-color)}\", \"\"]);\n","export * from './assignments.query';\nexport * from './assignments.store';\nexport * from './assignments.service';\nexport * from './assignment.model';\n","export * from './assessments.query';\nexport * from './assessments.store';\nexport * from './assessments.service';\nexport * from './assessment.model';\n","import {ChangeDetectionStrategy, Component, OnDestroy, OnInit} from '@angular/core';\nimport template from './setup-step.component.html';\nimport style from './setup-step.component.scss';\nimport {HashMap} from '@datorama/akita';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {AkitaNgFormsManager} from '@datorama/akita-ng-forms-manager';\nimport {Steps} from '../../../state/setup-step.model';\nimport {SetupStepsService} from '../../../setup-steps.service';\n\n@Component({\n  selector: 'app-setup-step',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SetupStepComponent implements OnInit, OnDestroy {\n  step: Steps;\n  formStructure: HashMap<any>;\n  form: FormGroup;\n\n  constructor(protected setupStepsService: SetupStepsService,\n              protected formBuilder: FormBuilder,\n              protected formsManager: AkitaNgFormsManager<any>) {\n    this.step = this.setupStepsService.getStep();\n  }\n\n  ngOnInit() {\n    if (this.formStructure) {\n      this.form = this.formBuilder.group(this.formStructure);\n      if (this.formsManager.hasForm(`step${this.step}`)) {\n        this.restore();\n      }\n    }\n  }\n\n  restore() {\n    const formState = this.formsManager.getForm(`step${this.step}`);\n    this.form.setValue(formState.value);\n  }\n\n  ngOnDestroy(): void {\n    this.formsManager.unsubscribe();\n  }\n\n  next() {\n    this.setupStepsService.next().subscribe(() => this.update());\n  }\n\n  previous() {\n    this.setupStepsService.previous().subscribe(() => this.update());\n  }\n\n  update() {\n    const stepName = `step${this.step}`;\n\n    if (this.formsManager.hasForm(stepName)) {\n      this.formsManager.remove(stepName);\n    }\n\n    if (this.form) {\n      this.formsManager.upsert(stepName, this.form);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { HttpCache } from './http-cache.model';\n\nexport interface HttpCacheState extends EntityState<HttpCache> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'httpCache' })\nexport class HttpCacheStore extends EntityStore<HttpCacheState> {\n\n  constructor() {\n    super();\n  }\n\n}\n\n","import {Injectable} from '@angular/core';\nimport {EntityState, EntityStore, EntityUIStore, runStoreAction, StoreActions, StoreConfig} from '@datorama/akita';\nimport {Assignment, AssignmentsUI, AssignmentUI, createAssignments, createAssignmentsUI, createAssignmentUI} from './assignment.model';\n\nexport interface AssignmentsState extends EntityState<Assignment> {\n  ui: AssignmentsUI;\n}\n\nexport interface AssignmentUIState extends EntityState<AssignmentUI> {\n}\n\n@Injectable({providedIn: 'root'})\n@StoreConfig({name: 'assignments'})\nexport class AssignmentsStore extends EntityStore<AssignmentsState> {\n  ui: EntityUIStore<AssignmentUIState>;\n\n  constructor() {\n    super(createAssignments({ui: createAssignmentsUI()}));\n    this.createUIStore().setInitialEntityState(createAssignmentUI);\n    this.setHasCache(false);\n  }\n\n  forceRefreshEntities() {\n    runStoreAction(this.storeName, StoreActions.UpdateEntities, {\n      payload: {\n        data: {},\n        entityIds: 0,\n      },\n    });\n  }\n}\n","import {EntityState, HashMap, ID, Order} from '@datorama/akita';\nimport {Assessment} from '../assignment/assessments/state';\nimport {AssessmentStatus} from '../../../shared/models/assessment.model';\n\nexport type AssignmentSortFn = (assignment: Assignment) => number;\n\nexport enum AssignmentType {\n  STANDARD_ASSIGNMENT = 'STANDARD_ASSIGNMENT',\n  WITHOUT_ASSESSMENT_CRITERIAS = 'WITHOUT_ASSESSMENT_CRITERIAS',\n  WORK_UNIT = 'WORK_UNIT',\n  EMPTY = '',\n}\n\nexport enum AssignmentState {\n  DELETED = 'DELETED',\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED',\n}\n\n/**\n * @deprecated\n * Instead of this use AssignmentType\n */\nexport enum AssignmentWorktype {\n  ASSIGNMENT = 'ASSIGNMENT',\n  SHORT_ANSWER_QUESTION = 'SHORT_ANSWER_QUESTION',\n}\n\nexport enum AssignmentSortBy {\n  CREATED = 'CREATED',\n  LAST_CHANGED = 'LAST_CHANGED',\n  TITLE = 'TITLE',\n  TYPE = 'TYPE',\n}\n\nexport interface AssignmentSimple {\n  google_id?: ID;\n  id: ID;\n  state: AssignmentState;\n  title: string;\n  worktype: AssignmentWorktype;\n}\n\nexport interface Assignment extends AssignmentSimple {\n  alternate_link_id: ID;\n  assessment_last_changed: string | number;\n  assessments: (Assessment & ID)[];\n  assignment_created: string | number;\n  assignment_not_assessable: boolean;\n  assignment_type: AssignmentType;\n  assignments_for_topic: (Assignment & ID)[];\n  classroom_name: string;\n  is_topic: boolean;\n}\n\nexport interface AssignmentsResponse {\n  without_topic: Assignment[];\n  topics: Assignment[];\n}\n\nexport interface NormalizeAssignmentsResponse {\n  assignments?: HashMap<Assignment>;\n  assessments?: HashMap<Assessment>;\n  assignmentsForTopic?: HashMap<Assignment>;\n}\n\nexport interface AssignmentMenuItem {\n  label: string;\n}\n\nexport interface AssignmentFilter {\n  state: AssignmentState[];\n  type: AssignmentType[];\n}\n\nexport interface AssignmentFilterItem extends AssignmentMenuItem {\n  state?: AssignmentState;\n  type?: AssignmentType;\n}\n\nexport interface AssignmentSort {\n  by: keyof Assignment;\n  order: Order;\n}\n\nexport interface AssignmentSortItem extends AssignmentSort, AssignmentMenuItem {\n}\n\nexport interface AssignmentUI {\n  isExpanded: boolean;\n}\n\nexport interface AssignmentsUI {\n  filters: AssignmentFilter;\n  sort: AssignmentSort;\n}\n\nexport function createAssignmentUI(params: Partial<AssignmentUI>) {\n  return {\n    isExpanded: false,\n    ...params\n  } as AssignmentUI;\n}\n\nexport function createAssignmentsUI(params?: Partial<AssignmentsUI>) {\n  return {\n    filters: {\n      state: [AssignmentState.PUBLISHED, AssignmentState.DRAFT],\n      type: [\n        AssignmentType.STANDARD_ASSIGNMENT,\n        AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS,\n        AssignmentType.WORK_UNIT,\n        AssignmentType.EMPTY,\n      ]\n    },\n    sort: {\n      by: 'assignment_type',\n      order: Order.ASC,\n    },\n    ...params\n  } as AssignmentsUI;\n}\n\nexport function createAssignments(params?: Partial<EntityState<Assignment>>) {\n  return {\n    ...params,\n  } as EntityState<Assignment>;\n}\n\nexport function createAssignment(params: Partial<Assignment>) {\n  return {\n    ...params\n  } as Assignment;\n}\n","import {Injectable} from '@angular/core';\nimport {EntityState, EntityStore, runStoreAction, StoreActions, StoreConfig} from '@datorama/akita';\nimport {Assessment, AssessmentsUI, createAssessments, createAssessmentsUI} from './assessment.model';\n\nexport interface AssessmentsState extends EntityState<Assessment> {\n  ui: AssessmentsUI;\n}\n\n@Injectable({providedIn: 'root'})\n@StoreConfig({name: 'assessments'})\nexport class AssessmentsStore extends EntityStore<AssessmentsState> {\n  constructor() {\n    super(createAssessments({ui: createAssessmentsUI()}));\n    this.setHasCache(false);\n  }\n\n  forceRefreshEntities() {\n    runStoreAction(this.storeName, StoreActions.UpdateEntities, {\n      payload: {\n        data: {},\n        entityIds: 0,\n      },\n    });\n  }\n\n}\n\n","import {EntityState, ID, Order} from '@datorama/akita';\n\nexport type AssessmentSortFn = (assessment: Assessment) => number;\n\n/**\n * @deprecated\n * Instead of this use AssessmentStatus\n */\nexport enum AssessmentStatusOld {\n  ND = 'ND',\n  NL = 'NL',\n  NV = 'NV',\n  NN = 'NN',\n  AV = 'AV',\n  AN = 'AN',\n  WV = 'WV',\n  WN = 'WN',\n}\n\nexport enum AssessmentStatus {\n  ASSESSING = 'ASSESSING',\n  ASSESSMENT_DONE = 'ASSESSMENT_DONE',\n  NOT_ASSESSED = 'NOT_ASSESSED',\n  WARNING = 'WARNING',\n}\n\nexport interface Assessment {\n  assessment_status: AssessmentStatusOld;\n  fail_warning: boolean;\n  id: ID;\n  status_new: AssessmentStatus;\n  student_id: ID;\n  student_name: string;\n}\n\nexport interface AssessmentSort {\n  by: keyof Assessment;\n  order: Order;\n}\n\nexport interface AssessmentSortItem extends AssessmentSort {\n  label: string;\n}\n\nexport interface AssessmentsUI {\n  sort: AssessmentSort;\n}\n\nexport interface AssessmentStatusUpdateBody {\n  grades_visible?: boolean;\n  objectives_feedback_visible?: boolean;\n  overall_feedback_visible?: boolean;\n  result_visible?: boolean;\n  status?: AssessmentStatus;\n}\n\nexport interface AssessmentVisibilityDialog extends AssessmentStatusUpdateBody {\n  id?: ID;\n  saved?: boolean;\n}\n\nexport interface AssessmentStatusUpdateResponse {\n  id?: ID;\n  fail_warning?: boolean;\n}\n\nexport interface AssessmentVisibility {\n  grades_visible?: boolean;\n  objectives_feedback_visible?: boolean;\n  overall_feedback_visible?: boolean;\n  result_visible?: boolean;\n  status?: AssessmentStatus;\n  student_ids?: ID[];\n}\n\nexport function createAssessment(params: Partial<Assessment>) {\n  return {\n    ...params\n  } as Assessment;\n}\n\nexport function createAssessments(params: Partial<EntityState<Assessment>>) {\n  return {\n    ...params\n  } as Assessment;\n}\n\nexport function createAssessmentsUI(params?: Partial<AssessmentsUI>) {\n  return {\n    sort: {\n      by: 'student_name',\n      order: Order.ASC,\n    },\n    ...params\n  } as AssessmentsUI;\n}\n","import {EntityState, HashMap, ID, Order} from '@datorama/akita';\n\nexport type AssignmentSortFn = (assignment: Assignment) => number;\n\n/**\n * @deprecated\n * Instead of this use AssessmentStatus\n */\nexport enum AssessmentStatusOld {\n  ND = 'ND',\n  NL = 'NL',\n  NV = 'NV',\n  NN = 'NN',\n  AV = 'AV',\n  AN = 'AN',\n  WV = 'WV',\n  WN = 'WN',\n}\n\nexport enum AssignmentState {\n  DELETED = 'DELETED',\n  DRAFT = 'DRAFT',\n  PUBLISHED = 'PUBLISHED',\n}\n\nexport enum AssessmentStatus {\n  ASSESSING = 'ASSESSING',\n  ASSESSMENT_DONE = 'ASSESSMENT_DONE',\n  NOT_ASSESSED = 'NOT_ASSESSED',\n  WARNING = 'WARNING',\n}\n\nexport enum AssignmentType {\n  STANDARD_ASSIGNMENT = 'STANDARD_ASSIGNMENT',\n  WITHOUT_ASSESSMENT_CRITERIAS = 'WITHOUT_ASSESSMENT_CRITERIAS',\n  WORK_UNIT = 'WORK_UNIT',\n  EMPTY = '',\n}\n\nexport interface NormalizeAssignmentsResponse {\n  assignments?: HashMap<Assignment>;\n}\n\nexport interface Assignment {\n  assessment_last_changed: string | number;\n  assessments_for_topic: (Assignment & ID)[];\n  assignment_created: string | number;\n  assignment_id: ID;\n  assignment_is_topic: Boolean;\n  assignment_not_assessable: boolean;\n  assignment_title: string;\n  assignment_type: AssignmentType;\n  classroom_name: string;\n  fail_warning: boolean;\n  id: ID;\n  result_last_edit: number | string;\n  result_only: boolean;\n  status: AssessmentStatusOld,\n  status_new: AssessmentStatus;\n}\n\nexport interface AssignmentMenuItem {\n  label: string;\n}\n\nexport interface AssignmentFilter {\n  state: AssignmentState[];\n  type: AssignmentType[];\n}\n\nexport interface AssignmentFilterItem extends AssignmentMenuItem {\n  state?: AssignmentState;\n  type?: AssignmentType;\n}\n\nexport interface AssignmentSort {\n  by: keyof Assignment;\n  order: Order;\n}\n\nexport interface AssignmentSortItem extends AssignmentSort, AssignmentMenuItem {\n}\n\nexport interface AssignmentsUI {\n  filters: AssignmentFilter;\n  sort: AssignmentSort;\n}\n\nexport function createAssignments(params?: Partial<EntityState<Assignment>>) {\n  return {\n    ...params\n  } as EntityState<Assignment>;\n}\n\nexport function createAssignmentsUI(params?: Partial<AssignmentsUI>) {\n  return {\n    filters: {\n      state: [],\n      type: [\n        AssignmentType.STANDARD_ASSIGNMENT,\n        AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS,\n        AssignmentType.WORK_UNIT,\n        AssignmentType.EMPTY,\n      ]\n    },\n    sort: {\n      by: 'assignment_type',\n      order: Order.ASC,\n    },\n    ...params\n  } as AssignmentsUI;\n}\n","import {Injectable} from '@angular/core';\nimport {EntityState, EntityStore, runStoreAction, StoreActions, StoreConfig} from '@datorama/akita';\nimport {Assignment, AssignmentsUI, createAssignments, createAssignmentsUI} from './assignment.model';\n\n\nexport interface AssignmentsState extends EntityState<Assignment> {\n  ui: AssignmentsUI;\n}\n\n@Injectable({providedIn: 'root'})\n@StoreConfig({name: 'assignments'})\nexport class AssignmentsStore extends EntityStore<AssignmentsState> {\n\n  constructor() {\n    super(createAssignments({ui: createAssignmentsUI()}));\n    this.setHasCache(false);\n  }\n\n  forceRefreshEntities() {\n    runStoreAction(this.storeName, StoreActions.UpdateEntities, {\n      payload: {\n        data: {},\n        entityIds: 0,\n      },\n    });\n  }\n}\n\n","export const environment: Environment = {\n  appName: 'app',\n  production: true,\n  release: RELEASE,\n  urls: {\n    API_EU: 'https://prodpy.studybee.io',\n    API_US: 'https://prodpy.studybee.io',\n    mixPanel: 'https://api-eu.mixpanel.com',\n    raven: 'https://035b3ff92a36483196c0cdcd72a868dc@sentry.10clouds.com/158',\n  },\n};\n","import {Inject, Injectable} from '@angular/core';\nimport {Store, StoreConfig} from '@datorama/akita';\nimport {User} from './user.model';\nimport {LOCATION_DETECTION, LocationDetection} from '../../models/location-detection.model';\n\nexport interface UserState extends User {\n}\n\nexport function createInitialState(is_teacher: boolean): UserState {\n  return {\n    email: '',\n    first_name: '',\n    first_time_setup: true,\n    gdpr_check: false,\n    google_id: '',\n    id: 0,\n    is_teacher,\n    last_name: '',\n    photo_url: '',\n  };\n}\n\n@Injectable({providedIn: 'root'})\n@StoreConfig({name: 'user'})\nexport class UserStore extends Store<UserState> {\n  constructor(@Inject(LOCATION_DETECTION) protected locationDetection: LocationDetection) {\n    super(createInitialState(locationDetection.is_teacher));\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport interface LocationDetection {\n  existing_user_setup_in_eu: boolean;\n  is_teacher: boolean;\n  us_location_detected: boolean;\n}\n\nexport const LOCATION_DETECTION = new InjectionToken<LocationDetection>('app.location-detection');\n","var map = {\n\t\"./en/messages.json\": 166,\n\t\"./en_US/messages.json\": 262,\n\t\"./fi/messages.json\": 263,\n\t\"./nl/messages.json\": 264,\n\t\"./sv/messages.json\": 265\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 261;","export enum IconsPath {\n  SVG_WITHOUT_ASSESSMENT_CRITERIA = 'images/without_assessment_criteria_icon.svg',\n  SVG_WORK_UNIT = 'images/work_unit_icon.svg',\n  SVG_EXPAND_ALL = 'images/expandAll.svg',\n  SVG_COLLAPSE_ALL = 'images/collapseAll.svg',\n  SVG_ASSESSMENT_ASSESSING = 'images/icon_bk_assessing.svg',\n  SVG_ASSESSMENT_DONE = 'images/icon_bk_assessment_done.svg',\n  SVG_ASSESSMENT_NOT_ASSESSED = 'images/icon_bk_not_assessed.svg',\n  SVG_WARNING = 'images/icon_warning.svg',\n}\n","import {Injectable} from '@angular/core';\nimport {EntityUIQuery, QueryEntity} from '@datorama/akita';\nimport {AssignmentsState, AssignmentsStore} from './assignments.store';\nimport {map} from 'rxjs/operators';\nimport {Assignment, AssignmentSortFn, AssignmentUI} from './assignment.model';\nimport sort from 'fast-sort';\n\n@Injectable({providedIn: 'root'})\nexport class AssignmentsQuery extends QueryEntity<AssignmentsState> {\n  ui: EntityUIQuery<AssignmentUI>;\n\n  constructor(protected store: AssignmentsStore) {\n    super(store);\n    this.createUIQuery();\n  }\n\n  selectFilteredAndSorted() {\n    return this.selectAll({filterBy: assignment => this.filterBy(assignment)}).pipe(\n      map(assignments => this.sortBy(assignments)),\n    );\n  }\n\n  protected filterBy(assignment: Assignment): boolean {\n    const stateUI = this.getValue().ui;\n    return stateUI.filters.type.includes(assignment.assignment_type) &&\n      stateUI.filters.state.includes(assignment.state);\n  }\n\n  protected sortBy(assignments: Assignment[]): Assignment[] {\n    const stateUI = this.getValue().ui;\n    const sortMethod = this.getSortMethod(stateUI.sort.by);\n\n    return sort([...assignments])[stateUI.sort.order](sortMethod);\n  }\n\n  protected getSortMethod(by: keyof Assignment): keyof Assignment | AssignmentSortFn {\n    switch (by) {\n      default:\n        return by;\n    }\n  }\n\n}\n","export * from './assignment.model';\nexport * from './assignments.query';\nexport * from './assignments.service';\nexport * from './assignments.store';\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport {AssignmentsState, AssignmentsStore} from './assignments.store';\nimport {map} from 'rxjs/operators';\nimport {Assignment, AssignmentSortFn} from './assignment.model';\nimport sort from 'fast-sort';\n\n@Injectable({ providedIn: 'root' })\nexport class AssignmentsQuery extends QueryEntity<AssignmentsState> {\n\n  constructor(protected store: AssignmentsStore) {\n    super(store);\n  }\n\n  selectFilteredAndSorted() {\n    return this.selectAll({filterBy: assignment => this.filterBy(assignment)}).pipe(\n      map(assignments => this.sortBy(assignments)),\n    );\n  }\n\n  protected filterBy(assignment: Assignment): boolean {\n    const stateUI = this.getValue().ui;\n    return stateUI.filters.type.includes(assignment.assignment_type);\n  }\n\n  protected sortBy(assignments: Assignment[]): Assignment[] {\n    const stateUI = this.getValue().ui;\n    const sortMethod = this.getSortMethod(stateUI.sort.by);\n\n    return sort([...assignments])[stateUI.sort.order](sortMethod);\n  }\n\n  protected getSortMethod(by: keyof Assignment): keyof Assignment | AssignmentSortFn {\n    switch (by) {\n      default:\n        return by;\n    }\n  }\n}\n","export enum Steps {\n  COUNTRY_SELECT,\n  DOMAIN_CHECK,\n  SCHOOL_SELECT,\n  SCHOOL_REQUEST,\n  FINISH,\n  AGREEMENT,\n  AGREEMENT_MISSING,\n}\n\nexport enum SetupPaths {\n  INITIAL,\n  MISSING_AGREEMENT,\n  MISSING_USER_DATA,\n  BLACK_LIST\n}\n\nexport enum SetupStepRole {\n  ANY,\n  STUDENT,\n  TEACHER\n}\n\nexport class StepConfig {\n  constructor(public next: Steps = null, public previous: Steps = null) {}\n}\n\nexport interface SetupSteps extends Map<Steps, StepConfig> {\n}\n\n// export interface SetupPath {\n//   readonly [path: number]: SetupSteps;\n// }\n\n// export const SetupPathsDefinitions: SetupPath = {\n//   [SetupPaths.INITIAL]: new Map([\n//     [Steps.COUNTRY_SELECT, {to: Steps.DOMAIN_CHECK, role: SetupStepRole.TEACHER}],\n//     [Steps.DOMAIN_CHECK, {from: Steps.COUNTRY_SELECT, GDPROnly: true, role: SetupStepRole.TEACHER, to: Steps.SCHOOL_SELECT}],\n//     [Steps.SCHOOL_SELECT, {from: Steps.DOMAIN_CHECK, role: SetupStepRole.TEACHER, to: Steps.FINISH}],\n//     [Steps.SCHOOL_REQUEST, {from: Steps.SCHOOL_SELECT, role: SetupStepRole.TEACHER, to: Steps.FINISH}],\n//     [Steps.FINISH, {to: Steps.AGREEMENT, role: SetupStepRole.TEACHER}],\n//     [Steps.AGREEMENT, {role: SetupStepRole.ANY}],\n//   ]),\n//   [SetupPaths.MISSING_AGREEMENT]: new Map([\n//     [Steps.DOMAIN_CHECK, {from: Steps.COUNTRY_SELECT, GDPROnly: true, role: SetupStepRole.TEACHER, to: Steps.AGREEMENT}],\n//     [Steps.AGREEMENT, {from: Steps.DOMAIN_CHECK, role: SetupStepRole.ANY}],\n//   ]),\n//   [SetupPaths.BLACK_LIST]: new Map([\n//     [Steps.DOMAIN_CHECK, {from: Steps.COUNTRY_SELECT, GDPROnly: true, role: SetupStepRole.TEACHER, to: Steps.AGREEMENT_MISSING}],\n//     [Steps.AGREEMENT_MISSING, {role: SetupStepRole.ANY}],\n//   ]),\n// };\n","import {Inject, Injectable} from '@angular/core';\nimport {LOCATION_DETECTION, LocationDetection} from '../../shared/models/location-detection.model';\nimport {BehaviorSubject} from 'rxjs';\nimport {ENVIRONMENT_STORAGE, EnvironmentStorage} from '../environment/environment.model';\nimport {USER_INFO, UserInfo} from '../../shared/models/user-info.model';\nimport {HttpService} from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InitService {\n\n  constructor(@Inject(LOCATION_DETECTION) protected locationDetection: BehaviorSubject<LocationDetection>,\n              @Inject(ENVIRONMENT_STORAGE) protected environmentStorage: BehaviorSubject<EnvironmentStorage>,\n              @Inject(USER_INFO) protected userInfo: BehaviorSubject<UserInfo>,\n              protected httpService: HttpService) {\n  }\n\n  hasAppSetup() {\n    const locationDetection = this.locationDetection.getValue();\n    const environmentStorage = this.environmentStorage.getValue();\n\n    return locationDetection.existing_user_setup_in_eu || (environmentStorage && environmentStorage.API);\n  }\n\n  refreshUserInfo() {\n    const source = this.httpService.get<UserInfo>('/users/user_info/');\n\n    source.subscribe(userInfo => {\n      this.userInfo.next({...userInfo});\n    });\n\n    return source;\n  }\n\n  updateUserInfo(userInfo: Partial<UserInfo>) {\n    this.userInfo.next({\n      ...this.userInfo.getValue(),\n      ...userInfo\n    });\n  }\n\n  getLocationDetection() {\n    return this.locationDetection.getValue();\n  }\n\n  getEnvironmentStorage() {\n    return this.environmentStorage.getValue();\n  }\n\n  getUserInfo() {\n    return this.userInfo.getValue();\n  }\n\n  hasUserInfo() {\n    return !!this.getUserInfo();\n  }\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {forkJoin, from, Observable, of} from 'rxjs';\nimport {UserQuery} from './user.query';\nimport {UserStore} from './user.store';\nimport {HttpService} from '../../../core/http/http.service';\nimport {catchError, map, switchMap, take, tap} from 'rxjs/operators';\nimport {PRE_FETCH_USER_DATA, User, UserSetup} from './user.model';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n  constructor(private userStore: UserStore,\n              private userQuery: UserQuery,\n              protected http: HttpService,\n              @Inject(PRE_FETCH_USER_DATA) @Optional() protected preFetchUserData: User) {\n\n    if (preFetchUserData !== null) {\n      this.userStore.update(state => ({...state, ...preFetchUserData}));\n      this.userStore.setHasCache(true);\n    }\n  }\n\n  public fetchUser(): Observable<User> {\n    let userDataSource: Observable<User>;\n\n    if (this.userQuery.getHasCache()) {\n      userDataSource = this.userQuery.select();\n    } else {\n      userDataSource = forkJoin({\n        user: this.http.get<User>('/users/user_data/'),\n        userInfo: from(new Promise<User>(resolve => chrome.runtime.sendMessage({action: 'getUserInfo'}, resolve)))\n      }).pipe(\n        map(sources => ({...sources.user, ...{google_id: sources.userInfo.id, email: sources.userInfo.email}} as User)),\n        switchMap(user => {\n            if (user.is_teacher) {\n              return this.http.get<User>('/schools/user_setup/').pipe(\n                catchError(() => of(user)),\n                map(response => ({...user, ...response})),\n              );\n            }\n\n            return of(user);\n          }\n        ),\n        take(1),\n        tap(user => this.userStore.update({...user})),\n        tap(() => this.userStore.setHasCache(true)),\n      );\n    }\n\n    return userDataSource;\n  }\n\n  public updateUser(user: Partial<User>): void {\n    this.userStore.update(state => ({...state, ...user}));\n  }\n\n  public updateUserSetup(userSetup: UserSetup) {\n    return this.http.post<UserSetup>('/schools/user_setup/', userSetup).pipe(\n      take(1),\n      tap(response => this.userStore.update(state => ({...state, ...response}))),\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Query} from '@datorama/akita';\nimport {User} from './user.model';\nimport {UserState, UserStore} from './user.store';\n\n@Injectable({ providedIn: 'root' })\nexport class UserQuery extends Query<UserState> {\n  public user$ = this.select((user: User) => user);\n\n  constructor(protected store: UserStore) {\n    super(store);\n  }\n}\n","import {ID} from '@datorama/akita';\nimport {InjectionToken} from '@angular/core';\n\nexport interface UserSetup {\n  educational_system_setup?: ID;\n  school: ID;\n}\n\nexport interface User {\n  readonly educational_system_setup?: ID;\n  readonly email: string;\n  readonly first_name: string;\n  readonly first_time_setup: boolean;\n  readonly gdpr_check: boolean;\n  readonly google_id: string;\n  readonly id: ID;\n  readonly is_teacher: boolean;\n  readonly last_name: string;\n  readonly photo_url: string;\n  readonly school?: ID;\n  readonly school_name?: string;\n}\n\nexport const PRE_FETCH_USER_DATA = new InjectionToken<User>('app.pre-fetch-user-data');\n","export enum SchoolCategory {\n  K_12,\n  HIGHER_EDUCATION,\n  HOME_SCHOOL,\n  CORPORATION,\n  OTHER,\n}\n\nexport interface SchoolRequest {\n  category: SchoolCategory;\n  city: string;\n  comment?: string;\n  country_code: string;\n  postal_code: string;\n  school_name: string;\n  state: string;\n  street_address: string;\n  website: string;\n}\n\nexport interface School {\n  readonly id: number;\n  readonly is_intercom_enabled: boolean;\n  readonly title: string;\n  readonly url: string;\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { MainMenu, MainMenuID } from './main-menu.interface';\nimport { MainMenuStore } from './main-menu.store';\n\n@Injectable({ providedIn: 'root' })\nexport class MainMenuService {\n  constructor(protected mainMenuStore: MainMenuStore) {\n  }\n\n  public initialize(userType: 'teacher' | 'student'): void {\n    this.mainMenuStore.initialize(userType);\n  }\n\n  public update(id: MainMenuID, mainMenu: Partial<MainMenu>): void {\n    this.mainMenuStore.update(id, mainMenu);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UiState, UiStore } from './ui.store';\n\n@Injectable({ providedIn: 'root' })\nexport class UiService {\n  constructor(private uiStore: UiStore) {\n  }\n\n  public updateIsMainMenuVisible(isMainMenuVisible: boolean): void {\n    this.uiStore.update((state: UiState): UiState => ({ ...state, isMainMenuVisible }));\n  }\n\n  public updateToggleMainMenuVisible(): void {\n    this.uiStore.update( (state: UiState): UiState => ({\n      ...state,\n      isMainMenuVisible: !state.isMainMenuVisible,\n    }));\n  }\n}\n","import { Params } from '@angular/router';\n\nexport enum MainMenuID {\n  ASSIGNMENT,\n  COURSE_PROGRESS,\n  CURRICULUM\n}\n\nexport interface MainMenu {\n  readonly icon: 'assignment' | 'school' | 'book';\n  readonly iconColor: 'green-icon' | 'pink-icon' | 'blue-icon';\n  readonly id: MainMenuID;\n  readonly label: string;\n  readonly params?: Params;\n  readonly state: string;\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 403;","export enum HttpRequestType {\n  DELETE = 'DELETE',\n  GET = 'GET',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  PATCH = 'PATCH',\n  POST = 'POST',\n  PUT = 'PUT',\n}\n","export * from './http-cache.query';\nexport * from './http-cache.store';\nexport * from './http-cache.service';\nexport * from './http-cache.model';\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { HttpCacheStore, HttpCacheState } from './http-cache.store';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpCacheQuery extends QueryEntity<HttpCacheState> {\n\n  constructor(protected store: HttpCacheStore) {\n    super(store);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpRequestType} from '../http.model';\nimport {Params} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ID} from '@datorama/akita';\nimport SparkMD5 from 'spark-md5';\nimport {HttpCacheStore} from './http-cache.store';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpCacheService {\n\n  constructor(protected httpCacheStore: HttpCacheStore) {\n  }\n\n  add<T = any>(source: Observable<T>, url: string, type: HttpRequestType, body?: any, params: Params = {}) {\n    const id: ID = this.generateID(url, type, body, params);\n\n    this.httpCacheStore.add({ id, source });\n  }\n\n  delete(id: ID) {\n    this.httpCacheStore.remove(id);\n  }\n\n  generateID(url: string, type: HttpRequestType, body?: any, params: Params = {}): ID {\n    return SparkMD5.hash(`${url}${type}${JSON.stringify(body)}${JSON.stringify(params)}`);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AssignmentsStore} from './assignments.store';\nimport {HttpService} from '../../../core/http/http.service';\nimport {AssignmentsQuery} from './assignments.query';\nimport {Path} from '../../../ajs-upgraded-providers';\nimport {ID, transaction} from '@datorama/akita';\nimport {Params} from '@angular/router';\nimport {map, tap} from 'rxjs/operators';\nimport {Assignment, AssignmentsUI, AssignmentType, AssignmentUI, NormalizeAssignmentsResponse, AssignmentState} from './assignment.model';\nimport {AssessmentsStore} from '../assignment/assessments/state';\nimport {normalizeAssignmentsResponse} from './assignments.normalizer';\nimport {NormalizedSchema} from 'normalizr';\n\n@Injectable({providedIn: 'root'})\nexport class AssignmentsService {\n\n  constructor(protected assignmentsStore: AssignmentsStore,\n              protected assignmentsQuery: AssignmentsQuery,\n              protected assessmentsStore: AssessmentsStore,\n              protected http: HttpService,\n              protected path: Path) {\n  }\n\n  get() {\n    return this.assignmentsQuery.getHasCache() ? this.assignmentsQuery.selectAll() : this.getFromAPI();\n  }\n\n  update(assignment: Assignment) {\n    this.assignmentsStore.update(assignment.id, state => ({\n      ...state,\n      ...assignment,\n      assessment_last_changed: (new Date()).getTime(),\n    }));\n  }\n\n  updateUI(id: ID, assignmentUI: AssignmentUI) {\n    this.assignmentsStore.ui.update(id, state => ({\n        ...state,\n        ...assignmentUI,\n      }),\n    );\n  }\n\n  setFilters(filters: AssignmentsUI['filters']) {\n    this.assignmentsStore.update(state => ({\n      ...state,\n      ui: {\n        ...state.ui,\n        filters,\n      },\n    }));\n\n    this.assignmentsStore.forceRefreshEntities();\n  }\n\n  setSorting(sort: AssignmentsUI['sort']) {\n    this.assignmentsStore.update(state => ({\n      ...state,\n      ui: {\n        ...state.ui,\n        sort,\n      },\n    }));\n\n    this.assignmentsStore.forceRefreshEntities();\n  }\n\n  protected getFromAPI() {\n    const courseID: ID = this.path.getClassroomId();\n    const params: Params = {\n      assignment_state: [AssignmentState.PUBLISHED, AssignmentState.DRAFT],\n      // show_topics: true,\n    };\n    const url = `/v3/classes/${courseID}/assignments/`;\n\n    return this.http.get<Assignment[]>(url, params).pipe(\n      map(response => this.unifyDateTimeFormat(response)),\n      map(response => this.updateAssignmentsType(response)),\n      map(response => normalizeAssignmentsResponse(response)),\n      tap(normalizeResponse => this.putAssessmentsIntoStorage(normalizeResponse)),\n      tap(normalizeResponse => this.putAssignmentsIntoStorage(normalizeResponse)),\n      map(normalizeResponse => Object.values(normalizeResponse.entities.assignments || {})),\n    );\n  }\n\n  @transaction()\n  protected putAssignmentsIntoStorage(normalizeResponse: NormalizedSchema<NormalizeAssignmentsResponse, ID[]>) {\n    this.assignmentsStore.set({\n      entities: normalizeResponse.entities.assignments || {},\n      ids: normalizeResponse.result\n    });\n  }\n\n  @transaction()\n  protected putAssessmentsIntoStorage(normalizeResponse: NormalizedSchema<NormalizeAssignmentsResponse, ID[]>) {\n    this.assessmentsStore.set(normalizeResponse.entities.assessments || {});\n  }\n\n  protected unifyDateTimeFormat(assignments: Assignment[]): Assignment[] {\n    return assignments.map(assignment => {\n      const assessmentLastChanged = (new Date(assignment.assessment_last_changed)).getTime() || assignment.assessment_last_changed;\n      const assignmentCreated = (new Date(assignment.assignment_created)).getTime() || assignment.assignment_created;\n      return {\n        ...assignment,\n        assessment_last_changed: assessmentLastChanged,\n        assignment_created: assignmentCreated,\n      };\n    });\n  }\n\n  protected updateAssignmentsType(assignments: Assignment[]): Assignment[] {\n    return assignments.map(assignment => ({\n      ...assignment,\n      assignment_type: assignment.assignment_not_assessable ? AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS : assignment.assignment_type,\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {getIDType, QueryEntity} from '@datorama/akita';\nimport {AssessmentsState, AssessmentsStore} from './assessments.store';\nimport {Assessment, AssessmentSortFn, AssessmentStatus, createAssessment} from './assessment.model';\nimport {map} from 'rxjs/operators';\nimport sort from 'fast-sort';\n\n@Injectable({ providedIn: 'root' })\nexport class AssessmentsQuery extends QueryEntity<AssessmentsState> {\n\n  constructor(protected store: AssessmentsStore) {\n    super(store);\n  }\n\n  selectManySorted(ids: getIDType<Assessment>[]) {\n    return this.selectAll({\n      filterBy: assessment => ids.includes(assessment.id),\n    }).pipe(\n      map(assessments => this.sortBy(assessments))\n    );\n  }\n\n  protected sortBy(assessments: Assessment[]): Assessment[] {\n    const stateUI = this.getValue().ui;\n    const sortMethod = this.getSortMethod(stateUI.sort.by);\n\n    return sort([...assessments])[stateUI.sort.order](sortMethod);\n  }\n\n  protected getSortMethod(by: keyof Assessment): keyof Assessment | AssessmentSortFn {\n    switch (by) {\n      case 'status_new':\n        return this.sortByStatusNew;\n      default:\n        return by;\n    }\n  }\n\n  sortByStatusNew(assessment: Assessment): number {\n    const orderBy = [AssessmentStatus.NOT_ASSESSED, AssessmentStatus.ASSESSING, AssessmentStatus.ASSESSMENT_DONE];\n\n    return 1 - orderBy.indexOf(assessment.status_new);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AssessmentsStore} from './assessments.store';\nimport {\n  Assessment,\n  AssessmentStatusUpdateBody,\n  AssessmentStatusUpdateResponse,\n  AssessmentsUI,\n  AssessmentVisibility\n} from './assessment.model';\nimport {HttpService} from '../../../../../core/http/http.service';\nimport {Path} from '../../../../../ajs-upgraded-providers';\nimport {ID} from '@datorama/akita';\nimport {map, tap} from 'rxjs/operators';\nimport {Assignment} from '../../../state';\nimport {normalizeUpdateStatusForManyResponse} from './assessments.normalizer';\n\n@Injectable({ providedIn: 'root' })\nexport class AssessmentsService {\n\n  constructor(protected assessmentsStore: AssessmentsStore,\n              protected path: Path,\n              protected http: HttpService) {\n  }\n\n  update(assessment: Assessment) {\n    this.assessmentsStore.update(assessment.id, state => ({\n      ...state,\n      ...assessment\n    }));\n  }\n\n  updateStatus(assignmentID: ID, assessment: Assessment, statusUpdateBody: AssessmentStatusUpdateBody) {\n    return this.updateStatusAPI(assignmentID, assessment.student_id, statusUpdateBody).pipe(\n      map(response => {\n       const updatedAssessment = {\n         ...assessment,\n         status_new: statusUpdateBody.status,\n         fail_warning: response ? response.fail_warning : assessment.fail_warning,\n       };\n       this.update(updatedAssessment);\n\n       return updatedAssessment;\n     })\n    );\n  }\n\n  updateStatusForMany(assignment: Assignment, assessmentVisibility: AssessmentVisibility) {\n    return this.updateStatusForManyAPI(assignment.id, assessmentVisibility).pipe(\n      map(response => {\n        const updates = response || assignment.assessments\n          .filter(assessment => assessmentVisibility.student_ids.includes(assessment.student_id))\n          .map(assessment => ({id: assessment.id, fail_warning: assessment.fail_warning}));\n        const normalizeUpdates = normalizeUpdateStatusForManyResponse(updates);\n\n        return [normalizeUpdates.entities.updates, normalizeUpdates.result];\n      }),\n      tap(([updates, assessmentsID]) => {\n        this.assessmentsStore.upsert(assessmentsID, state => {\n          return {\n            ...state,\n            status_new: assessmentVisibility.status,\n            fail_warning: (updates[state.id] || state).fail_warning,\n          };\n        });\n      }));\n  }\n\n  synchronizeWarningStatus(assessment: Assessment) {\n    return this.checkWarningStatusAPI(assessment.id).pipe(\n      map(response => ({...assessment, ...response})),\n      tap(updatedAssessment => this.update(updatedAssessment)),\n    );\n  }\n\n  checkWarningStatus(assessment: Assessment) {\n    return this.checkWarningStatusAPI(assessment.id).pipe(\n      map(response => response.fail_warning),\n    );\n  }\n\n  setSorting(sort: AssessmentsUI['sort']) {\n    this.assessmentsStore.update(state => ({\n      ...state,\n      ui: {\n        ...state.ui,\n        sort,\n      },\n    }));\n\n    this.assessmentsStore.forceRefreshEntities();\n  }\n\n  protected updateStatusAPI(assignmentID: ID, studentID: ID, statusUpdateBody: AssessmentStatusUpdateBody) {\n    const courseID: ID = this.path.getClassroomId();\n    const url = `/v3/classes/${courseID}/assignments/${assignmentID}/status/${studentID}/`;\n\n    return this.http.patch<AssessmentStatusUpdateResponse>(url, {...statusUpdateBody});\n  }\n\n  protected updateStatusForManyAPI(assignmentID: ID, assignmentVisibility: AssessmentVisibility) {\n    const courseID: string = this.path.getClassroomId();\n    const url = `/v3/classes/${courseID}/assignments/${assignmentID}/status/`;\n\n    return this.http.patch<AssessmentStatusUpdateResponse[]>(url, assignmentVisibility);\n  }\n\n  protected checkWarningStatusAPI(assessmentID: ID) {\n    const url = `/v3/classes/fail-warning/${assessmentID}/`;\n\n    return this.http.get<AssessmentStatusUpdateResponse>(url);\n  }\n}\n","import {normalize, schema} from 'normalizr';\n\nconst updateStatusForManyResponse = new schema.Entity('updates', );\nexport const normalizeUpdateStatusForManyResponse = response => normalize(response, [updateStatusForManyResponse]);\n","import {normalize, schema} from 'normalizr';\nimport {Assignment, NormalizeAssignmentsResponse} from './assignment.model';\nimport {ID} from '@datorama/akita';\n\nconst assessment = new schema.Entity('assessments');\nconst assignmentsForTopic = new schema.Entity('assignments_for_topic');\nconst assignment = new schema.Entity('assignments', {\n  assessments: [assessment],\n  assignments_for_topic: [assignmentsForTopic],\n});\n\nexport const normalizeAssignmentsResponse = assignments =>\n  normalize<Assignment, NormalizeAssignmentsResponse, ID[]>(assignments, [assignment]);\n\n","import {Injectable} from '@angular/core';\nimport {AssignmentsStore} from './assignments.store';\nimport {HttpService} from '../../../core/http/http.service';\nimport {AssignmentsQuery} from './assignments.query';\nimport {ID, transaction} from '@datorama/akita';\nimport {map, tap} from 'rxjs/operators';\nimport {Assignment, AssignmentsUI, AssignmentType, NormalizeAssignmentsResponse} from './assignment.model';\nimport {Path} from '../../../ajs-upgraded-providers';\nimport {NormalizedSchema} from 'normalizr';\nimport {normalizeAssignmentsResponse} from './assignments.normalizer';\n\n@Injectable({ providedIn: 'root' })\nexport class AssignmentsService {\n\n  constructor(protected assignmentsStore: AssignmentsStore,\n              protected assignmentsQuery: AssignmentsQuery,\n              protected http: HttpService,\n              protected path: Path) {\n  }\n\n  get() {\n    return this.assignmentsQuery.getHasCache() ? this.assignmentsQuery.selectAll() : this.getFromAPI();\n  }\n\n  setFilters(filters: AssignmentsUI['filters']) {\n    this.assignmentsStore.update(state => ({\n      ...state,\n      ui: {\n        ...state.ui,\n        filters,\n      },\n    }));\n\n    this.assignmentsStore.forceRefreshEntities();\n  }\n\n  setSorting(sort: AssignmentsUI['sort']) {\n    this.assignmentsStore.update(state => ({\n      ...state,\n      ui: {\n        ...state.ui,\n        sort,\n      },\n    }));\n\n    this.assignmentsStore.forceRefreshEntities();\n  }\n\n  protected getFromAPI() {\n    const courseID: ID = this.path.getClassroomId();\n    const url = `/classes/student_assignments/${courseID}/`;\n\n    return this.http.get<Assignment[]>(url).pipe(\n      map(response => this.unifyDateTimeFormat(response)),\n      map(response => this.updateAssignmentsType(response)),\n      map(response => normalizeAssignmentsResponse(response)),\n      tap(normalizeResponse => this.putAssignmentsIntoStorage(normalizeResponse)),\n      map(normalizeResponse => Object.values(normalizeResponse.entities.assignments || {})),\n    );\n  }\n\n  @transaction()\n  protected putAssignmentsIntoStorage(normalizeResponse: NormalizedSchema<NormalizeAssignmentsResponse, ID[]>) {\n    this.assignmentsStore.set({\n      entities: normalizeResponse.entities.assignments || {},\n      ids: normalizeResponse.result\n    });\n  }\n\n  protected unifyDateTimeFormat(assignments: Assignment[]): Assignment[] {\n    return assignments.map(assignment => {\n      const assessmentLastChanged = (new Date(assignment.assessment_last_changed)).getTime() || assignment.assessment_last_changed;\n      const assignmentCreated = (new Date(assignment.assignment_created)).getTime() || assignment.assignment_created;\n      return {\n        ...assignment,\n        assessment_last_changed: assessmentLastChanged,\n        assignment_created: assignmentCreated,\n      };\n    });\n  }\n\n  protected updateAssignmentsType(assignments: Assignment[]): Assignment[] {\n    return assignments.map(assignment => {\n      if (assignment.assignment_not_assessable || !assignment.assignment_type) {\n        return {\n          ...assignment,\n          assignment_type: AssignmentType.WITHOUT_ASSESSMENT_CRITERIAS,\n        };\n      }\n      return { ...assignment };\n    });\n  }\n}\n","import {normalize, schema} from 'normalizr';\nimport {Assignment, NormalizeAssignmentsResponse} from './assignment.model';\nimport {ID} from '@datorama/akita';\n\nconst assignment = new schema.Entity('assignments');\n\nexport const normalizeAssignmentsResponse = assignments =>\n  normalize<Assignment, NormalizeAssignmentsResponse, ID[]>(assignments, [assignment]);\n\n","export default \"<div id=\\\"studybee\\\"\\n     class=\\\"studybee\\\"\\n     ng-class=\\\"dynamicThemeClass\\\"\\n     custom-routing\\n     dynamic-theme\\n     last-modified\\n     ng-cloak>\\n    <md-sidenav\\n      md-component-id=\\\"studybee\\\"\\n      class=\\\"md-sidenav-right md-whiteframe-z3\\\"\\n      style=\\\"overflow:visible\\\">\\n      <app-main-menu></app-main-menu>\\n      <div ui-view\\n           layout-fill></div>\\n    </md-sidenav>\\n    <studybee-handle\\n      ng-click=\\\"vm.toggleStudybee()\\\">\\n    </studybee-handle>\\n\\n    <assign-objectives-popup>\\n\\n    </assign-objectives-popup>\\n\\n    <!-- here is the full view -->\\n    <div\\n      ng-if=\\\"extendedViewEnable\\\"\\n      class=\\\"sb-sidenav-extended md-whiteframe-z3\\\">\\n      <div ui-view=\\\"extended\\\"></div>\\n    </div>\\n  <rapp data=\\\"$root\\\" ctrl=\\\"$ctrl\\\" view=\\\"'newsAssignmentPopup'\\\"/>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClickStopPropagationDirective } from './click-stop-propagation.directive';\nimport { TooltipEllipsisDirective } from './tooltip-ellipsis.directive';\nimport { UiSrefDirective } from './ui-sref.directive';\nimport { HighlightTextDirective } from './highlight-text.directive';\n\n@NgModule({\n  declarations: [\n    ClickStopPropagationDirective,\n    HighlightTextDirective,\n    TooltipEllipsisDirective,\n    UiSrefDirective,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    ClickStopPropagationDirective,\n    HighlightTextDirective,\n    TooltipEllipsisDirective,\n    UiSrefDirective,\n  ],\n})\nexport class DirectivesModule {}\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {MatSidenav} from '@angular/material';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport {Observable} from 'rxjs';\nimport {MainMenu, MainMenuID} from '../../states/main-menu/main-menu.interface';\nimport {MainMenuQuery} from '../../states/main-menu/main-menu.query';\nimport {MainMenuService} from '../../states/main-menu/main-menu.service';\nimport {UiQuery} from '../../states/ui/ui.query';\nimport {UiService} from '../../states/ui/ui.service';\nimport {User, UserQuery} from '../../states/user/';\nimport template from './base-main-menu.component.html';\nimport style from './base-main-menu.component.scss';\nimport {getTranslation} from '../../../../../react_src/i18n';\n\nconst pack = require('../../../../../package.json');\n\n@Component({\n  selector: 'app-base-main-menu',\n  template,\n  styles: [style],\n})\nexport class BaseMainMenuComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild('sidenav', { static: false }) sidenav: MatSidenav;\n  public user$: Observable<User>;\n  public mainMenu$: Observable<MainMenu[]>;\n  public isTeacher = false;\n  public version$ = '-';\n  public build$ = '-';\n\n  constructor(protected uiService: UiService,\n              protected uiQuery: UiQuery,\n              protected userQuery: UserQuery,\n              protected mainMenuQuery: MainMenuQuery,\n              protected mainMenuService: MainMenuService) {\n  }\n\n  protected toggleMainMenuVisibility(isMainMenuVisible: boolean): void {\n    this.sidenav.toggle(isMainMenuVisible);\n  }\n\n  protected updateIsMainMenuVisible(isMainMenuVisible: boolean): void {\n    this.uiService.updateIsMainMenuVisible(isMainMenuVisible);\n  }\n\n  public ngOnInit(): void {\n    this.version$ = pack.version;\n    this.build$ = pack.build;\n    this.user$ = this.userQuery.user$;\n    this.user$.pipe(\n      untilDestroyed(this),\n    ).subscribe(user => {\n      if (user.is_teacher) {\n        this.mainMenuService.initialize('teacher');\n      } else {\n        this.mainMenuService.initialize('student');\n      }\n\n      this.mainMenu$ = this.mainMenuQuery.selectAll();\n    });\n  }\n\n  public ngOnDestroy(): void {\n  }\n\n  public ngAfterViewInit(): void {\n    this.uiQuery.isMainMenuVisible$.pipe(\n      untilDestroyed(this),\n    ).subscribe((isMainMenuVisible: boolean): void => {\n      this.toggleMainMenuVisibility(isMainMenuVisible);\n    });\n\n    this.sidenav.closedStart.pipe(\n      untilDestroyed(this),\n    ).subscribe(() => this.updateIsMainMenuVisible(false));\n    this.sidenav.openedStart.pipe(\n      untilDestroyed(this),\n    ).subscribe(() => this.updateIsMainMenuVisible(true));\n  }\n\n  public toggle(): void {\n    this.sidenav.toggle();\n  }\n\n  public help(translationURLKey: string): void {\n    const url = getTranslation(translationURLKey);\n\n    if (url) {\n      window.open(url, '_blank');\n    }\n  }\n\n  public trackById(menuItem: MainMenu): MainMenuID {\n    return menuItem.id;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { MainMenuState, MainMenuStore } from './main-menu.store';\n\n@Injectable({ providedIn: 'root' })\nexport class MainMenuQuery extends QueryEntity<MainMenuState> {\n\n  constructor(protected mainMenuStore: MainMenuStore) {\n    super(mainMenuStore);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Query } from '@datorama/akita';\nimport { Ui } from './ui.interface';\nimport { UiStore } from './ui.store';\n\n@Injectable({ providedIn: 'root' })\nexport class UiQuery extends Query<Ui> {\n  public isMainMenuVisible$ = this.select(ui => ui.isMainMenuVisible);\n\n  constructor(protected store: UiStore) {\n    super(store);\n  }\n}\n","import {ID} from '@datorama/akita';\nimport {InjectionToken} from '@angular/core';\n\nexport enum EnvironmentStorageKey {\n  LOCATION = 'ENVIRONMENT_STORAGE_LOCATION',\n}\n\nexport enum EnvironmentLocation {\n  NON_US,\n  US,\n}\n\nexport interface EnvironmentStorage {\n  API: string;\n  countryCode: ID;\n}\n\nexport const ENVIRONMENT_STORAGE = new InjectionToken<EnvironmentStorage>('app.environment-storage');\n","export * from './countries.query';\nexport * from './countries.store';\nexport * from './countries.service';\nexport * from './country.model';\n","import {Injectable} from '@angular/core';\nimport {EntityState, EntityStore, StoreConfig} from '@datorama/akita';\nimport {Country} from './country.model';\n\nexport interface CountriesState extends EntityState<Country> {\n}\n\n@Injectable({providedIn: 'root'})\n@StoreConfig({name: 'countries', idKey: 'country_code'})\nexport class CountriesStore extends EntityStore<CountriesState> {\n\n  constructor() {\n    super();\n  }\n\n}\n\n","import {Inject, Injectable} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {LOCATION_DETECTION, LocationDetection} from '../../shared/models/location-detection.model';\nimport {BehaviorSubject, merge, noop} from 'rxjs';\nimport {ENVIRONMENT_STORAGE, EnvironmentStorage, EnvironmentStorageKey} from './environment.model';\nimport {SyncStorageService} from '../extension/storage/sync-storage.service';\nimport {filter, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnvironmentService {\n  API = environment.urls.API_EU;\n\n  constructor(@Inject(LOCATION_DETECTION) protected locationDetection: BehaviorSubject<LocationDetection>,\n              @Inject(ENVIRONMENT_STORAGE) protected environmentStorage: BehaviorSubject<EnvironmentStorage>,\n              protected syncStorageService: SyncStorageService) {\n    this.resolveAPI();\n    merge(\n      environmentStorage.pipe(\n        filter(value => !!value && !!value.API)\n      ),\n      syncStorageService.onChange().pipe(\n        filter(changes => changes[EnvironmentStorageKey.LOCATION] && changes[EnvironmentStorageKey.LOCATION].newValue),\n        map((changes): EnvironmentStorage => changes[EnvironmentStorageKey.LOCATION].newValue),\n      )\n    ).subscribe(value => this.API = value.API);\n  }\n\n  resolveAPI() {\n    const environmentStorage = this.environmentStorage.getValue();\n\n    if (environmentStorage && environmentStorage.API) {\n      this.API = environmentStorage.API;\n    } else {\n      const locationDetection = this.locationDetection.getValue();\n\n      if (!locationDetection.is_teacher) {\n        this.API = locationDetection.us_location_detected ? environment.urls.API_US : environment.urls.API_EU;\n        this.setAPI(this.API);\n      } else if (locationDetection.existing_user_setup_in_eu) {\n        this.API = environment.urls.API_EU;\n        this.setAPI(this.API);\n      }\n    }\n  }\n\n  setAPI(API: string, locally = false) {\n    const environmentStorage = this.environmentStorage.getValue();\n    this.environmentStorage.next({...environmentStorage, API});\n\n    if (!locally) {\n      this.sync();\n    }\n  }\n\n  sync() {\n    const environmentStorage = this.environmentStorage.getValue();\n    this.syncStorageService.set(EnvironmentStorageKey.LOCATION, {...environmentStorage}).subscribe(noop);\n  }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport template from './agreement-missing-what-now.component.html';\nimport style from './agreement-missing-what-now.component.scss';\nimport {MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-agreement-missing-what-now',\n  template,\n  styles: [style],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AgreementMissingWhatNowComponent {\n\n  constructor(protected dialogRef: MatDialogRef<AgreementMissingWhatNowComponent>) { }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ID} from '@datorama/akita';\nimport {Observable, of} from 'rxjs';\nimport {School, SchoolRequest} from './school.interface';\nimport {SchoolsQuery} from './schools.query';\nimport {SchoolsStore} from './schools.store';\nimport {HttpService} from '../../../core/http/http.service';\nimport {catchError, take} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class SchoolsService {\n  constructor(private schoolsStore: SchoolsStore,\n              private schoolsQuery: SchoolsQuery,\n              private http: HttpService) {\n  }\n\n  private updateSchools(schools: School[]): void {\n    this.schoolsStore.set(schools);\n    this.schoolsStore.setLoading(false);\n  }\n\n  public fetchSchools(educationalSystemId?: number): Observable<School[]> {\n    const schoolsDataSource: Observable<School[]> = this.http.get<School[]>('/schools/school/', {educational_system: educationalSystemId})\n      .pipe(\n        catchError(() => of([])),\n      );\n\n    schoolsDataSource.subscribe((schools: School[]): void => {\n      this.updateSchools(schools);\n    });\n\n    return schoolsDataSource;\n  }\n\n  public fetchSchoolsFromCountry(countryCode: ID): Observable<School[]> {\n    const schoolsDataSource: Observable<School[]> = this.http.get<School[]>('/schools/school/', {country_code: countryCode})\n      .pipe(\n        catchError(() => of([])),\n      );\n\n    schoolsDataSource.subscribe((schools: School[]): void => {\n      this.updateSchools(schools);\n    });\n\n    return schoolsDataSource;\n  }\n\n  public fetchSchool(id: ID): Observable<School> {\n    if (id) {\n      const schoolDataSource: Observable<School> = this.http.get<School>(`/schools/school/${id}/`).pipe(\n        catchError(() => of(null)),\n      );\n\n      schoolDataSource.subscribe(school => this.schoolsStore.add(school));\n\n      return schoolDataSource;\n    } else {\n      return of(null);\n    }\n  }\n\n  public setActive(id: ID): void {\n    if (Number.isSafeInteger(+`${id}`) && id > 0) {\n      if (this.schoolsQuery.hasEntity(id)) {\n        this.schoolsStore.setActive(id);\n      } else {\n        this.fetchSchool(id).subscribe(() => {\n          if (this.schoolsQuery.hasEntity(id)) {\n            this.schoolsStore.setActive(id);\n          }\n        });\n      }\n    }\n  }\n\n  registerSchool(schoolRequest: SchoolRequest) {\n    return this.http.post<SchoolRequest>('/v3/schools/school-request/', schoolRequest).pipe(\n      take(1)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { Student } from './student.model';\n\nexport interface StudentState extends EntityState<Student> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'student' })\nexport class StudentStore extends EntityStore<StudentState> {\n\n  constructor() {\n    super();\n  }\n\n}\n\n","export * from './assessments-visibility-dialog.query';\nexport * from './assessments-visibility-dialog.store';\nexport * from './assessments-visibility-dialog.service';\nexport * from './assessments-visibility-dialog.model';\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { AssessmentsVisibilityDialog } from './assessments-visibility-dialog.model';\n\nexport interface AssessmentsVisibilityDialogState extends EntityState<AssessmentsVisibilityDialog> {}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'assessmentsVisibilityDialog' })\nexport class AssessmentsVisibilityDialogStore extends EntityStore<AssessmentsVisibilityDialogState> {\n\n  constructor() {\n    super();\n  }\n\n}\n\n","import {ComponentType} from '@angular/cdk/portal';\nimport {Inject, Injectable} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatDialog, MatDialogConfig} from '@angular/material';\nimport {ID} from '@datorama/akita';\nimport {Observable, of} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {AssessmentVisibilityDialogComponent} from '../assessment-visibility-dialog.component';\nimport {AssessmentVisibilityDialogQuery} from './assessment-visibility-dialog.query';\nimport {AssessmentVisibilityDialogStore} from './assessment-visibility-dialog.store';\nimport {AssessmentVisibilityDialog} from '../../../../assignment/assessments/state';\n\n@Injectable({providedIn: 'root'})\nexport class AssessmentVisibilityDialogService {\n  static DEFAULT_CONFIG: MatDialogConfig<ID> = {\n    hasBackdrop: true,\n    minHeight: 340,\n    maxWidth: 525,\n  };\n\n  constructor(protected assessmentVisibilityDialogQuery: AssessmentVisibilityDialogQuery,\n              protected assessmentVisibilityDialogStore: AssessmentVisibilityDialogStore,\n              protected formBuilder: FormBuilder,\n              protected matDialog: MatDialog,\n              @Inject('AssessmentVisibilityDialogComponent') protected assessmentVisibilityDialogComponent: ComponentType<AssessmentVisibilityDialogComponent>) {\n  }\n\n  createFormGroup(id: ID): FormGroup {\n    const assessmentVisibilityDialogState: AssessmentVisibilityDialog = this.assessmentVisibilityDialogQuery.hasEntity(id) ?\n      this.assessmentVisibilityDialogQuery.getEntity(id) : this.build(id);\n\n    return this.formBuilder.group(assessmentVisibilityDialogState);\n  }\n\n  save(assessmentVisibilityDialog: AssessmentVisibilityDialog) {\n    this.assessmentVisibilityDialogStore.upsert(assessmentVisibilityDialog.id, assessmentVisibilityDialog);\n  }\n\n  open(id: ID): Observable<AssessmentVisibilityDialog> {\n    const entity = this.assessmentVisibilityDialogQuery.getEntity(id);\n\n    return entity && entity.saved ?\n      of(entity) :\n      this.matDialog\n        .open(this.assessmentVisibilityDialogComponent, {\n          ...AssessmentVisibilityDialogService.DEFAULT_CONFIG,\n          data: id,\n        })\n        .afterClosed()\n        .pipe(filter(Boolean));\n  }\n\n  protected build(id: ID): AssessmentVisibilityDialog {\n    return {\n      id,\n      result_visible: true,\n      overall_feedback_visible: true,\n      objectives_feedback_visible: true,\n      grades_visible: true,\n      saved: false,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { AssessmentVisibilityDialog } from './assessment-visibility-dialog.interface';\n\n\nexport interface AssessmentVisibilityDialogState extends EntityState<AssessmentVisibilityDialog> {\n\n}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'assessmentVisibilityDialog' })\nexport class AssessmentVisibilityDialogStore extends EntityStore<AssessmentVisibilityDialogState> {\n  constructor() {\n    super();\n  }\n}\n","const english = require('./_locales/en/messages.json');\n\nlet language;\nconst getLanguage = () => {\n  if (language) {\n    return language;\n  }\n  if (window.navigator.languages) {\n    // eslint-disable-next-line prefer-destructuring\n    language = window.navigator.languages[0];\n  } else {\n    language = window.navigator.userLanguage || window.navigator.language;\n  }\n\n  // is there a need to support eg. en-Us and en-Gb? How?\n  // eslint-disable-next-line prefer-destructuring\n  language = language.split('-')[0];\n\n  try {\n    // eslint-disable-next-line global-require,import/no-dynamic-require\n    return require(`./_locales/${language}/messages.json`);\n  } catch (e) {\n    console.log(`Missing ${language} translations`);\n    return english;\n  }\n};\nlanguage = getLanguage();\n\nconst getTranslation = (label) => language[label].message || english[label].message;\n\nexport {\n  getTranslation,\n};\n","import { Type } from '@angular/core';\nimport { downgradeComponent as dc, downgradeInjectable as di } from '@angular/upgrade/static';\nimport angular from 'angular';\nimport { environment } from '../environments/environment';\n\nexport const downgradeComponent: (componentName: string, component: Type<any>) => void =\n  (componentName: string, component: Type<any>): void => {\n    angular.module(environment.appName).directive(componentName, dc({ component }));\n  };\n\nexport const downgradeInjectable: (injectableName: string, injectable: Type<any>) => void =\n  (injectableName: string, injectable: Type<any>): void => {\n    angular.module(environment.appName).factory(injectableName, di(injectable));\n  };\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatDividerModule, MatSelectModule} from '@angular/material';\nimport {AssessmentStatusIconModule} from './assessment-status-icon/assessment-status-icon.module';\nimport {AssignmentTypeIconModule} from './assignment-type-icon/assignment-type-icon.module';\nimport {BaseMainMenuModule} from './base-main-menu/base-main-menu.module';\nimport {PipesModule} from '../pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    AssessmentStatusIconModule,\n    AssignmentTypeIconModule,\n    BaseMainMenuModule,\n    CommonModule,\n    MatDividerModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    PipesModule,\n  ],\n  exports: [\n    AssessmentStatusIconModule,\n    AssignmentTypeIconModule,\n    BaseMainMenuModule,\n  ],\n})\nexport class ComponentsModule {\n  constructor() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { MainMenu, MainMenuID } from './main-menu.interface';\n\nexport interface MainMenuState extends EntityState<MainMenu> {}\n\nfunction createInitialState(userType: 'teacher' | 'student'): MainMenu[] {\n  return [\n    {\n      icon: 'assignment',\n      iconColor: 'green-icon',\n      id: MainMenuID.ASSIGNMENT,\n      label: 'assignmentsMainMenu',\n      state: `${userType}Assignments`,\n    },\n    {\n      icon: 'school',\n      iconColor: 'pink-icon',\n      id: MainMenuID.COURSE_PROGRESS,\n      label: 'courseProgressionMainMenu',\n      state: `${userType}-course-progress`,\n    },\n    {\n      icon: 'book',\n      iconColor: 'blue-icon',\n      id: MainMenuID.CURRICULUM,\n      label: 'courseRequirementsMainMenu',\n      state: `${userType}CourseManagement`,\n    },\n  ];\n}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'mainMenu ' })\nexport class MainMenuStore extends EntityStore<MainMenuState> {\n  constructor() {\n    super();\n  }\n\n  public initialize(userType: 'teacher' | 'student'): void {\n    this.set(createInitialState(userType));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, StoreConfig } from '@datorama/akita';\nimport { Ui } from './ui.interface';\n\nexport interface UiState {\n  isMainMenuVisible: boolean;\n}\n\nexport function createInitialState(): UiState {\n  return {\n    isMainMenuVisible: false,\n  };\n}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'ui' })\nexport class UiStore extends Store<Ui> {\n  constructor() {\n    super(createInitialState());\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SetupComponent} from './setup.component';\nimport {SharedModule} from '../../shared.module';\nimport {downgradeComponent} from '../../../downgrade';\nimport {SetupStepsModule} from './setup-steps/setup-steps.module';\n\n@NgModule({\n  declarations: [\n    SetupComponent,\n  ],\n  imports: [\n    CommonModule,\n    SetupStepsModule,\n  ],\n  exports: [\n    SetupComponent,\n    SetupStepsModule,\n  ],\n  entryComponents: [\n    SetupComponent,\n  ]\n})\nexport class SetupModule {\n  constructor() {\n    downgradeComponent('appSetup', SetupComponent);\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport interface UserInfo {\n  agreement_seen: boolean;\n  existing_user_setup: boolean;\n  gdpr_check: boolean;\n  whitelisted_domain: boolean;\n}\n\nexport const USER_INFO = new InjectionToken<UserInfo>('app.user-info');\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { CountriesStore, CountriesState } from './countries.store';\n\n@Injectable({ providedIn: 'root' })\nexport class CountriesQuery extends QueryEntity<CountriesState> {\n\n  constructor(protected store: CountriesStore) {\n    super(store);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SyncStorageService {\n  protected readonly onChange$ = new Subject<{ [key: string]: chrome.storage.StorageChange }>();\n\n  constructor() {\n    this.addListener();\n  }\n\n  get<T = any>(key: string) {\n    return new Observable<T>(subscriber => {\n      const message = {\n        action: 'storageGet',\n        key,\n      };\n\n      chrome.runtime.sendMessage(message, (response: T) => {\n        subscriber.next(response);\n        subscriber.complete();\n      });\n    });\n  }\n\n  set<T = any>(key: string, value: T) {\n    return new Observable<void>(subscriber => {\n      const message = {\n        action: 'storageSet',\n        key,\n        value,\n      };\n\n      chrome.runtime.sendMessage(message, () => {\n        subscriber.next();\n        subscriber.complete();\n      });\n    });\n  }\n\n  update<T = any>(key: string, value: T) {\n    return new Observable<void>(subscriber => {\n      const message = {\n        action: 'storageUpdate',\n        key,\n        value,\n      };\n\n      chrome.runtime.sendMessage(message, () => {\n        subscriber.next();\n        subscriber.complete();\n      });\n    });\n  }\n\n  remove(key: string) {\n    return new Observable<void>(subscriber => {\n      const message = {\n        action: 'storageRemove',\n        key,\n      };\n\n      chrome.runtime.sendMessage(message, () => {\n        subscriber.next();\n        subscriber.complete();\n      });\n    });\n  }\n\n  onChange() {\n    return this.onChange$;\n  }\n\n  protected addListener() {\n    chrome.storage.onChanged.addListener((storageChange: { [key: string]: chrome.storage.StorageChange }, areaName: string) => {\n      if (areaName === 'sync') {\n        this.onChange$.next({...storageChange});\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { SchoolsState, SchoolsStore } from './schools.store';\n\n@Injectable({ providedIn: 'root' })\nexport class SchoolsQuery extends QueryEntity<SchoolsState> {\n  constructor(protected store: SchoolsStore) {\n    super(store);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntityState, EntityStore, StoreConfig } from '@datorama/akita';\nimport { School } from './school.interface';\n\nexport interface SchoolsState extends EntityState<School> {}\n\nexport function createInitialState(): SchoolsState {\n  return {\n    loading: false,\n  };\n}\n\n@Injectable({ providedIn: 'root' })\n@StoreConfig({ name: 'schools' })\nexport class SchoolsStore extends EntityStore<SchoolsState> {\n  constructor() {\n    super(createInitialState());\n  }\n}\n","export * from './student.query';\nexport * from './student.store';\nexport * from './student.service';\nexport * from './student.model';\n","import { Injectable } from '@angular/core';\nimport { ID, QueryEntity } from '@datorama/akita';\nimport { StudentState, StudentStore } from './student.store';\n\n@Injectable({ providedIn: 'root' })\nexport class StudentQuery extends QueryEntity<StudentState> {\n\n  constructor(protected store: StudentStore) {\n    super(store);\n  }\n\n  selectAllByAssessmentInCourse(assessmentID: ID, courseID: ID) {\n    return this.selectAll({\n      filterBy: [\n        entity => entity.assessments.includes(assessmentID),\n        entity => entity.courses.includes(courseID),\n      ]\n    });\n  }\n\n  getAllByAssessmentInCourse(assessmentID: ID, courseID: ID) {\n    return this.getAll({\n      filterBy: [\n        entity => entity.assessments.includes(assessmentID),\n        entity => entity.courses.includes(courseID),\n      ]\n    });\n  }\n\n}\n","import { ID } from '@datorama/akita';\nimport { AssessmentStatus } from '../../../../../../shared/models/assessment.model';\n\nexport enum AssessmentVisibility {\n  GRADE,\n  OBJECTIVES_FEEDBACK,\n  OVERALL_FEEDBACK,\n  RESULT\n}\n\nexport interface AssessmentVisibilityOption {\n  label: string;\n  value: AssessmentVisibility;\n}\n\nexport interface AssessmentStudentOption {\n  label: string;\n  value: ID;\n}\n\nexport interface AssessmentsVisibilityDialogForm {\n  visibilities: AssessmentVisibility[];\n  studentsID: ID[];\n  status: AssessmentStatus;\n}\n\nexport interface AssessmentsVisibilityDialog {\n  id: ID;\n  grades_visible: boolean;\n  objectives_feedback_visible: boolean;\n  overall_feedback_visible: boolean;\n  result_visible: boolean;\n}\n\nexport interface AssessmentsVisibility {\n  grades_visible: boolean;\n  objectives_feedback_visible: boolean;\n  overall_feedback_visible: boolean;\n  result_visible: boolean;\n  status: AssessmentStatus;\n  student_ids: ID[];\n}\n\nexport function createAssessmentsVisibilityDialog(params: Partial<AssessmentsVisibilityDialog>) {\n  return {} as AssessmentsVisibilityDialog;\n}\n","import { Injectable } from '@angular/core';\nimport { QueryEntity } from '@datorama/akita';\nimport { AssessmentVisibilityDialogState, AssessmentVisibilityDialogStore } from './assessment-visibility-dialog.store';\n\n@Injectable({ providedIn: 'root' })\nexport class AssessmentVisibilityDialogQuery extends QueryEntity<AssessmentVisibilityDialogState> {\n  constructor(protected assessmentVisibilityDialogStore: AssessmentVisibilityDialogStore) {\n    super(assessmentVisibilityDialogStore);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FetchData} from '../../ajs-upgraded-providers';\nimport {from, Observable} from 'rxjs';\nimport {Params} from '@angular/router';\nimport {HttpRequestType} from './http.model';\nimport {HttpCacheQuery, HttpCacheService} from './state';\nimport {shareReplay, tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(protected fetchData: FetchData, protected httpCacheService: HttpCacheService, protected httpCacheQuery: HttpCacheQuery) {\n  }\n\n  request<T = any>(url: string, type: HttpRequestType, body?: any, params: Params = {}): Observable<T> {\n    const id = this.httpCacheService.generateID(url, type, body, params);\n\n    if (this.httpCacheQuery.hasEntity(id)) {\n      return this.httpCacheQuery.getEntity(id).source;\n    }\n\n    const request: PromiseLike<T> = this.fetchData.sendAPIRequestWithParams(params, url, type, body);\n    const source = from(request).pipe(\n      tap(() => this.httpCacheService.delete(id)),\n      shareReplay(1),\n    );\n\n    this.httpCacheService.add<T>(source, url, type, body, params);\n\n    return source;\n  }\n\n  delete<T = any>(url: string, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.DELETE, null, params);\n  }\n\n  get<T = any>(url: string, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.GET, null, params);\n  }\n\n  head<T = any>(url: string, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.HEAD, null, params);\n  }\n\n  options<T = any>(url: string, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.OPTIONS, null, params);\n  }\n\n  patch<T = any>(url: string, body?: any, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.PATCH, body, params);\n  }\n\n  post<T = any>(url: string, body?: any, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.POST, body, params);\n  }\n\n  put<T = any>(url: string, body?: any, params: Params = {}): Observable<T> {\n    return this.request<T>(url, HttpRequestType.PUT, body, params);\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatStepperModule,\n  MatTabsModule,\n  MatTooltipModule\n} from '@angular/material';\nimport {downgradeInjectable} from '../downgrade';\nimport {ComponentsModule} from './components/components.module';\nimport {DirectivesModule} from './directives/directives.module';\nimport {PipesModule} from './pipes/pipes.module';\nimport {MainMenuService} from './states/main-menu/main-menu.service';\nimport {UiService} from './states/ui/ui.service';\nimport {UserQuery, UserService} from './states/user';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {UpgradesModule} from './upgrades/upgrades.module';\nimport {ModulesModule} from './modules/modules.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    DirectivesModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTooltipModule,\n    ModulesModule,\n    PipesModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    UpgradesModule,\n  ],\n  exports: [\n    CommonModule,\n    ComponentsModule,\n    DirectivesModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatTooltipModule,\n    ModulesModule,\n    PipesModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    UpgradesModule,\n  ],\n})\nexport class SharedModule {\n  constructor() {\n    downgradeInjectable('MainMenuService', MainMenuService);\n    downgradeInjectable('UiService', UiService);\n    downgradeInjectable('UserQuery', UserQuery);\n    downgradeInjectable('UserService', UserService);\n  }\n}\n","import { Type } from '@angular/core';\n\nexport interface IProviderUpgrade {\n  provide: Type<any>;\n  useFactory: (...args: any[]) => any;\n  deps: string[];\n}\n\nexport class UpgradedProviders {\n  static providers: IProviderUpgrade[] = [];\n}\n\nexport abstract class SimpleProvider {\n  [porp: string]: any;\n}\n\nexport class FetchData extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: FetchData,\n  useFactory: ($injector: any): any => $injector.get('FetchData'),\n  deps: ['$injector'],\n});\n\nexport class Updates extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: Updates,\n  useFactory: ($injector: any): any => $injector.get('Updates'),\n  deps: ['$injector'],\n});\n\nexport class Path extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: Path,\n  useFactory: ($injector: any): any => $injector.get('Path'),\n  deps: ['$injector'],\n});\n\nexport class TeacherAssignmentsService extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: TeacherAssignmentsService,\n  useFactory: ($injector: any): any => $injector.get('TeacherAssignmentsService'),\n  deps: ['$injector'],\n});\n\nexport class UserInfo extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: UserInfo,\n  useFactory: ($injector: any): any => $injector.get('UserInfo'),\n  deps: ['$injector'],\n});\n\nexport class RootScope extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: RootScope,\n  useFactory: ($injector: any): any => $injector.get('$rootScope'),\n  deps: ['$injector']\n});\n\nexport class UserSetupDialog extends SimpleProvider {}\n\nUpgradedProviders.providers.push({\n  provide: UserSetupDialog,\n  useFactory: ($injector: any): any => $injector.get('UserSetupDialog'),\n  deps: ['$injector']\n});\n\n"],"sourceRoot":""}